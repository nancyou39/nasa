"use strict";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var __importStar = void 0 && (void 0).__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result["default"] = mod;
  return result;
};

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var React = __importStar(require("react"));

var miscUtil_1 = require("../utils/miscUtil");

var dateUtil_1 = require("../utils/dateUtil");

var useWeekDisabled_1 = __importDefault(require("./useWeekDisabled"));

function useRangeDisabled(_ref) {
  var picker = _ref.picker,
      locale = _ref.locale,
      selectedValue = _ref.selectedValue,
      disabledDate = _ref.disabledDate,
      disabled = _ref.disabled,
      generateConfig = _ref.generateConfig;
  var startDate = miscUtil_1.getValue(selectedValue, 0);
  var endDate = miscUtil_1.getValue(selectedValue, 1);
  var disabledStartDate = React.useCallback(function (date) {
    if (disabledDate && disabledDate(date)) {
      return true;
    }

    if (disabled[1] && endDate) {
      return !dateUtil_1.isSameDate(generateConfig, date, endDate) && generateConfig.isAfter(date, endDate);
    }

    return false;
  }, [disabledDate, disabled[1], endDate]);
  var disableEndDate = React.useCallback(function (date) {
    if (disabledDate && disabledDate(date)) {
      return true;
    }

    if (startDate) {
      var compareStartDate = picker === 'week' ? generateConfig.addDate(startDate, -7) : startDate;
      return !dateUtil_1.isSameDate(generateConfig, date, compareStartDate) && generateConfig.isAfter(compareStartDate, date);
    }

    return false;
  }, [disabledDate, startDate, picker]); // Handle week date disabled

  var sharedWeekDisabledConfig = {
    generateConfig: generateConfig,
    locale: locale
  };

  var _useWeekDisabled_1$de = useWeekDisabled_1.default(_objectSpread({}, sharedWeekDisabledConfig, {
    disabledDate: disabledStartDate
  })),
      _useWeekDisabled_1$de2 = _slicedToArray(_useWeekDisabled_1$de, 1),
      disabledStartWeekDate = _useWeekDisabled_1$de2[0];

  var _useWeekDisabled_1$de3 = useWeekDisabled_1.default(_objectSpread({}, sharedWeekDisabledConfig, {
    disabledDate: disableEndDate
  })),
      _useWeekDisabled_1$de4 = _slicedToArray(_useWeekDisabled_1$de3, 1),
      disabledEndWeekDate = _useWeekDisabled_1$de4[0];

  if (picker === 'week') {
    return [disabledStartWeekDate, disabledEndWeekDate];
  }

  return [disabledStartDate, disableEndDate];
}

exports.default = useRangeDisabled;