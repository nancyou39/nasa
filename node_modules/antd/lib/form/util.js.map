{"version":3,"sources":["form/util.js"],"names":["useCacheErrors","errors","changeTrigger","directly","cacheRef","React","useRef","visible","length","useState","forceUpdate","update","prevVisible","current","newVisible","prevErrors","some","prevErr","index","useEffect","timeout","setTimeout","clearTimeout","toArray","candidate","undefined","Array","isArray","getFieldId","namePath","formName","mergedId","join","useForm","form","rcForm","wrapForm","useMemo","__INTERNAL__","scrollToField","name","options","fieldId","node","document","getElementById","scrollMode","block"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useForm as useRcForm } from 'rc-field-form';\nimport scrollIntoView from 'scroll-into-view-if-needed';\n/**\n * Always debounce error to avoid [error -> null -> error] blink\n */\nexport function useCacheErrors(errors, changeTrigger, directly) {\n    const cacheRef = React.useRef({\n        errors,\n        visible: !!errors.length,\n    });\n    const [, forceUpdate] = React.useState({});\n    const update = () => {\n        const prevVisible = cacheRef.current.visible;\n        const newVisible = !!errors.length;\n        const prevErrors = cacheRef.current.errors;\n        cacheRef.current.errors = errors;\n        cacheRef.current.visible = newVisible;\n        if (prevVisible !== newVisible) {\n            changeTrigger(newVisible);\n        }\n        else if (prevErrors.length !== errors.length ||\n            prevErrors.some((prevErr, index) => prevErr !== errors[index])) {\n            forceUpdate({});\n        }\n    };\n    React.useEffect(() => {\n        if (!directly) {\n            const timeout = setTimeout(update, 10);\n            return () => clearTimeout(timeout);\n        }\n    }, [errors]);\n    if (directly) {\n        update();\n    }\n    return [cacheRef.current.visible, cacheRef.current.errors];\n}\nexport function toArray(candidate) {\n    if (candidate === undefined || candidate === false)\n        return [];\n    return Array.isArray(candidate) ? candidate : [candidate];\n}\nexport function getFieldId(namePath, formName) {\n    if (!namePath.length)\n        return undefined;\n    const mergedId = namePath.join('_');\n    return formName ? `${formName}_${mergedId}` : mergedId;\n}\nexport function useForm(form) {\n    const [rcForm] = useRcForm();\n    const wrapForm = React.useMemo(() => form || Object.assign(Object.assign({}, rcForm), { __INTERNAL__: {}, scrollToField: (name, options = {}) => {\n            const namePath = toArray(name);\n            const fieldId = getFieldId(namePath, wrapForm.__INTERNAL__.name);\n            const node = fieldId ? document.getElementById(fieldId) : null;\n            if (node) {\n                scrollIntoView(node, Object.assign({ scrollMode: 'if-needed', block: 'nearest' }, options));\n            }\n        } }), [form, rcForm]);\n    return [wrapForm];\n}\n"],"file":"util.js"}