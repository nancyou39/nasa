{"version":3,"sources":["statistic/Statistic.jsx"],"names":["Statistic","props","prefixCls","className","style","valueStyle","value","title","valueRender","prefix","suffix","direction","valueNode","cls","defaultProps","decimalSeparator","groupSeparator","WrapperStatistic"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;AACA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,MACfC,SADe,GACwFD,KADxF,CACfC,SADe;AAAA,MACJC,SADI,GACwFF,KADxF,CACJE,SADI;AAAA,MACOC,KADP,GACwFH,KADxF,CACOG,KADP;AAAA,MACcC,UADd,GACwFJ,KADxF,CACcI,UADd;AAAA,qBACwFJ,KADxF,CAC0BK,KAD1B;AAAA,MAC0BA,KAD1B,6BACkC,CADlC;AAAA,MACqCC,KADrC,GACwFN,KADxF,CACqCM,KADrC;AAAA,MAC4CC,WAD5C,GACwFP,KADxF,CAC4CO,WAD5C;AAAA,MACyDC,MADzD,GACwFR,KADxF,CACyDQ,MADzD;AAAA,MACiEC,MADjE,GACwFT,KADxF,CACiES,MADjE;AAAA,MACyEC,SADzE,GACwFV,KADxF,CACyEU,SADzE;AAEvB,MAAIC,SAAS,GAAG,oBAAC,kBAAD,eAAqBX,KAArB;AAA4B,IAAA,KAAK,EAAEK;AAAnC,KAAhB;;AACA,MAAIE,WAAJ,EAAiB;AACbI,IAAAA,SAAS,GAAGJ,WAAW,CAACI,SAAD,CAAvB;AACH;;AACD,MAAMC,GAAG,GAAG,4BAAWX,SAAX,EAAsBC,SAAtB,gCACJD,SADI,WACcS,SAAS,KAAK,KAD5B,EAAZ;AAGA,SAAQ;AAAK,IAAA,SAAS,EAAEE,GAAhB;AAAqB,IAAA,KAAK,EAAET;AAA5B,KACLG,KAAK,IAAI;AAAK,IAAA,SAAS,YAAKL,SAAL;AAAd,KAAuCK,KAAvC,CADJ,EAEN;AAAK,IAAA,KAAK,EAAEF,UAAZ;AAAwB,IAAA,SAAS,YAAKH,SAAL;AAAjC,KACGO,MAAM,IAAI;AAAM,IAAA,SAAS,YAAKP,SAAL;AAAf,KAAiDO,MAAjD,CADb,EAEGG,SAFH,EAGGF,MAAM,IAAI;AAAM,IAAA,SAAS,YAAKR,SAAL;AAAf,KAAiDQ,MAAjD,CAHb,CAFM,CAAR;AAQH,CAjBD;;AAkBAV,SAAS,CAACc,YAAV,GAAyB;AACrBC,EAAAA,gBAAgB,EAAE,GADG;AAErBC,EAAAA,cAAc,EAAE;AAFK,CAAzB;AAIA,IAAMC,gBAAgB,GAAG,iCAAmB;AACxCf,EAAAA,SAAS,EAAE;AAD6B,CAAnB,EAEtBF,SAFsB,CAAzB;eAGeiB,gB","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { withConfigConsumer } from '../config-provider/context';\nimport StatisticNumber from './Number';\nconst Statistic = props => {\n    const { prefixCls, className, style, valueStyle, value = 0, title, valueRender, prefix, suffix, direction, } = props;\n    let valueNode = <StatisticNumber {...props} value={value}/>;\n    if (valueRender) {\n        valueNode = valueRender(valueNode);\n    }\n    const cls = classNames(prefixCls, className, {\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n    });\n    return (<div className={cls} style={style}>\n      {title && <div className={`${prefixCls}-title`}>{title}</div>}\n      <div style={valueStyle} className={`${prefixCls}-content`}>\n        {prefix && <span className={`${prefixCls}-content-prefix`}>{prefix}</span>}\n        {valueNode}\n        {suffix && <span className={`${prefixCls}-content-suffix`}>{suffix}</span>}\n      </div>\n    </div>);\n};\nStatistic.defaultProps = {\n    decimalSeparator: '.',\n    groupSeparator: ',',\n};\nconst WrapperStatistic = withConfigConsumer({\n    prefixCls: 'statistic',\n})(Statistic);\nexport default WrapperStatistic;\n"],"file":"Statistic.js"}