{"version":3,"sources":["statistic/utils.jsx"],"names":["timeUnits","formatTimeStr","duration","format","leftDuration","escapeRegex","keepList","match","map","str","slice","templateText","replace","replacedText","reduce","current","name","unit","indexOf","value","Math","floor","RegExp","len","length","toString","index","formatCountdown","config","target","Date","getTime","now","diff","max"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AACA;AACA,IAAMA,SAAS,GAAG,CACd,CAAC,GAAD,EAAM,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,GAA5B,CADc,EAEd,CAAC,GAAD,EAAM,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAjB,GAAsB,EAA5B,CAFc,EAGd,CAAC,GAAD,EAAM,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAvB,CAHc,EAId,CAAC,GAAD,EAAM,OAAO,EAAP,GAAY,EAAlB,CAJc,EAKd,CAAC,GAAD,EAAM,OAAO,EAAb,CALc,EAMd,CAAC,GAAD,EAAM,IAAN,CANc,EAOd,CAAC,GAAD,EAAM,CAAN,CAPc,CAAlB;;AASO,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,MAAjC,EAAyC;AAC5C,MAAIC,YAAY,GAAGF,QAAnB;AACA,MAAMG,WAAW,GAAG,aAApB;AACA,MAAMC,QAAQ,GAAG,CAACH,MAAM,CAACI,KAAP,CAAaF,WAAb,KAA6B,EAA9B,EAAkCG,GAAlC,CAAsC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAJ;AAAA,GAAzC,CAAjB;AACA,MAAMC,YAAY,GAAGR,MAAM,CAACS,OAAP,CAAeP,WAAf,EAA4B,IAA5B,CAArB;AACA,MAAMQ,YAAY,GAAGb,SAAS,CAACc,MAAV,CAAiB,UAACC,OAAD,QAA2B;AAAA;AAAA,QAAhBC,IAAgB;AAAA,QAAVC,IAAU;;AAC7D,QAAIF,OAAO,CAACG,OAAR,CAAgBF,IAAhB,MAA0B,CAAC,CAA/B,EAAkC;AAC9B,UAAMG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWjB,YAAY,GAAGa,IAA1B,CAAd;AACAb,MAAAA,YAAY,IAAIe,KAAK,GAAGF,IAAxB;AACA,aAAOF,OAAO,CAACH,OAAR,CAAgB,IAAIU,MAAJ,WAAcN,IAAd,QAAuB,GAAvB,CAAhB,EAA6C,UAACT,KAAD,EAAW;AAC3D,YAAMgB,GAAG,GAAGhB,KAAK,CAACiB,MAAlB;AACA,eAAO,0BAASL,KAAK,CAACM,QAAN,EAAT,EAA2BF,GAA3B,EAAgC,GAAhC,CAAP;AACH,OAHM,CAAP;AAIH;;AACD,WAAOR,OAAP;AACH,GAVoB,EAUlBJ,YAVkB,CAArB;AAWA,MAAIe,KAAK,GAAG,CAAZ;AACA,SAAOb,YAAY,CAACD,OAAb,CAAqBP,WAArB,EAAkC,YAAM;AAC3C,QAAME,KAAK,GAAGD,QAAQ,CAACoB,KAAD,CAAtB;AACAA,IAAAA,KAAK,IAAI,CAAT;AACA,WAAOnB,KAAP;AACH,GAJM,CAAP;AAKH;;AACM,SAASoB,eAAT,CAAyBR,KAAzB,EAAgCS,MAAhC,EAAwC;AAAA,uBACnBA,MADmB,CACnCzB,MADmC;AAAA,MACnCA,MADmC,+BAC1B,EAD0B;AAE3C,MAAM0B,MAAM,GAAG,IAAIC,IAAJ,CAASX,KAAT,EAAgBY,OAAhB,EAAf;AACA,MAAMhB,OAAO,GAAGe,IAAI,CAACE,GAAL,EAAhB;AACA,MAAMC,IAAI,GAAGb,IAAI,CAACc,GAAL,CAASL,MAAM,GAAGd,OAAlB,EAA2B,CAA3B,CAAb;AACA,SAAOd,aAAa,CAACgC,IAAD,EAAO9B,MAAP,CAApB;AACH","sourcesContent":["import padStart from 'lodash/padStart';\n// Countdown\nconst timeUnits = [\n    ['Y', 1000 * 60 * 60 * 24 * 365],\n    ['M', 1000 * 60 * 60 * 24 * 30],\n    ['D', 1000 * 60 * 60 * 24],\n    ['H', 1000 * 60 * 60],\n    ['m', 1000 * 60],\n    ['s', 1000],\n    ['S', 1],\n];\nexport function formatTimeStr(duration, format) {\n    let leftDuration = duration;\n    const escapeRegex = /\\[[^\\]]*\\]/g;\n    const keepList = (format.match(escapeRegex) || []).map(str => str.slice(1, -1));\n    const templateText = format.replace(escapeRegex, '[]');\n    const replacedText = timeUnits.reduce((current, [name, unit]) => {\n        if (current.indexOf(name) !== -1) {\n            const value = Math.floor(leftDuration / unit);\n            leftDuration -= value * unit;\n            return current.replace(new RegExp(`${name}+`, 'g'), (match) => {\n                const len = match.length;\n                return padStart(value.toString(), len, '0');\n            });\n        }\n        return current;\n    }, templateText);\n    let index = 0;\n    return replacedText.replace(escapeRegex, () => {\n        const match = keepList[index];\n        index += 1;\n        return match;\n    });\n}\nexport function formatCountdown(value, config) {\n    const { format = '' } = config;\n    const target = new Date(value).getTime();\n    const current = Date.now();\n    const diff = Math.max(target - current, 0);\n    return formatTimeStr(diff, format);\n}\n"],"file":"utils.js"}