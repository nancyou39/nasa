{"version":3,"sources":["avatar/index.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Avatar","arguments","state","scale","mounted","isImgExist","setScale","avatarChildren","avatarNode","childrenWidth","offsetWidth","nodeWidth","lastChildrenWidth","lastNodeWidth","setState","handleImgLoadError","onError","props","errorFlag","undefined","renderAvatar","getPrefixCls","_a","customizePrefixCls","prefixCls","shape","size","src","srcSet","icon","className","alt","others","sizeCls","classString","sizeStyle","width","height","lineHeight","fontSize","children","childrenNode","transformString","childrenStyle","msTransform","WebkitTransform","transform","sizeChildrenStyle","node","opacity","style","prevProps","React","Component","defaultProps"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nexport default class Avatar extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            scale: 1,\n            mounted: false,\n            isImgExist: true,\n        };\n        this.setScale = () => {\n            if (!this.avatarChildren || !this.avatarNode) {\n                return;\n            }\n            const childrenWidth = this.avatarChildren.offsetWidth; // offsetWidth avoid affecting be transform scale\n            const nodeWidth = this.avatarNode.offsetWidth;\n            // denominator is 0 is no meaning\n            if (childrenWidth === 0 ||\n                nodeWidth === 0 ||\n                (this.lastChildrenWidth === childrenWidth && this.lastNodeWidth === nodeWidth)) {\n                return;\n            }\n            this.lastChildrenWidth = childrenWidth;\n            this.lastNodeWidth = nodeWidth;\n            // add 4px gap for each side to get better performance\n            this.setState({\n                scale: nodeWidth - 8 < childrenWidth ? (nodeWidth - 8) / childrenWidth : 1,\n            });\n        };\n        this.handleImgLoadError = () => {\n            const { onError } = this.props;\n            const errorFlag = onError ? onError() : undefined;\n            if (errorFlag !== false) {\n                this.setState({ isImgExist: false });\n            }\n        };\n        this.renderAvatar = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, shape, size, src, srcSet, icon, className, alt } = _a, others = __rest(_a, [\"prefixCls\", \"shape\", \"size\", \"src\", \"srcSet\", \"icon\", \"className\", \"alt\"]);\n            warning(!(typeof icon === 'string' && icon.length > 2), 'Avatar', `\\`icon\\` is using ReactNode instead of string naming in v4. Please check \\`${icon}\\` at https://ant.design/components/icon`);\n            const { isImgExist, scale, mounted } = this.state;\n            const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n            const sizeCls = classNames({\n                [`${prefixCls}-lg`]: size === 'large',\n                [`${prefixCls}-sm`]: size === 'small',\n            });\n            const classString = classNames(prefixCls, className, sizeCls, {\n                [`${prefixCls}-${shape}`]: shape,\n                [`${prefixCls}-image`]: src && isImgExist,\n                [`${prefixCls}-icon`]: icon,\n            });\n            const sizeStyle = typeof size === 'number'\n                ? {\n                    width: size,\n                    height: size,\n                    lineHeight: `${size}px`,\n                    fontSize: icon ? size / 2 : 18,\n                }\n                : {};\n            let { children } = this.props;\n            if (src && isImgExist) {\n                children = <img src={src} srcSet={srcSet} onError={this.handleImgLoadError} alt={alt}/>;\n            }\n            else if (icon) {\n                children = icon;\n            }\n            else {\n                const childrenNode = this.avatarChildren;\n                if (childrenNode || scale !== 1) {\n                    const transformString = `scale(${scale}) translateX(-50%)`;\n                    const childrenStyle = {\n                        msTransform: transformString,\n                        WebkitTransform: transformString,\n                        transform: transformString,\n                    };\n                    const sizeChildrenStyle = typeof size === 'number'\n                        ? {\n                            lineHeight: `${size}px`,\n                        }\n                        : {};\n                    children = (<span className={`${prefixCls}-string`} ref={(node) => (this.avatarChildren = node)} style={Object.assign(Object.assign({}, sizeChildrenStyle), childrenStyle)}>\n            {children}\n          </span>);\n                }\n                else {\n                    const childrenStyle = {};\n                    if (!mounted) {\n                        childrenStyle.opacity = 0;\n                    }\n                    children = (<span className={`${prefixCls}-string`} style={{ opacity: 0 }} ref={(node) => (this.avatarChildren = node)}>\n            {children}\n          </span>);\n                }\n            }\n            return (<span {...others} style={Object.assign(Object.assign({}, sizeStyle), others.style)} className={classString} ref={(node) => (this.avatarNode = node)}>\n        {children}\n      </span>);\n        };\n    }\n    componentDidMount() {\n        this.setScale();\n        this.setState({ mounted: true });\n    }\n    componentDidUpdate(prevProps) {\n        this.setScale();\n        if (prevProps.src !== this.props.src) {\n            this.setState({ isImgExist: true, scale: 1 });\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderAvatar}</ConfigConsumer>;\n    }\n}\nAvatar.defaultProps = {\n    shape: 'circle',\n    size: 'default',\n};\n"],"file":"index.js"}