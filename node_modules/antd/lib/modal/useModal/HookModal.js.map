{"version":3,"sources":["modal/useModal/HookModal.jsx"],"names":["HookModal","ref","afterClose","config","React","useState","visible","setVisible","innerConfig","setInnerConfig","close","useImperativeHandle","destroy","update","newConfig","originConfig","defaultLocale","Modal","modalLocale","okText","okCancel","justOkText","cancelText","forwardRef"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AACA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAAyBC,GAAzB,EAAiC;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,MAAkB,QAAlBA,MAAkB;;AAAA,wBACjBC,KAAK,CAACC,QAAN,CAAe,IAAf,CADiB;AAAA;AAAA,MACxCC,OADwC;AAAA,MAC/BC,UAD+B;;AAAA,yBAETH,KAAK,CAACC,QAAN,CAAeF,MAAf,CAFS;AAAA;AAAA,MAExCK,WAFwC;AAAA,MAE3BC,cAF2B;;AAG/C,WAASC,KAAT,GAAiB;AACbH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACDH,EAAAA,KAAK,CAACO,mBAAN,CAA0BV,GAA1B,EAA+B;AAAA,WAAO;AAClCW,MAAAA,OAAO,EAAEF,KADyB;AAElCG,MAAAA,MAAM,EAAE,gBAACC,SAAD,EAAe;AACnBL,QAAAA,cAAc,CAAC,UAAAM,YAAY;AAAA,iBAAK,SAAc,SAAc,EAAd,EAAkBA,YAAlB,CAAd,EAA+CD,SAA/C,CAAL;AAAA,SAAb,CAAd;AACH;AAJiC,KAAP;AAAA,GAA/B;AAMA,SAAQ,oBAAC,0BAAD;AAAgB,IAAA,aAAa,EAAC,OAA9B;AAAsC,IAAA,aAAa,EAAEE,qBAAcC;AAAnE,KACL,UAACC,WAAD;AAAA,WAAkB,oBAAC,yBAAD,eAAmBV,WAAnB;AAAgC,MAAA,KAAK,EAAEE,KAAvC;AAA8C,MAAA,OAAO,EAAEJ,OAAvD;AAAgE,MAAA,UAAU,EAAEJ,UAA5E;AAAwF,MAAA,MAAM,EAAEM,WAAW,CAACW,MAAZ,KAChHX,WAAW,CAACY,QAAZ,GAAuBF,WAAW,CAACC,MAAnC,GAA4CD,WAAW,CAACG,UADwD,CAAhG;AACqD,MAAA,UAAU,EAAEb,WAAW,CAACc,UAAZ,IAA0BJ,WAAW,CAACI;AADvG,OAAlB;AAAA,GADK,CAAR;AAIH,CAhBD;;eAiBelB,KAAK,CAACmB,UAAN,CAAiBvB,SAAjB,C","sourcesContent":["import * as React from 'react';\nimport ConfirmDialog from '../ConfirmDialog';\nimport defaultLocale from '../../locale/default';\nimport LocaleReceiver from '../../locale-provider/LocaleReceiver';\nconst HookModal = ({ afterClose, config }, ref) => {\n    const [visible, setVisible] = React.useState(true);\n    const [innerConfig, setInnerConfig] = React.useState(config);\n    function close() {\n        setVisible(false);\n    }\n    React.useImperativeHandle(ref, () => ({\n        destroy: close,\n        update: (newConfig) => {\n            setInnerConfig(originConfig => (Object.assign(Object.assign({}, originConfig), newConfig)));\n        },\n    }));\n    return (<LocaleReceiver componentName=\"Modal\" defaultLocale={defaultLocale.Modal}>\n      {(modalLocale) => (<ConfirmDialog {...innerConfig} close={close} visible={visible} afterClose={afterClose} okText={innerConfig.okText ||\n        (innerConfig.okCancel ? modalLocale.okText : modalLocale.justOkText)} cancelText={innerConfig.cancelText || modalLocale.cancelText}/>)}\n    </LocaleReceiver>);\n};\nexport default React.forwardRef(HookModal);\n"],"file":"HookModal.js"}