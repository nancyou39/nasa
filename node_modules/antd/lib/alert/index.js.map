{"version":3,"sources":["alert/index.jsx"],"names":["noop","iconMapFilled","success","CheckCircleFilled","info","InfoCircleFilled","error","CloseCircleFilled","warning","ExclamationCircleFilled","iconMapOutlined","CheckCircleOutlined","InfoCircleOutlined","CloseCircleOutlined","ExclamationCircleOutlined","Alert","arguments","state","closing","closed","handleClose","e","preventDefault","dom","ReactDOM","findDOMNode","style","height","offsetHeight","setState","props","onClose","animationEnd","afterClose","renderAlert","getPrefixCls","direction","description","customizePrefixCls","prefixCls","message","closeText","banner","className","icon","closable","type","showIcon","undefined","iconType","alertCls","closeIcon","dataOrAriaProps","iconNode","React","isValidElement","cloneElement","createElement","Component","ErrorBoundary"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport CheckCircleOutlined from '@ant-design/icons/CheckCircleOutlined';\nimport ExclamationCircleOutlined from '@ant-design/icons/ExclamationCircleOutlined';\nimport InfoCircleOutlined from '@ant-design/icons/InfoCircleOutlined';\nimport CloseCircleOutlined from '@ant-design/icons/CloseCircleOutlined';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport InfoCircleFilled from '@ant-design/icons/InfoCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport getDataOrAriaProps from '../_util/getDataOrAriaProps';\nimport ErrorBoundary from './ErrorBoundary';\nfunction noop() { }\nconst iconMapFilled = {\n    success: CheckCircleFilled,\n    info: InfoCircleFilled,\n    error: CloseCircleFilled,\n    warning: ExclamationCircleFilled,\n};\nconst iconMapOutlined = {\n    success: CheckCircleOutlined,\n    info: InfoCircleOutlined,\n    error: CloseCircleOutlined,\n    warning: ExclamationCircleOutlined,\n};\nexport default class Alert extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            closing: false,\n            closed: false,\n        };\n        this.handleClose = (e) => {\n            e.preventDefault();\n            const dom = ReactDOM.findDOMNode(this);\n            dom.style.height = `${dom.offsetHeight}px`;\n            // Magic code\n            // 重复一次后才能正确设置 height\n            dom.style.height = `${dom.offsetHeight}px`;\n            this.setState({\n                closing: true,\n            });\n            (this.props.onClose || noop)(e);\n        };\n        this.animationEnd = () => {\n            this.setState({\n                closing: false,\n                closed: true,\n            });\n            (this.props.afterClose || noop)();\n        };\n        this.renderAlert = ({ getPrefixCls, direction }) => {\n            const { description, prefixCls: customizePrefixCls, message, closeText, banner, className = '', style, icon, } = this.props;\n            let { closable, type, showIcon } = this.props;\n            const { closing, closed } = this.state;\n            const prefixCls = getPrefixCls('alert', customizePrefixCls);\n            // banner模式默认有 Icon\n            showIcon = banner && showIcon === undefined ? true : showIcon;\n            // banner模式默认为警告\n            type = banner && type === undefined ? 'warning' : type || 'info';\n            // use outline icon in alert with description\n            const iconType = (description ? iconMapOutlined : iconMapFilled)[type] || null;\n            // closeable when closeText is assigned\n            if (closeText) {\n                closable = true;\n            }\n            const alertCls = classNames(prefixCls, `${prefixCls}-${type}`, {\n                [`${prefixCls}-closing`]: closing,\n                [`${prefixCls}-with-description`]: !!description,\n                [`${prefixCls}-no-icon`]: !showIcon,\n                [`${prefixCls}-banner`]: !!banner,\n                [`${prefixCls}-closable`]: closable,\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            }, className);\n            const closeIcon = closable ? (<button type=\"button\" onClick={this.handleClose} className={`${prefixCls}-close-icon`} tabIndex={0}>\n        {closeText ? (<span className={`${prefixCls}-close-text`}>{closeText}</span>) : (<CloseOutlined />)}\n      </button>) : null;\n            const dataOrAriaProps = getDataOrAriaProps(this.props);\n            const iconNode = (icon &&\n                (React.isValidElement(icon) ? (React.cloneElement(icon, {\n                    className: classNames(`${prefixCls}-icon`, {\n                        [icon.props.className]: icon.props.className,\n                    }),\n                })) : (<span className={`${prefixCls}-icon`}>{icon}</span>))) ||\n                React.createElement(iconType, { className: `${prefixCls}-icon` });\n            return closed ? null : (<Animate component=\"\" showProp=\"data-show\" transitionName={`${prefixCls}-slide-up`} onEnd={this.animationEnd}>\n        <div data-show={!closing} className={alertCls} style={style} {...dataOrAriaProps}>\n          {showIcon ? iconNode : null}\n          <span className={`${prefixCls}-message`}>{message}</span>\n          <span className={`${prefixCls}-description`}>{description}</span>\n          {closeIcon}\n        </div>\n      </Animate>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderAlert}</ConfigConsumer>;\n    }\n}\nAlert.ErrorBoundary = ErrorBoundary;\n"],"file":"index.js"}