{"version":3,"sources":["tree/Tree.jsx"],"names":["Tree","arguments","setTreeRef","node","tree","renderTree","getPrefixCls","direction","props","customizePrefixCls","prefixCls","className","showIcon","showLine","switcherIcon","blockNode","children","checkable","nodeProps","React","Component","TreeNode","DirectoryTree","defaultProps","motion","collapseMotion","motionAppear"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACqBA,I;;;AACjB,kBAAc;AAAA;;AAAA;;AACV,+EAASC,SAAT;;AACA,UAAKC,UAAL,GAAkB,UAACC,IAAD,EAAU;AACxB,YAAKC,IAAL,GAAYD,IAAZ;AACH,KAFD;;AAGA,UAAKE,UAAL,GAAkB,gBAAiC;AAAA;;AAAA,UAA9BC,YAA8B,QAA9BA,YAA8B;AAAA,UAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA;AAAA,UACvCC,KADuC,yBACvCA,KADuC;;AAAA,UAE5BC,kBAF4B,GAE8DD,KAF9D,CAEvCE,SAFuC;AAAA,UAERC,SAFQ,GAE8DH,KAF9D,CAERG,SAFQ;AAAA,UAEGC,QAFH,GAE8DJ,KAF9D,CAEGI,QAFH;AAAA,UAEaC,QAFb,GAE8DL,KAF9D,CAEaK,QAFb;AAAA,UAEuBC,aAFvB,GAE8DN,KAF9D,CAEuBM,YAFvB;AAAA,UAEqCC,SAFrC,GAE8DP,KAF9D,CAEqCO,SAFrC;AAAA,UAEgDC,QAFhD,GAE8DR,KAF9D,CAEgDQ,QAFhD;AAAA,UAGvCC,SAHuC,GAGzBT,KAHyB,CAGvCS,SAHuC;AAI/C,UAAMP,SAAS,GAAGJ,YAAY,CAAC,MAAD,EAASG,kBAAT,CAA9B;AACA,aAAQ,oBAAC,kBAAD;AAAQ,QAAA,UAAU,EAAE,EAApB;AAAwB,QAAA,GAAG,EAAE,MAAKP;AAAlC,SAAkDM,KAAlD;AAAyD,QAAA,SAAS,EAAEE,SAApE;AAA+E,QAAA,SAAS,EAAE,4BAAWC,SAAX,4DAC1FD,SAD0F,iBAClE,CAACE,QADiE,0CAE1FF,SAF0F,kBAEjEK,SAFiE,0CAG1FL,SAH0F,WAGxEH,SAAS,KAAK,KAH0D,gBAA1F;AAIJ,QAAA,SAAS,EAAEU,SAAS,GAAG;AAAM,UAAA,SAAS,YAAKP,SAAL;AAAf,UAAH,GAAuDO,SAJvE;AAIkF,QAAA,YAAY,EAAE,sBAACC,SAAD;AAAA,iBAAe,0BAAmBR,SAAnB,EAA8BI,aAA9B,EAA4CD,QAA5C,EAAsDK,SAAtD,CAAf;AAAA;AAJhG,UAKXF,QALW,CAAR;AAOH,KAZD;;AALU;AAkBb;;;;6BACQ;AACL,aAAO,oBAAC,8BAAD,QAAiB,KAAKX,UAAtB,CAAP;AACH;;;;EAtB6Bc,KAAK,CAACC,S;;;AAwBxCpB,IAAI,CAACqB,QAAL,GAAgBA,gBAAhB;AACArB,IAAI,CAACsB,aAAL,GAAqBA,yBAArB;AACAtB,IAAI,CAACuB,YAAL,GAAoB;AAChBN,EAAAA,SAAS,EAAE,KADK;AAEhBL,EAAAA,QAAQ,EAAE,KAFM;AAGhBY,EAAAA,MAAM,EAAE,SAAc,SAAc,EAAd,EAAkBC,kBAAlB,CAAd,EAAiD;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAAjD,CAHQ;AAIhBX,EAAAA,SAAS,EAAE;AAJK,CAApB","sourcesContent":["import * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport { ConfigConsumer } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport renderSwitcherIcon from './utils/iconUtil';\nexport default class Tree extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.setTreeRef = (node) => {\n            this.tree = node;\n        };\n        this.renderTree = ({ getPrefixCls, direction }) => {\n            const { props } = this;\n            const { prefixCls: customizePrefixCls, className, showIcon, showLine, switcherIcon, blockNode, children, } = props;\n            const { checkable } = props;\n            const prefixCls = getPrefixCls('tree', customizePrefixCls);\n            return (<RcTree itemHeight={20} ref={this.setTreeRef} {...props} prefixCls={prefixCls} className={classNames(className, {\n                [`${prefixCls}-icon-hide`]: !showIcon,\n                [`${prefixCls}-block-node`]: blockNode,\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            })} checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`}/> : checkable} switcherIcon={(nodeProps) => renderSwitcherIcon(prefixCls, switcherIcon, showLine, nodeProps)}>\n        {children}\n      </RcTree>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTree}</ConfigConsumer>;\n    }\n}\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n    checkable: false,\n    showIcon: false,\n    motion: Object.assign(Object.assign({}, collapseMotion), { motionAppear: false }),\n    blockNode: false,\n};\n"],"file":"Tree.js"}