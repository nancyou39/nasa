{"version":3,"sources":["config-provider/context.jsx"],"names":["ConfigContext","React","createContext","getPrefixCls","suffixCls","customizePrefixCls","renderEmpty","defaultRenderEmpty","ConfigConsumer","Consumer","withConfigConsumer","config","withConfigConsumerFunc","Component","SFC","props","configProps","basicPrefixCls","prefixCls","cons","constructor","name","displayName"],"mappings":";;;;;;;;;;AAAA;;AACA;;;;;;;;;;AACO,IAAMA,aAAa,GAAGC,KAAK,CAACC,aAAN,CAAoB;AAC7C;AACAC,EAAAA,YAAY,EAAE,sBAACC,SAAD,EAAYC,kBAAZ,EAAmC;AAC7C,QAAIA,kBAAJ,EACI,OAAOA,kBAAP;AACJ,yBAAcD,SAAd;AACH,GAN4C;AAO7CE,EAAAA,WAAW,EAAEC;AAPgC,CAApB,CAAtB;;AASA,IAAMC,cAAc,GAAGR,aAAa,CAACS,QAArC;;;AACA,SAASC,kBAAT,CAA4BC,MAA5B,EAAoC;AACvC,SAAO,SAASC,sBAAT,CAAgCC,SAAhC,EAA2C;AAC9C;AACA,QAAMC,GAAG,GAAI,SAAPA,GAAO,CAACC,KAAD;AAAA,aAAY,oBAAC,cAAD,QACxB,UAACC,WAAD,EAAiB;AAAA,YACKC,cADL,GACwBN,MADxB,CACNO,SADM;AAAA,YAENf,YAFM,GAEWa,WAFX,CAENb,YAFM;AAAA,YAGKE,kBAHL,GAG4BU,KAH5B,CAGNG,SAHM;AAId,YAAMA,SAAS,GAAGf,YAAY,CAACc,cAAD,EAAiBZ,kBAAjB,CAA9B;AACA,eAAO,oBAAC,SAAD,eAAeW,WAAf,EAAgCD,KAAhC;AAAuC,UAAA,SAAS,EAAEG;AAAlD,WAAP;AACH,OAPwB,CAAZ;AAAA,KAAb;;AASA,QAAMC,IAAI,GAAGN,SAAS,CAACO,WAAvB;AACA,QAAMC,IAAI,GAAIF,IAAI,IAAIA,IAAI,CAACG,WAAd,IAA8BT,SAAS,CAACQ,IAAxC,IAAgD,WAA7D;AACAP,IAAAA,GAAG,CAACQ,WAAJ,gCAAwCD,IAAxC;AACA,WAAOP,GAAP;AACH,GAfD;AAgBH","sourcesContent":["import * as React from 'react';\nimport defaultRenderEmpty from './renderEmpty';\nexport const ConfigContext = React.createContext({\n    // We provide a default function for Context without provider\n    getPrefixCls: (suffixCls, customizePrefixCls) => {\n        if (customizePrefixCls)\n            return customizePrefixCls;\n        return `ant-${suffixCls}`;\n    },\n    renderEmpty: defaultRenderEmpty,\n});\nexport const ConfigConsumer = ConfigContext.Consumer;\nexport function withConfigConsumer(config) {\n    return function withConfigConsumerFunc(Component) {\n        // Wrap with ConfigConsumer. Since we need compatible with react 15, be care when using ref methods\n        const SFC = ((props) => (<ConfigConsumer>\n        {(configProps) => {\n            const { prefixCls: basicPrefixCls } = config;\n            const { getPrefixCls } = configProps;\n            const { prefixCls: customizePrefixCls } = props;\n            const prefixCls = getPrefixCls(basicPrefixCls, customizePrefixCls);\n            return <Component {...configProps} {...props} prefixCls={prefixCls}/>;\n        }}\n      </ConfigConsumer>));\n        const cons = Component.constructor;\n        const name = (cons && cons.displayName) || Component.name || 'Component';\n        SFC.displayName = `withConfigConsumer(${name})`;\n        return SFC;\n    };\n}\n"],"file":"context.js"}