{"version":3,"sources":["config-provider/renderEmpty.jsx"],"names":["renderEmpty","componentName","getPrefixCls","prefix","Empty","PRESENTED_IMAGE_SIMPLE"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AACA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,aAAD;AAAA,SAAoB,oBAAC,gBAAD,QACnC,gBAAsB;AAAA,QAAnBC,YAAmB,QAAnBA,YAAmB;AACvB,QAAMC,MAAM,GAAGD,YAAY,CAAC,OAAD,CAA3B;;AACA,YAAQD,aAAR;AACI,WAAK,OAAL;AACA,WAAK,MAAL;AACI,eAAO,oBAAC,iBAAD;AAAO,UAAA,KAAK,EAAEG,kBAAMC;AAApB,UAAP;;AACJ,WAAK,QAAL;AACA,WAAK,YAAL;AACA,WAAK,UAAL;AACA,WAAK,UAAL;AACA,WAAK,UAAL;AACI,eAAO,oBAAC,iBAAD;AAAO,UAAA,KAAK,EAAED,kBAAMC,sBAApB;AAA4C,UAAA,SAAS,YAAKF,MAAL;AAArD,UAAP;;AACJ;AACI,eAAO,oBAAC,iBAAD,OAAP;AAXR;AAaH,GAhBuC,CAApB;AAAA,CAApB;;eAkBeH,W","sourcesContent":["import * as React from 'react';\nimport Empty from '../empty';\nimport { ConfigConsumer } from '.';\nconst renderEmpty = (componentName) => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const prefix = getPrefixCls('empty');\n    switch (componentName) {\n        case 'Table':\n        case 'List':\n            return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE}/>;\n        case 'Select':\n        case 'TreeSelect':\n        case 'Cascader':\n        case 'Transfer':\n        case 'Mentions':\n            return <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} className={`${prefix}-small`}/>;\n        default:\n            return <Empty />;\n    }\n}}\n  </ConfigConsumer>);\nexport default renderEmpty;\n"],"file":"renderEmpty.js"}