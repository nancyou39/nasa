{"version":3,"sources":["config-provider/index.jsx"],"names":["configConsumerProps","ConfigProvider","arguments","getPrefixCls","suffixCls","customizePrefixCls","props","prefixCls","renderProvider","context","legacyLocale","children","getPopupContainer","renderEmpty","csp","autoInsertSpaceInButton","form","locale","pageHeader","componentSize","direction","config","childNode","validateMessages","ANT_MARK","_","__","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,mBAAmB,GAAG,CAC/B,mBAD+B,EAE/B,eAF+B,EAG/B,cAH+B,EAI/B,aAJ+B,EAK/B,KAL+B,EAM/B,yBAN+B,EAO/B,QAP+B,EAQ/B,YAR+B,CAA5B;;;IAUDC,c;;;AACF,4BAAc;AAAA;;AAAA;;AACV,yFAASC,SAAT;;AACA,UAAKC,YAAL,GAAoB,UAACC,SAAD,EAAYC,kBAAZ,EAAmC;AAAA,kCACrB,MAAKC,KADgB,CAC3CC,SAD2C;AAAA,UAC3CA,SAD2C,sCAC/B,KAD+B;AAEnD,UAAIF,kBAAJ,EACI,OAAOA,kBAAP;AACJ,aAAOD,SAAS,aAAMG,SAAN,cAAmBH,SAAnB,IAAiCG,SAAjD;AACH,KALD;;AAMA,UAAKC,cAAL,GAAsB,UAACC,OAAD,EAAUC,YAAV,EAA2B;AAAA,wBAC2F,MAAKJ,KADhG;AAAA,UACrCK,QADqC,eACrCA,QADqC;AAAA,UAC3BC,iBAD2B,eAC3BA,iBAD2B;AAAA,UACRC,WADQ,eACRA,WADQ;AAAA,UACKC,GADL,eACKA,GADL;AAAA,UACUC,uBADV,eACUA,uBADV;AAAA,UACmCC,IADnC,eACmCA,IADnC;AAAA,UACyCC,MADzC,eACyCA,MADzC;AAAA,UACiDC,UADjD,eACiDA,UADjD;AAAA,UAC6DC,aAD7D,eAC6DA,aAD7D;AAAA,UAC4EC,SAD5E,eAC4EA,SAD5E;;AAE7C,UAAMC,MAAM,GAAG,SAAc,SAAc,EAAd,EAAkBZ,OAAlB,CAAd,EAA0C;AAAEN,QAAAA,YAAY,EAAE,MAAKA,YAArB;AAAmCW,QAAAA,GAAG,EAAHA,GAAnC;AACrDC,QAAAA,uBAAuB,EAAvBA,uBADqD;AAC5BE,QAAAA,MAAM,EAAEA,MAAM,IAAIP,YADU;AACIU,QAAAA,SAAS,EAATA;AADJ,OAA1C,CAAf;;AAEA,UAAIR,iBAAJ,EAAuB;AACnBS,QAAAA,MAAM,CAACT,iBAAP,GAA2BA,iBAA3B;AACH;;AACD,UAAIC,WAAJ,EAAiB;AACbQ,QAAAA,MAAM,CAACR,WAAP,GAAqBA,WAArB;AACH;;AACD,UAAIK,UAAJ,EAAgB;AACZG,QAAAA,MAAM,CAACH,UAAP,GAAoBA,UAApB;AACH;;AACD,UAAII,SAAS,GAAGX,QAAhB,CAb6C,CAc7C;;AACA,UAAIK,IAAI,IAAIA,IAAI,CAACO,gBAAjB,EAAmC;AAC/BD,QAAAA,SAAS,GAAI,oBAAC,yBAAD;AAAgB,UAAA,gBAAgB,EAAEN,IAAI,CAACO;AAAvC,WAA0DZ,QAA1D,CAAb;AACH;;AACD,aAAQ,oBAAC,gCAAD;AAAqB,QAAA,IAAI,EAAEQ;AAA3B,SACZ,oBAAC,sBAAD,CAAe,QAAf;AAAwB,QAAA,KAAK,EAAEE;AAA/B,SACE,oBAAC,0BAAD;AAAgB,QAAA,MAAM,EAAEJ,MAAM,IAAIP,YAAlC;AAAgD,QAAA,WAAW,EAAEc;AAA7D,SACGF,SADH,CADF,CADY,CAAR;AAOH,KAzBD;;AARU;AAkCb;;;;6BACQ;AAAA;;AACL,aAAQ,oBAAC,0BAAD,QACP,UAACG,CAAD,EAAIC,EAAJ,EAAQhB,YAAR;AAAA,eAA0B,oBAAC,uBAAD,QACtB,UAAAD,OAAO;AAAA,iBAAI,MAAI,CAACD,cAAL,CAAoBC,OAApB,EAA6BC,YAA7B,CAAJ;AAAA,SADe,CAA1B;AAAA,OADO,CAAR;AAKH;;;;EA1CwBiB,KAAK,CAACC,S;;eA4CpB3B,c","sourcesContent":["// TODO: remove this lint\n// SFC has specified a displayName, but not worked.\n/* eslint-disable react/display-name */\nimport * as React from 'react';\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer, ConfigContext } from './context';\nimport { SizeContextProvider } from './SizeContext';\nexport { ConfigContext, ConfigConsumer };\nexport const configConsumerProps = [\n    'getPopupContainer',\n    'rootPrefixCls',\n    'getPrefixCls',\n    'renderEmpty',\n    'csp',\n    'autoInsertSpaceInButton',\n    'locale',\n    'pageHeader',\n];\nclass ConfigProvider extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getPrefixCls = (suffixCls, customizePrefixCls) => {\n            const { prefixCls = 'ant' } = this.props;\n            if (customizePrefixCls)\n                return customizePrefixCls;\n            return suffixCls ? `${prefixCls}-${suffixCls}` : prefixCls;\n        };\n        this.renderProvider = (context, legacyLocale) => {\n            const { children, getPopupContainer, renderEmpty, csp, autoInsertSpaceInButton, form, locale, pageHeader, componentSize, direction, } = this.props;\n            const config = Object.assign(Object.assign({}, context), { getPrefixCls: this.getPrefixCls, csp,\n                autoInsertSpaceInButton, locale: locale || legacyLocale, direction });\n            if (getPopupContainer) {\n                config.getPopupContainer = getPopupContainer;\n            }\n            if (renderEmpty) {\n                config.renderEmpty = renderEmpty;\n            }\n            if (pageHeader) {\n                config.pageHeader = pageHeader;\n            }\n            let childNode = children;\n            // Additional Form provider\n            if (form && form.validateMessages) {\n                childNode = (<RcFormProvider validateMessages={form.validateMessages}>{children}</RcFormProvider>);\n            }\n            return (<SizeContextProvider size={componentSize}>\n        <ConfigContext.Provider value={config}>\n          <LocaleProvider locale={locale || legacyLocale} _ANT_MARK__={ANT_MARK}>\n            {childNode}\n          </LocaleProvider>\n        </ConfigContext.Provider>\n      </SizeContextProvider>);\n        };\n    }\n    render() {\n        return (<LocaleReceiver>\n        {(_, __, legacyLocale) => (<ConfigConsumer>\n            {context => this.renderProvider(context, legacyLocale)}\n          </ConfigConsumer>)}\n      </LocaleReceiver>);\n    }\n}\nexport default ConfigProvider;\n"],"file":"index.js"}