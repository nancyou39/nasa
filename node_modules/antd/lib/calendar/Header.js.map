{"version":3,"sources":["calendar/Header.jsx"],"names":["YearSelectOffset","YearSelectTotal","YearSelect","props","fullscreen","validRange","generateConfig","locale","prefixCls","value","onChange","divRef","year","getYear","start","end","suffix","options","index","push","label","undefined","numYear","newDate","setYear","startDate","endDate","newYear","newMonth","getMonth","setMonth","current","MonthSelect","month","rangeStart","rangeEnd","currentYear","months","shortMonths","getShortMonths","ModeSwitch","mode","onModeChange","target","CalendarHeader","React","useRef","sharedProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nconst YearSelectOffset = 10;\nconst YearSelectTotal = 20;\nfunction YearSelect(props) {\n    const { fullscreen, validRange, generateConfig, locale, prefixCls, value, onChange, divRef, } = props;\n    const year = generateConfig.getYear(value);\n    let start = year - YearSelectOffset;\n    let end = start + YearSelectTotal;\n    if (validRange) {\n        start = generateConfig.getYear(validRange[0]);\n        end = generateConfig.getYear(validRange[1]) + 1;\n    }\n    const suffix = locale && locale.year === '年' ? '年' : '';\n    const options = [];\n    for (let index = start; index < end; index++) {\n        options.push({ label: `${index}${suffix}`, value: index });\n    }\n    return (<Select size={fullscreen ? undefined : 'small'} options={options} value={year} className={`${prefixCls}-year-select`} onChange={numYear => {\n        let newDate = generateConfig.setYear(value, numYear);\n        if (validRange) {\n            const [startDate, endDate] = validRange;\n            const newYear = generateConfig.getYear(newDate);\n            const newMonth = generateConfig.getMonth(newDate);\n            if (newYear === generateConfig.getYear(endDate) &&\n                newMonth > generateConfig.getMonth(endDate)) {\n                newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(endDate));\n            }\n            if (newYear === generateConfig.getYear(startDate) &&\n                newMonth < generateConfig.getMonth(startDate)) {\n                newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(startDate));\n            }\n        }\n        onChange(newDate);\n    }} getPopupContainer={() => divRef.current}/>);\n}\nfunction MonthSelect(props) {\n    const { prefixCls, fullscreen, validRange, value, generateConfig, locale, onChange, divRef, } = props;\n    const month = generateConfig.getMonth(value);\n    let start = 0;\n    let end = 12;\n    if (validRange) {\n        const [rangeStart, rangeEnd] = validRange;\n        const currentYear = generateConfig.getYear(value);\n        if (generateConfig.getYear(rangeEnd) === currentYear) {\n            end = generateConfig.getMonth(rangeEnd);\n        }\n        if (generateConfig.getYear(rangeStart) === currentYear) {\n            start = generateConfig.getMonth(rangeStart);\n        }\n    }\n    const months = locale.shortMonths || generateConfig.locale.getShortMonths(locale.locale);\n    const options = [];\n    for (let index = start; index < end; index += 1) {\n        options.push({\n            label: months[index],\n            value: index,\n        });\n    }\n    return (<Select size={fullscreen ? undefined : 'small'} className={`${prefixCls}-month-select`} value={month} options={options} onChange={newMonth => {\n        onChange(generateConfig.setMonth(value, newMonth));\n    }} getPopupContainer={() => divRef.current}/>);\n}\nfunction ModeSwitch(props) {\n    const { prefixCls, locale, mode, fullscreen, onModeChange } = props;\n    return (<Group onChange={({ target: { value } }) => {\n        onModeChange(value);\n    }} value={mode} size={fullscreen ? undefined : 'small'} className={`${prefixCls}-mode-switch`}>\n      <Button value=\"month\">{locale.month}</Button>\n      <Button value=\"year\">{locale.year}</Button>\n    </Group>);\n}\nfunction CalendarHeader(props) {\n    const { prefixCls, fullscreen, mode, onChange, onModeChange } = props;\n    const divRef = React.useRef(null);\n    const sharedProps = Object.assign(Object.assign({}, props), { onChange,\n        fullscreen,\n        divRef });\n    return (<div className={`${prefixCls}-header`} ref={divRef}>\n      <YearSelect {...sharedProps}/>\n      {mode === 'month' && <MonthSelect {...sharedProps}/>}\n      <ModeSwitch {...sharedProps} onModeChange={onModeChange}/>\n    </div>);\n}\nexport default CalendarHeader;\n"],"file":"Header.js"}