{"version":3,"sources":["tooltip/placements.jsx"],"names":["autoAdjustOverflowEnabled","adjustX","adjustY","autoAdjustOverflowDisabled","targetOffset","getOverflowOptions","autoAdjustOverflow","getPlacements","config","arrowWidth","horizontalArrowShift","verticalArrowShift","placementMap","left","points","offset","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","Object","keys","forEach","key","arrowPointAtCenter","overflow","placements","ignoreShake"],"mappings":"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","sourcesContent":["import { placements } from 'rc-tooltip/lib/placements';\nconst autoAdjustOverflowEnabled = {\n    adjustX: 1,\n    adjustY: 1,\n};\nconst autoAdjustOverflowDisabled = {\n    adjustX: 0,\n    adjustY: 0,\n};\nconst targetOffset = [0, 0];\nexport function getOverflowOptions(autoAdjustOverflow) {\n    if (typeof autoAdjustOverflow === 'boolean') {\n        return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n    }\n    return Object.assign(Object.assign({}, autoAdjustOverflowDisabled), autoAdjustOverflow);\n}\nexport default function getPlacements(config) {\n    const { arrowWidth = 5, horizontalArrowShift = 16, verticalArrowShift = 8, autoAdjustOverflow, } = config;\n    const placementMap = {\n        left: {\n            points: ['cr', 'cl'],\n            offset: [-4, 0],\n        },\n        right: {\n            points: ['cl', 'cr'],\n            offset: [4, 0],\n        },\n        top: {\n            points: ['bc', 'tc'],\n            offset: [0, -4],\n        },\n        bottom: {\n            points: ['tc', 'bc'],\n            offset: [0, 4],\n        },\n        topLeft: {\n            points: ['bl', 'tc'],\n            offset: [-(horizontalArrowShift + arrowWidth), -4],\n        },\n        leftTop: {\n            points: ['tr', 'cl'],\n            offset: [-4, -(verticalArrowShift + arrowWidth)],\n        },\n        topRight: {\n            points: ['br', 'tc'],\n            offset: [horizontalArrowShift + arrowWidth, -4],\n        },\n        rightTop: {\n            points: ['tl', 'cr'],\n            offset: [4, -(verticalArrowShift + arrowWidth)],\n        },\n        bottomRight: {\n            points: ['tr', 'bc'],\n            offset: [horizontalArrowShift + arrowWidth, 4],\n        },\n        rightBottom: {\n            points: ['bl', 'cr'],\n            offset: [4, verticalArrowShift + arrowWidth],\n        },\n        bottomLeft: {\n            points: ['tl', 'bc'],\n            offset: [-(horizontalArrowShift + arrowWidth), 4],\n        },\n        leftBottom: {\n            points: ['br', 'cl'],\n            offset: [-4, verticalArrowShift + arrowWidth],\n        },\n    };\n    Object.keys(placementMap).forEach(key => {\n        placementMap[key] = config.arrowPointAtCenter\n            ? Object.assign(Object.assign({}, placementMap[key]), { overflow: getOverflowOptions(autoAdjustOverflow), targetOffset }) : Object.assign(Object.assign({}, placements[key]), { overflow: getOverflowOptions(autoAdjustOverflow) });\n        placementMap[key].ignoreShake = true;\n    });\n    return placementMap;\n}\n"],"file":"placements.js"}