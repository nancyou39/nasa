{"version":3,"sources":["input/ResizableTextArea.jsx"],"names":["RESIZE_STATUS_NONE","RESIZE_STATUS_RESIZING","RESIZE_STATUS_RESIZED","ResizableTextArea","props","saveTextArea","textArea","handleResize","size","resizeStatus","state","autoSize","onResize","resizeOnNextFrame","raf","cancel","nextFrameActionId","resizeTextarea","minRows","maxRows","textareaStyles","setState","resizeFrameId","renderTextArea","prefixCls","className","disabled","otherProps","cls","value","style","overflowX","overflowY","prevProps","React","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\nimport raf from '../_util/raf';\nconst RESIZE_STATUS_NONE = 0;\nconst RESIZE_STATUS_RESIZING = 1;\nconst RESIZE_STATUS_RESIZED = 2;\nclass ResizableTextArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveTextArea = (textArea) => {\n            this.textArea = textArea;\n        };\n        this.handleResize = (size) => {\n            const { resizeStatus } = this.state;\n            const { autoSize, onResize } = this.props;\n            if (resizeStatus !== RESIZE_STATUS_NONE) {\n                return;\n            }\n            if (typeof onResize === 'function') {\n                onResize(size);\n            }\n            if (autoSize) {\n                this.resizeOnNextFrame();\n            }\n        };\n        this.resizeOnNextFrame = () => {\n            raf.cancel(this.nextFrameActionId);\n            this.nextFrameActionId = raf(this.resizeTextarea);\n        };\n        this.resizeTextarea = () => {\n            const { autoSize } = this.props;\n            if (!autoSize || !this.textArea) {\n                return;\n            }\n            const { minRows, maxRows } = autoSize;\n            const textareaStyles = calculateNodeHeight(this.textArea, false, minRows, maxRows);\n            this.setState({ textareaStyles, resizeStatus: RESIZE_STATUS_RESIZING }, () => {\n                raf.cancel(this.resizeFrameId);\n                this.resizeFrameId = raf(() => {\n                    this.setState({ resizeStatus: RESIZE_STATUS_RESIZED }, () => {\n                        this.resizeFrameId = raf(() => {\n                            this.setState({ resizeStatus: RESIZE_STATUS_NONE });\n                        });\n                    });\n                });\n            });\n        };\n        this.renderTextArea = () => {\n            const { prefixCls, autoSize, onResize, className, disabled } = this.props;\n            const { textareaStyles, resizeStatus } = this.state;\n            const otherProps = omit(this.props, [\n                'prefixCls',\n                'onPressEnter',\n                'autoSize',\n                'defaultValue',\n                'allowClear',\n                'onResize',\n            ]);\n            const cls = classNames(prefixCls, className, {\n                [`${prefixCls}-disabled`]: disabled,\n            });\n            // Fix https://github.com/ant-design/ant-design/issues/6776\n            // Make sure it could be reset when using form.getFieldDecorator\n            if ('value' in otherProps) {\n                otherProps.value = otherProps.value || '';\n            }\n            const style = Object.assign(Object.assign(Object.assign({}, this.props.style), textareaStyles), (resizeStatus === RESIZE_STATUS_RESIZING\n                ? // React will warning when mix `overflow` & `overflowY`.\n                    // We need to define this separately.\n                    { overflowX: 'hidden', overflowY: 'hidden' }\n                : null));\n            return (<ResizeObserver onResize={this.handleResize} disabled={!(autoSize || onResize)}>\n        <textarea {...otherProps} className={cls} style={style} ref={this.saveTextArea}/>\n      </ResizeObserver>);\n        };\n        this.state = {\n            textareaStyles: {},\n            resizeStatus: RESIZE_STATUS_NONE,\n        };\n    }\n    componentDidMount() {\n        this.resizeTextarea();\n    }\n    componentDidUpdate(prevProps) {\n        // Re-render with the new content then recalculate the height as required.\n        if (prevProps.value !== this.props.value) {\n            this.resizeTextarea();\n        }\n    }\n    componentWillUnmount() {\n        raf.cancel(this.nextFrameActionId);\n        raf.cancel(this.resizeFrameId);\n    }\n    render() {\n        return this.renderTextArea();\n    }\n}\nexport default ResizableTextArea;\n"],"file":"ResizableTextArea.js"}