{"version":3,"sources":["transfer/index.jsx"],"names":["React","classNames","List","Operation","Search","LocaleReceiver","defaultLocale","ConfigConsumer","Transfer","props","separatedDataSource","getLocale","transferLocale","renderEmpty","notFoundContent","locale","moveTo","direction","targetKeys","dataSource","onChange","state","sourceSelectedKeys","targetSelectedKeys","moveKeys","newMoveKeys","filter","key","some","data","disabled","newTargetKeys","concat","targetKey","indexOf","oppositeDirection","setState","getSelectedKeysName","handleSelectChange","moveToLeft","moveToRight","onItemSelectAll","selectedKeys","checkAll","originalSelectedKeys","mergedCheckedKeys","Array","from","Set","onLeftItemSelectAll","onRightItemSelectAll","handleFilter","e","onSearch","value","target","handleLeftFilter","handleRightFilter","handleClear","handleLeftClear","handleRightClear","onItemSelect","selectedKey","checked","holder","index","splice","push","onLeftItemSelect","onRightItemSelect","handleScroll","onScroll","handleLeftScroll","handleRightScroll","handleListStyle","listStyle","renderTransfer","getPrefixCls","customizePrefixCls","prefixCls","className","operations","showSearch","footer","style","operationStyle","filterOption","render","children","showSelectAll","separateDataSource","leftDataSource","rightDataSource","leftActive","length","rightActive","cls","titles","selectAllLabels","onSelectChange","rowKey","forEach","record","indexOfKey","nextProps","includes","Component","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nclass Transfer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.separatedDataSource = null;\n        this.getLocale = (transferLocale, renderEmpty) => {\n            return Object.assign(Object.assign(Object.assign({}, transferLocale), { notFoundContent: renderEmpty('Transfer') }), this.props.locale);\n        };\n        this.moveTo = (direction) => {\n            const { targetKeys = [], dataSource = [], onChange } = this.props;\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n            // filter the disabled options\n            const newMoveKeys = moveKeys.filter((key) => !dataSource.some(data => !!(key === data.key && data.disabled)));\n            // move items to target box\n            const newTargetKeys = direction === 'right'\n                ? newMoveKeys.concat(targetKeys)\n                : targetKeys.filter(targetKey => newMoveKeys.indexOf(targetKey) === -1);\n            // empty checked keys\n            const oppositeDirection = direction === 'right' ? 'left' : 'right';\n            this.setState({\n                [this.getSelectedKeysName(oppositeDirection)]: [],\n            });\n            this.handleSelectChange(oppositeDirection, []);\n            if (onChange) {\n                onChange(newTargetKeys, direction, newMoveKeys);\n            }\n        };\n        this.moveToLeft = () => this.moveTo('left');\n        this.moveToRight = () => this.moveTo('right');\n        this.onItemSelectAll = (direction, selectedKeys, checkAll) => {\n            const originalSelectedKeys = this.state[this.getSelectedKeysName(direction)] || [];\n            let mergedCheckedKeys = [];\n            if (checkAll) {\n                // Merge current keys with origin key\n                mergedCheckedKeys = Array.from(new Set([...originalSelectedKeys, ...selectedKeys]));\n            }\n            else {\n                // Remove current keys from origin keys\n                mergedCheckedKeys = originalSelectedKeys.filter((key) => selectedKeys.indexOf(key) === -1);\n            }\n            this.handleSelectChange(direction, mergedCheckedKeys);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: mergedCheckedKeys,\n                });\n            }\n        };\n        this.onLeftItemSelectAll = (selectedKeys, checkAll) => this.onItemSelectAll('left', selectedKeys, checkAll);\n        this.onRightItemSelectAll = (selectedKeys, checkAll) => this.onItemSelectAll('right', selectedKeys, checkAll);\n        this.handleFilter = (direction, e) => {\n            const { onSearch } = this.props;\n            const value = e.target.value;\n            if (onSearch) {\n                onSearch(direction, value);\n            }\n        };\n        this.handleLeftFilter = (e) => this.handleFilter('left', e);\n        this.handleRightFilter = (e) => this.handleFilter('right', e);\n        this.handleClear = (direction) => {\n            const { onSearch } = this.props;\n            if (onSearch) {\n                onSearch(direction, '');\n            }\n        };\n        this.handleLeftClear = () => this.handleClear('left');\n        this.handleRightClear = () => this.handleClear('right');\n        this.onItemSelect = (direction, selectedKey, checked) => {\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const holder = direction === 'left' ? [...sourceSelectedKeys] : [...targetSelectedKeys];\n            const index = holder.indexOf(selectedKey);\n            if (index > -1) {\n                holder.splice(index, 1);\n            }\n            if (checked) {\n                holder.push(selectedKey);\n            }\n            this.handleSelectChange(direction, holder);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: holder,\n                });\n            }\n        };\n        this.onLeftItemSelect = (selectedKey, checked) => this.onItemSelect('left', selectedKey, checked);\n        this.onRightItemSelect = (selectedKey, checked) => this.onItemSelect('right', selectedKey, checked);\n        this.handleScroll = (direction, e) => {\n            const { onScroll } = this.props;\n            if (onScroll) {\n                onScroll(direction, e);\n            }\n        };\n        this.handleLeftScroll = (e) => this.handleScroll('left', e);\n        this.handleRightScroll = (e) => this.handleScroll('right', e);\n        this.handleListStyle = (listStyle, direction) => {\n            if (typeof listStyle === 'function') {\n                return listStyle({ direction });\n            }\n            return listStyle;\n        };\n        this.renderTransfer = (transferLocale) => (<ConfigConsumer>\n      {({ getPrefixCls, renderEmpty, direction }) => {\n            const { prefixCls: customizePrefixCls, className, disabled, operations = [], showSearch, footer, style, listStyle, operationStyle, filterOption, render, children, showSelectAll, } = this.props;\n            const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n            const locale = Object.assign(Object.assign(Object.assign({}, transferLocale), { notFoundContent: renderEmpty('Transfer') }), this.props.locale);\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const { leftDataSource, rightDataSource } = this.separateDataSource();\n            const leftActive = targetSelectedKeys.length > 0;\n            const rightActive = sourceSelectedKeys.length > 0;\n            const cls = classNames(className, prefixCls, {\n                [`${prefixCls}-disabled`]: disabled,\n                [`${prefixCls}-customize-list`]: !!children,\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            const titles = this.props.titles || locale.titles;\n            const selectAllLabels = this.props.selectAllLabels || [];\n            return (<div className={cls} style={style}>\n            <List prefixCls={`${prefixCls}-list`} titleText={titles[0]} dataSource={leftDataSource} filterOption={filterOption} style={this.handleListStyle(listStyle, 'left')} checkedKeys={sourceSelectedKeys} handleFilter={this.handleLeftFilter} handleClear={this.handleLeftClear} onItemSelect={this.onLeftItemSelect} onItemSelectAll={this.onLeftItemSelectAll} render={render} showSearch={showSearch} renderList={children} footer={footer} onScroll={this.handleLeftScroll} disabled={disabled} direction=\"left\" showSelectAll={showSelectAll} selectAllLabel={selectAllLabels[0]} {...locale}/>\n            <Operation className={`${prefixCls}-operation`} rightActive={rightActive} rightArrowText={operations[0]} moveToRight={this.moveToRight} leftActive={leftActive} leftArrowText={operations[1]} moveToLeft={this.moveToLeft} style={operationStyle} disabled={disabled} direction={direction}/>\n            <List prefixCls={`${prefixCls}-list`} titleText={titles[1]} dataSource={rightDataSource} filterOption={filterOption} style={this.handleListStyle(listStyle, 'right')} checkedKeys={targetSelectedKeys} handleFilter={this.handleRightFilter} handleClear={this.handleRightClear} onItemSelect={this.onRightItemSelect} onItemSelectAll={this.onRightItemSelectAll} render={render} showSearch={showSearch} renderList={children} footer={footer} onScroll={this.handleRightScroll} disabled={disabled} direction=\"right\" showSelectAll={showSelectAll} selectAllLabel={selectAllLabels[1]} {...locale}/>\n          </div>);\n        }}\n    </ConfigConsumer>);\n        const { selectedKeys = [], targetKeys = [] } = props;\n        this.state = {\n            sourceSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) === -1),\n            targetSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) > -1),\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.selectedKeys) {\n            const targetKeys = nextProps.targetKeys || [];\n            return {\n                sourceSelectedKeys: nextProps.selectedKeys.filter(key => !targetKeys.includes(key)),\n                targetSelectedKeys: nextProps.selectedKeys.filter(key => targetKeys.includes(key)),\n            };\n        }\n        return null;\n    }\n    // eslint-disable-next-line\n    getSelectedKeysName(direction) {\n        return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n    }\n    getTitles(transferLocale) {\n        const { props } = this;\n        if (props.titles) {\n            return props.titles;\n        }\n        return transferLocale.titles;\n    }\n    handleSelectChange(direction, holder) {\n        const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n        const { onSelectChange } = this.props;\n        if (!onSelectChange) {\n            return;\n        }\n        if (direction === 'left') {\n            onSelectChange(holder, targetSelectedKeys);\n        }\n        else {\n            onSelectChange(sourceSelectedKeys, holder);\n        }\n    }\n    separateDataSource() {\n        const { dataSource, rowKey, targetKeys = [] } = this.props;\n        const leftDataSource = [];\n        const rightDataSource = new Array(targetKeys.length);\n        dataSource.forEach(record => {\n            if (rowKey) {\n                record.key = rowKey(record);\n            }\n            // rightDataSource should be ordered by targetKeys\n            // leftDataSource should be ordered by dataSource\n            const indexOfKey = targetKeys.indexOf(record.key);\n            if (indexOfKey !== -1) {\n                rightDataSource[indexOfKey] = record;\n            }\n            else {\n                leftDataSource.push(record);\n            }\n        });\n        return {\n            leftDataSource,\n            rightDataSource,\n        };\n    }\n    render() {\n        return (<LocaleReceiver componentName=\"Transfer\" defaultLocale={defaultLocale.Transfer}>\n        {this.renderTransfer}\n      </LocaleReceiver>);\n    }\n}\n// For high-level customized Transfer @dqaria\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nTransfer.defaultProps = {\n    dataSource: [],\n    locale: {},\n    showSearch: false,\n    listStyle: () => { },\n};\nexport default Transfer;\n"],"file":"index.js"}