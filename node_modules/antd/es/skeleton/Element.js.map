{"version":3,"sources":["skeleton/Element.jsx"],"names":["React","classNames","Element","props","prefixCls","className","style","size","shape","sizeCls","shapeCls","sizeStyle","width","height","lineHeight","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;IACMC,O;;;;;;;;;;;6BACO;AAAA;;AAAA,wBACgD,KAAKC,KADrD;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,SADd,eACcA,SADd;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAAA,UACgCC,IADhC,eACgCA,IADhC;AAAA,UACsCC,KADtC,eACsCA,KADtC;AAEL,UAAMC,OAAO,GAAGR,UAAU,2DAClBG,SADkB,UACDG,IAAI,KAAK,OADR,0CAElBH,SAFkB,UAEDG,IAAI,KAAK,OAFR,gBAA1B;AAIA,UAAMG,QAAQ,GAAGT,UAAU,6DACnBG,SADmB,cACEI,KAAK,KAAK,QADZ,2CAEnBJ,SAFmB,cAEEI,KAAK,KAAK,QAFZ,2CAGnBJ,SAHmB,aAGCI,KAAK,KAAK,OAHX,iBAA3B;AAKA,UAAMG,SAAS,GAAG,OAAOJ,IAAP,KAAgB,QAAhB,GACZ;AACEK,QAAAA,KAAK,EAAEL,IADT;AAEEM,QAAAA,MAAM,EAAEN,IAFV;AAGEO,QAAAA,UAAU,YAAKP,IAAL;AAHZ,OADY,GAMZ,EANN;AAOA,aAAQ;AAAM,QAAA,SAAS,EAAEN,UAAU,CAACG,SAAD,EAAYC,SAAZ,EAAuBI,OAAvB,EAAgCC,QAAhC,CAA3B;AAAsE,QAAA,KAAK,EAAE,SAAc,SAAc,EAAd,EAAkBC,SAAlB,CAAd,EAA4CL,KAA5C;AAA7E,QAAR;AACH;;;;EApBiBN,KAAK,CAACe,S;;AAsB5B,eAAeb,OAAf","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n// eslint-disable-next-line react/prefer-stateless-function\nclass Element extends React.Component {\n    render() {\n        const { prefixCls, className, style, size, shape } = this.props;\n        const sizeCls = classNames({\n            [`${prefixCls}-lg`]: size === 'large',\n            [`${prefixCls}-sm`]: size === 'small',\n        });\n        const shapeCls = classNames({\n            [`${prefixCls}-circle`]: shape === 'circle',\n            [`${prefixCls}-square`]: shape === 'square',\n            [`${prefixCls}-round`]: shape === 'round',\n        });\n        const sizeStyle = typeof size === 'number'\n            ? {\n                width: size,\n                height: size,\n                lineHeight: `${size}px`,\n            }\n            : {};\n        return (<span className={classNames(prefixCls, className, sizeCls, shapeCls)} style={Object.assign(Object.assign({}, sizeStyle), style)}/>);\n    }\n}\nexport default Element;\n"],"file":"Element.js"}