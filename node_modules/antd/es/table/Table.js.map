{"version":3,"sources":["table/Table.jsx"],"names":["React","classNames","omit","RcTable","INTERNAL_HOOKS","Spin","Pagination","ConfigContext","usePagination","DEFAULT_PAGE_SIZE","getPaginationParam","useLazyKVMap","useSelection","SELECTION_ALL","SELECTION_INVERT","useSorter","getSortData","useFilter","getFilterData","useTitleColumns","renderExpandIcon","scrollTo","defaultLocale","SizeContext","Column","ColumnGroup","EMPTY_LIST","Table","props","customizePrefixCls","prefixCls","className","style","customizeSize","size","bordered","dropdownPrefixCls","dataSource","pagination","rowSelection","rowKey","rowClassName","columns","children","onChange","getPopupContainer","loading","expandIcon","expandable","expandedRowRender","expandIconColumnIndex","indentSize","childrenColumnName","scroll","sortDirections","locale","tableProps","useContext","contextLocale","renderEmpty","direction","mergedSize","tableLocale","rawData","getPrefixCls","mergedExpandable","expandType","useMemo","some","item","internalRefs","body","useRef","getRowKey","record","getRecordByKey","changeEventInfo","triggerOnChange","info","reset","changeInfo","resetPagination","current","pageSize","scrollToFirstRowOnChange","getContainer","filters","sorter","currentDataSource","sorterStates","filterStates","onSorterChange","transformSorterColumns","sortStates","sorterTitleProps","getSorters","sortedData","onFilterChange","transformFilterColumns","getFilters","mergedData","columnTitleProps","transformTitleColumns","onPaginationChange","length","mergedPagination","pageData","total","currentPageData","slice","data","transformSelectionColumns","selectedKeySet","internalRowClassName","index","indent","mergedRowClassName","has","__PARENT_RENDER_ICON__","undefined","transformColumns","useCallback","innerColumns","topPaginationNode","bottomPaginationNode","paginationSize","renderPagination","position","spinProps","spinning","wrapperClassNames","e","preventDefault","emptyText","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport RcTable from 'rc-table';\nimport { INTERNAL_HOOKS } from 'rc-table/lib/Table';\nimport Spin from '../spin';\nimport Pagination from '../pagination';\nimport { ConfigContext } from '../config-provider/context';\nimport usePagination, { DEFAULT_PAGE_SIZE, getPaginationParam } from './hooks/usePagination';\nimport useLazyKVMap from './hooks/useLazyKVMap';\nimport useSelection, { SELECTION_ALL, SELECTION_INVERT } from './hooks/useSelection';\nimport useSorter, { getSortData } from './hooks/useSorter';\nimport useFilter, { getFilterData } from './hooks/useFilter';\nimport useTitleColumns from './hooks/useTitleColumns';\nimport renderExpandIcon from './ExpandIcon';\nimport scrollTo from '../_util/scrollTo';\nimport defaultLocale from '../locale/en_US';\nimport SizeContext from '../config-provider/SizeContext';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nconst EMPTY_LIST = [];\nfunction Table(props) {\n    const { prefixCls: customizePrefixCls, className, style, size: customizeSize, bordered, dropdownPrefixCls, dataSource, pagination, rowSelection, rowKey, rowClassName, columns, children, onChange, getPopupContainer, loading, expandIcon, expandable, expandedRowRender, expandIconColumnIndex, indentSize, childrenColumnName = 'children', scroll, sortDirections, locale, } = props;\n    const tableProps = omit(props, ['className', 'style']);\n    const size = React.useContext(SizeContext);\n    const { locale: contextLocale = defaultLocale, renderEmpty, direction } = React.useContext(ConfigContext);\n    const mergedSize = customizeSize || size;\n    const tableLocale = Object.assign(Object.assign({}, contextLocale.Table), locale);\n    const rawData = dataSource || EMPTY_LIST;\n    const { getPrefixCls } = React.useContext(ConfigContext);\n    const prefixCls = getPrefixCls('table', customizePrefixCls);\n    const mergedExpandable = Object.assign({ expandIconColumnIndex }, expandable);\n    const expandType = React.useMemo(() => {\n        if (rawData.some(item => item[childrenColumnName])) {\n            return 'nest';\n        }\n        if (expandedRowRender || (expandable && expandable.expandedRowRender)) {\n            return 'row';\n        }\n        return null;\n    }, [rawData]);\n    const internalRefs = {\n        body: React.useRef(),\n    };\n    // ============================ RowKey ============================\n    const getRowKey = React.useMemo(() => {\n        if (typeof rowKey === 'function') {\n            return rowKey;\n        }\n        return (record) => record[rowKey];\n    }, [rowKey]);\n    const [getRecordByKey] = useLazyKVMap(rawData, childrenColumnName, getRowKey);\n    // ============================ Events =============================\n    const changeEventInfo = {};\n    const triggerOnChange = (info, reset = false) => {\n        const changeInfo = Object.assign(Object.assign({}, changeEventInfo), info);\n        if (reset) {\n            changeEventInfo.resetPagination();\n            // Reset event param\n            if (changeInfo.pagination.current) {\n                changeInfo.pagination.current = 1;\n            }\n            // Trigger pagination events\n            if (pagination && pagination.onChange) {\n                pagination.onChange(1, changeInfo.pagination.pageSize);\n            }\n        }\n        if (scroll && scroll.scrollToFirstRowOnChange !== false && internalRefs.body.current) {\n            scrollTo(0, {\n                getContainer: () => internalRefs.body.current,\n            });\n        }\n        if (onChange) {\n            onChange(changeInfo.pagination, changeInfo.filters, changeInfo.sorter, {\n                currentDataSource: getFilterData(getSortData(rawData, changeInfo.sorterStates, childrenColumnName), changeInfo.filterStates),\n            });\n        }\n    };\n    /**\n     * Controlled state in `columns` is not a good idea that makes too many code (1000+ line?)\n     * to read state out and then put it back to title render.\n     * Move these code into `hooks` but still too complex.\n     * We should provides Table props like `sorter` & `filter` to handle control in next big version.\n     */\n    // ============================ Sorter =============================\n    const onSorterChange = (sorter, sorterStates) => {\n        triggerOnChange({\n            sorter,\n            sorterStates,\n        }, false);\n    };\n    const [transformSorterColumns, sortStates, sorterTitleProps, getSorters] = useSorter({\n        prefixCls,\n        columns,\n        children,\n        onSorterChange,\n        sortDirections: sortDirections || ['ascend', 'descend'],\n    });\n    const sortedData = React.useMemo(() => getSortData(rawData, sortStates, childrenColumnName), [\n        rawData,\n        sortStates,\n    ]);\n    changeEventInfo.sorter = getSorters();\n    changeEventInfo.sorterStates = sortStates;\n    // ============================ Filter ============================\n    const onFilterChange = (filters, filterStates) => {\n        triggerOnChange({\n            filters,\n            filterStates,\n        }, true);\n    };\n    const [transformFilterColumns, filterStates, getFilters] = useFilter({\n        prefixCls,\n        locale: tableLocale,\n        dropdownPrefixCls,\n        columns: columns || [],\n        onFilterChange,\n        getPopupContainer,\n    });\n    const mergedData = getFilterData(sortedData, filterStates);\n    changeEventInfo.filters = getFilters();\n    changeEventInfo.filterStates = filterStates;\n    // ============================ Column ============================\n    const columnTitleProps = React.useMemo(() => (Object.assign({}, sorterTitleProps)), [sorterTitleProps]);\n    const [transformTitleColumns] = useTitleColumns(columnTitleProps);\n    // ========================== Pagination ==========================\n    const onPaginationChange = (current, pageSize) => {\n        triggerOnChange({\n            pagination: Object.assign(Object.assign({}, changeEventInfo.pagination), { current, pageSize }),\n        });\n    };\n    const [mergedPagination, resetPagination] = usePagination(mergedData.length, pagination, onPaginationChange);\n    changeEventInfo.pagination =\n        pagination === false ? {} : getPaginationParam(pagination, mergedPagination);\n    changeEventInfo.resetPagination = resetPagination;\n    // ============================= Data =============================\n    const pageData = React.useMemo(() => {\n        if (pagination === false ||\n            !mergedPagination.pageSize ||\n            mergedData.length < mergedPagination.total) {\n            return mergedData;\n        }\n        const { current = 1, pageSize = DEFAULT_PAGE_SIZE } = mergedPagination;\n        const currentPageData = mergedData.slice((current - 1) * pageSize, current * pageSize);\n        return currentPageData;\n    }, [\n        !!pagination,\n        mergedData,\n        mergedPagination && mergedPagination.current,\n        mergedPagination && mergedPagination.pageSize,\n        mergedPagination && mergedPagination.total,\n    ]);\n    // ========================== Selections ==========================\n    const [transformSelectionColumns, selectedKeySet] = useSelection(rowSelection, {\n        prefixCls,\n        data: mergedData,\n        pageData,\n        getRowKey,\n        getRecordByKey,\n        expandType,\n        childrenColumnName,\n        locale: tableLocale,\n        expandIconColumnIndex: mergedExpandable.expandIconColumnIndex,\n    });\n    const internalRowClassName = (record, index, indent) => {\n        let mergedRowClassName;\n        if (typeof rowClassName === 'function') {\n            mergedRowClassName = classNames(rowClassName(record, index, indent));\n        }\n        else {\n            mergedRowClassName = classNames(rowClassName);\n        }\n        return classNames({\n            [`${prefixCls}-row-selected`]: selectedKeySet.has(getRowKey(record, index)),\n        }, mergedRowClassName);\n    };\n    // ========================== Expandable ==========================\n    // Pass origin render status into `rc-table`, this can be removed when refactor with `rc-table`\n    mergedExpandable.__PARENT_RENDER_ICON__ = mergedExpandable.expandIcon;\n    // Customize expandable icon\n    mergedExpandable.expandIcon =\n        mergedExpandable.expandIcon || expandIcon || renderExpandIcon(tableLocale);\n    // Adjust expand icon index, no overwrite expandIconColumnIndex if set.\n    if (expandType === 'nest' && mergedExpandable.expandIconColumnIndex === undefined) {\n        mergedExpandable.expandIconColumnIndex = rowSelection ? 1 : 0;\n    }\n    else if (mergedExpandable.expandIconColumnIndex > 0 && rowSelection) {\n        mergedExpandable.expandIconColumnIndex -= 1;\n    }\n    // Indent size\n    mergedExpandable.indentSize = mergedExpandable.indentSize || indentSize || 15;\n    // ============================ Render ============================\n    const transformColumns = React.useCallback((innerColumns) => {\n        return transformTitleColumns(transformSelectionColumns(transformFilterColumns(transformSorterColumns(innerColumns))));\n    }, [transformSorterColumns, transformFilterColumns, transformSelectionColumns]);\n    let topPaginationNode;\n    let bottomPaginationNode;\n    if (pagination !== false) {\n        let paginationSize;\n        if (mergedPagination.size) {\n            paginationSize = mergedPagination.size;\n        }\n        else {\n            paginationSize = mergedSize === 'small' || mergedSize === 'middle' ? 'small' : undefined;\n        }\n        const renderPagination = () => (<Pagination className={`${prefixCls}-pagination`} {...mergedPagination} size={paginationSize}/>);\n        switch (mergedPagination.position) {\n            case 'top':\n                topPaginationNode = renderPagination();\n                break;\n            case 'both':\n                topPaginationNode = renderPagination();\n                bottomPaginationNode = renderPagination();\n                break;\n            default:\n                bottomPaginationNode = renderPagination();\n        }\n    }\n    // >>>>>>>>> Spinning\n    let spinProps;\n    if (typeof loading === 'boolean') {\n        spinProps = {\n            spinning: loading,\n        };\n    }\n    else {\n        spinProps = loading;\n    }\n    const wrapperClassNames = classNames(`${prefixCls}-wrapper`, className, {\n        [`${prefixCls}-wrapper-rtl`]: direction === 'rtl',\n    });\n    return (<div className={wrapperClassNames} style={style} onTouchMove={e => {\n        e.preventDefault();\n    }}>\n      <Spin spinning={false} {...spinProps}>\n        {topPaginationNode}\n        <RcTable {...tableProps} expandable={mergedExpandable} prefixCls={prefixCls} className={classNames({\n        [`${prefixCls}-middle`]: mergedSize === 'middle',\n        [`${prefixCls}-small`]: mergedSize === 'small',\n        [`${prefixCls}-bordered`]: bordered,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n    })} data={pageData} rowKey={getRowKey} rowClassName={internalRowClassName} emptyText={(locale && locale.emptyText) || renderEmpty('Table')} \n    // Internal\n    internalHooks={INTERNAL_HOOKS} internalRefs={internalRefs} transformColumns={transformColumns}/>\n        {bottomPaginationNode}\n      </Spin>\n    </div>);\n}\nTable.defaultProps = {\n    rowKey: 'key',\n};\nTable.SELECTION_ALL = SELECTION_ALL;\nTable.SELECTION_INVERT = SELECTION_INVERT;\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nexport default Table;\n"],"file":"Table.js"}