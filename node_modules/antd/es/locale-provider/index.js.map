{"version":3,"sources":["locale-provider/index.jsx"],"names":["React","PropTypes","changeConfirmLocale","warning","ANT_MARK","LocaleProvider","props","locale","Modal","_ANT_MARK__","antLocale","exist","prevProps","children","Component","defaultProps","childContextTypes","object"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAO,IAAMC,QAAQ,GAAG,cAAjB;;IACcC,c;;;AACjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;AACAJ,IAAAA,mBAAmB,CAACI,KAAK,CAACC,MAAN,IAAgBD,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAnB;AACAL,IAAAA,OAAO,CAACG,KAAK,CAACG,WAAN,KAAsBL,QAAvB,EAAiC,gBAAjC,EAAmD,+GAAnD,CAAP;AAHe;AAIlB;;;;sCACiB;AACd,aAAO;AACHM,QAAAA,SAAS,EAAE,SAAc,SAAc,EAAd,EAAkB,KAAKJ,KAAL,CAAWC,MAA7B,CAAd,EAAoD;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAApD;AADR,OAAP;AAGH;;;uCACkBC,S,EAAW;AAAA,UAClBL,MADkB,GACP,KAAKD,KADE,CAClBC,MADkB;;AAE1B,UAAIK,SAAS,CAACL,MAAV,KAAqBA,MAAzB,EAAiC;AAC7BL,QAAAA,mBAAmB,CAACK,MAAM,IAAIA,MAAM,CAACC,KAAlB,CAAnB;AACH;AACJ;;;2CACsB;AACnBN,MAAAA,mBAAmB;AACtB;;;6BACQ;AACL,aAAO,KAAKI,KAAL,CAAWO,QAAlB;AACH;;;;EAtBuCb,KAAK,CAACc,S;;SAA7BT,c;AAwBrBA,cAAc,CAACU,YAAf,GAA8B;AAC1BR,EAAAA,MAAM,EAAE;AADkB,CAA9B;AAGAF,cAAc,CAACW,iBAAf,GAAmC;AAC/BN,EAAAA,SAAS,EAAET,SAAS,CAACgB;AADU,CAAnC","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { changeConfirmLocale } from '../modal/locale';\nimport warning from '../_util/warning';\nexport const ANT_MARK = 'internalMark';\nexport default class LocaleProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        changeConfirmLocale(props.locale && props.locale.Modal);\n        warning(props._ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale');\n    }\n    getChildContext() {\n        return {\n            antLocale: Object.assign(Object.assign({}, this.props.locale), { exist: true }),\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { locale } = this.props;\n        if (prevProps.locale !== locale) {\n            changeConfirmLocale(locale && locale.Modal);\n        }\n    }\n    componentWillUnmount() {\n        changeConfirmLocale();\n    }\n    render() {\n        return this.props.children;\n    }\n}\nLocaleProvider.defaultProps = {\n    locale: {},\n};\nLocaleProvider.childContextTypes = {\n    antLocale: PropTypes.object,\n};\n"],"file":"index.js"}