{"version":3,"sources":["tree-select/index.jsx"],"names":["React","RcTreeSelect","TreeNode","SHOW_ALL","SHOW_PARENT","SHOW_CHILD","classNames","omit","ConfigConsumer","warning","getIcons","renderSwitcherIcon","SizeContext","TreeSelect","props","selectRef","createRef","renderTreeSelect","getContextPopupContainer","getPopupContainer","getPrefixCls","renderEmpty","direction","customizePrefixCls","prefixCls","customizeSize","size","className","treeCheckable","multiple","listHeight","listItemHeight","notFoundContent","switcherIcon","treeLine","dropdownClassName","bordered","treePrefixCls","treeSelectPrefixCls","mergedDropdownClassName","isMultiple","suffixIcon","itemIcon","removeIcon","clearIcon","mergedNotFound","undefined","selectProps","mergedSize","mergedClassName","nodeProps","current","focus","blur","Component","defaultProps","transitionName","choiceTransitionName"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcTreeSelect, { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD, } from 'rc-tree-select';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport getIcons from '../select/utils/iconUtil';\nimport renderSwitcherIcon from '../tree/utils/iconUtil';\nimport SizeContext from '../config-provider/SizeContext';\nclass TreeSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.selectRef = React.createRef();\n        this.renderTreeSelect = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, renderEmpty, direction, }) => {\n            const { prefixCls: customizePrefixCls, size: customizeSize, className, treeCheckable, multiple, listHeight = 256, listItemHeight = 32, notFoundContent, switcherIcon, treeLine, getPopupContainer, dropdownClassName, bordered, } = this.props;\n            const prefixCls = getPrefixCls('select', customizePrefixCls);\n            const treePrefixCls = getPrefixCls('select-tree', customizePrefixCls);\n            const treeSelectPrefixCls = getPrefixCls('tree-select', customizePrefixCls);\n            const mergedDropdownClassName = classNames(dropdownClassName, `${treeSelectPrefixCls}-dropdown`, {\n                [`${treeSelectPrefixCls}-dropdown-rtl`]: direction === 'rtl',\n            });\n            const isMultiple = !!(treeCheckable || multiple);\n            // ===================== Icons =====================\n            const { suffixIcon, itemIcon, removeIcon, clearIcon } = getIcons(Object.assign(Object.assign({}, this.props), { multiple: isMultiple }));\n            // ===================== Empty =====================\n            let mergedNotFound;\n            if (notFoundContent !== undefined) {\n                mergedNotFound = notFoundContent;\n            }\n            else {\n                mergedNotFound = renderEmpty('Select');\n            }\n            // ==================== Render =====================\n            const selectProps = omit(this.props, [\n                'prefixCls',\n                'suffixIcon',\n                'itemIcon',\n                'removeIcon',\n                'clearIcon',\n                'switcherIcon',\n                'size',\n                'bordered',\n            ]);\n            return (<SizeContext.Consumer>\n        {size => {\n                const mergedSize = customizeSize || size;\n                const mergedClassName = classNames(!customizePrefixCls && treeSelectPrefixCls, {\n                    [`${prefixCls}-lg`]: mergedSize === 'large',\n                    [`${prefixCls}-sm`]: mergedSize === 'small',\n                    [`${prefixCls}-rtl`]: direction === 'rtl',\n                    [`${prefixCls}-borderless`]: !bordered,\n                }, className);\n                return (<RcTreeSelect {...selectProps} ref={this.selectRef} prefixCls={prefixCls} className={mergedClassName} listHeight={listHeight} listItemHeight={listItemHeight} treeCheckable={treeCheckable ? (<span className={`${prefixCls}-tree-checkbox-inner`}/>) : (treeCheckable)} inputIcon={suffixIcon} menuItemSelectedIcon={itemIcon} removeIcon={removeIcon} clearIcon={clearIcon} switcherIcon={(nodeProps) => renderSwitcherIcon(treePrefixCls, switcherIcon, treeLine, nodeProps)} showTreeIcon={false} notFoundContent={mergedNotFound} getPopupContainer={getPopupContainer || getContextPopupContainer} treeMotion={null} dropdownClassName={mergedDropdownClassName}/>);\n            }}\n      </SizeContext.Consumer>);\n        };\n        warning(props.multiple !== false || !props.treeCheckable, 'TreeSelect', '`multiple` will alway be `true` when `treeCheckable` is true');\n    }\n    focus() {\n        if (this.selectRef.current) {\n            this.selectRef.current.focus();\n        }\n    }\n    blur() {\n        if (this.selectRef.current) {\n            this.selectRef.current.blur();\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTreeSelect}</ConfigConsumer>;\n    }\n}\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nTreeSelect.defaultProps = {\n    transitionName: 'slide-up',\n    choiceTransitionName: 'zoom',\n    bordered: true,\n};\nexport { TreeNode };\nexport default TreeSelect;\n"],"file":"index.js"}