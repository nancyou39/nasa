{"version":3,"sources":["tree/Tree.jsx"],"names":["React","RcTree","TreeNode","classNames","DirectoryTree","ConfigConsumer","collapseMotion","renderSwitcherIcon","Tree","arguments","setTreeRef","node","tree","renderTree","getPrefixCls","direction","props","customizePrefixCls","prefixCls","className","showIcon","showLine","switcherIcon","blockNode","children","checkable","nodeProps","Component","defaultProps","motion","motionAppear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,IAAiBC,QAAjB,QAAiC,SAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,kBAAP,MAA+B,kBAA/B;;IACqBC,I;;;AACjB,kBAAc;AAAA;;AAAA;;AACV,+EAASC,SAAT;;AACA,UAAKC,UAAL,GAAkB,UAACC,IAAD,EAAU;AACxB,YAAKC,IAAL,GAAYD,IAAZ;AACH,KAFD;;AAGA,UAAKE,UAAL,GAAkB,gBAAiC;AAAA;;AAAA,UAA9BC,YAA8B,QAA9BA,YAA8B;AAAA,UAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA;AAAA,UACvCC,KADuC,yBACvCA,KADuC;;AAAA,UAE5BC,kBAF4B,GAE8DD,KAF9D,CAEvCE,SAFuC;AAAA,UAERC,SAFQ,GAE8DH,KAF9D,CAERG,SAFQ;AAAA,UAEGC,QAFH,GAE8DJ,KAF9D,CAEGI,QAFH;AAAA,UAEaC,QAFb,GAE8DL,KAF9D,CAEaK,QAFb;AAAA,UAEuBC,aAFvB,GAE8DN,KAF9D,CAEuBM,YAFvB;AAAA,UAEqCC,SAFrC,GAE8DP,KAF9D,CAEqCO,SAFrC;AAAA,UAEgDC,QAFhD,GAE8DR,KAF9D,CAEgDQ,QAFhD;AAAA,UAGvCC,SAHuC,GAGzBT,KAHyB,CAGvCS,SAHuC;AAI/C,UAAMP,SAAS,GAAGJ,YAAY,CAAC,MAAD,EAASG,kBAAT,CAA9B;AACA,aAAQ,oBAAC,MAAD;AAAQ,QAAA,UAAU,EAAE,EAApB;AAAwB,QAAA,GAAG,EAAE,MAAKP;AAAlC,SAAkDM,KAAlD;AAAyD,QAAA,SAAS,EAAEE,SAApE;AAA+E,QAAA,SAAS,EAAEf,UAAU,CAACgB,SAAD,4DACpGD,SADoG,iBAC5E,CAACE,QAD2E,0CAEpGF,SAFoG,kBAE3EK,SAF2E,0CAGpGL,SAHoG,WAGlFH,SAAS,KAAK,KAHoE,gBAApG;AAIJ,QAAA,SAAS,EAAEU,SAAS,GAAG;AAAM,UAAA,SAAS,YAAKP,SAAL;AAAf,UAAH,GAAuDO,SAJvE;AAIkF,QAAA,YAAY,EAAE,sBAACC,SAAD;AAAA,iBAAenB,kBAAkB,CAACW,SAAD,EAAYI,aAAZ,EAA0BD,QAA1B,EAAoCK,SAApC,CAAjC;AAAA;AAJhG,UAKXF,QALW,CAAR;AAOH,KAZD;;AALU;AAkBb;;;;6BACQ;AACL,aAAO,oBAAC,cAAD,QAAiB,KAAKX,UAAtB,CAAP;AACH;;;;EAtB6Bb,KAAK,CAAC2B,S;;SAAnBnB,I;AAwBrBA,IAAI,CAACN,QAAL,GAAgBA,QAAhB;AACAM,IAAI,CAACJ,aAAL,GAAqBA,aAArB;AACAI,IAAI,CAACoB,YAAL,GAAoB;AAChBH,EAAAA,SAAS,EAAE,KADK;AAEhBL,EAAAA,QAAQ,EAAE,KAFM;AAGhBS,EAAAA,MAAM,EAAE,SAAc,SAAc,EAAd,EAAkBvB,cAAlB,CAAd,EAAiD;AAAEwB,IAAAA,YAAY,EAAE;AAAhB,GAAjD,CAHQ;AAIhBP,EAAAA,SAAS,EAAE;AAJK,CAApB","sourcesContent":["import * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport { ConfigConsumer } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nimport renderSwitcherIcon from './utils/iconUtil';\nexport default class Tree extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.setTreeRef = (node) => {\n            this.tree = node;\n        };\n        this.renderTree = ({ getPrefixCls, direction }) => {\n            const { props } = this;\n            const { prefixCls: customizePrefixCls, className, showIcon, showLine, switcherIcon, blockNode, children, } = props;\n            const { checkable } = props;\n            const prefixCls = getPrefixCls('tree', customizePrefixCls);\n            return (<RcTree itemHeight={20} ref={this.setTreeRef} {...props} prefixCls={prefixCls} className={classNames(className, {\n                [`${prefixCls}-icon-hide`]: !showIcon,\n                [`${prefixCls}-block-node`]: blockNode,\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            })} checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`}/> : checkable} switcherIcon={(nodeProps) => renderSwitcherIcon(prefixCls, switcherIcon, showLine, nodeProps)}>\n        {children}\n      </RcTree>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTree}</ConfigConsumer>;\n    }\n}\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n    checkable: false,\n    showIcon: false,\n    motion: Object.assign(Object.assign({}, collapseMotion), { motionAppear: false }),\n    blockNode: false,\n};\n"],"file":"Tree.js"}