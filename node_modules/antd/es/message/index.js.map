{"version":3,"sources":["message/index.jsx"],"names":["React","Notification","LoadingOutlined","ExclamationCircleFilled","CloseCircleFilled","CheckCircleFilled","InfoCircleFilled","defaultDuration","defaultTop","messageInstance","key","prefixCls","transitionName","getContainer","maxCount","getMessageInstance","callback","newInstance","style","top","instance","iconMap","info","success","error","warning","loading","notice","args","duration","undefined","IconComponent","type","target","closePromise","Promise","resolve","onClose","content","icon","result","removeNotice","then","filled","rejected","promise","isArgsProps","Object","prototype","toString","call","api","open","config","options","destroy","forEach","warn"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport InfoCircleFilled from '@ant-design/icons/InfoCircleFilled';\nlet defaultDuration = 3;\nlet defaultTop;\nlet messageInstance;\nlet key = 1;\nlet prefixCls = 'ant-message';\nlet transitionName = 'move-up';\nlet getContainer;\nlet maxCount;\nfunction getMessageInstance(callback) {\n    if (messageInstance) {\n        callback(messageInstance);\n        return;\n    }\n    Notification.newInstance({\n        prefixCls,\n        transitionName,\n        style: { top: defaultTop },\n        getContainer,\n        maxCount,\n    }, (instance) => {\n        if (messageInstance) {\n            callback(messageInstance);\n            return;\n        }\n        messageInstance = instance;\n        callback(instance);\n    });\n}\nconst iconMap = {\n    info: InfoCircleFilled,\n    success: CheckCircleFilled,\n    error: CloseCircleFilled,\n    warning: ExclamationCircleFilled,\n    loading: LoadingOutlined,\n};\nfunction notice(args) {\n    const duration = args.duration !== undefined ? args.duration : defaultDuration;\n    const IconComponent = iconMap[args.type];\n    const target = args.key || key++;\n    const closePromise = new Promise(resolve => {\n        const callback = () => {\n            if (typeof args.onClose === 'function') {\n                args.onClose();\n            }\n            return resolve(true);\n        };\n        getMessageInstance(instance => {\n            instance.notice({\n                key: target,\n                duration,\n                style: {},\n                content: (<div className={`${prefixCls}-custom-content${args.type ? ` ${prefixCls}-${args.type}` : ''}`}>\n            {args.icon || (IconComponent && <IconComponent />)}\n            <span>{args.content}</span>\n          </div>),\n                onClose: callback,\n            });\n        });\n    });\n    const result = () => {\n        if (messageInstance) {\n            messageInstance.removeNotice(target);\n        }\n    };\n    result.then = (filled, rejected) => closePromise.then(filled, rejected);\n    result.promise = closePromise;\n    return result;\n}\nfunction isArgsProps(content) {\n    return (Object.prototype.toString.call(content) === '[object Object]' &&\n        !!content.content);\n}\nconst api = {\n    open: notice,\n    config(options) {\n        if (options.top !== undefined) {\n            defaultTop = options.top;\n            messageInstance = null; // delete messageInstance for new defaultTop\n        }\n        if (options.duration !== undefined) {\n            defaultDuration = options.duration;\n        }\n        if (options.prefixCls !== undefined) {\n            prefixCls = options.prefixCls;\n        }\n        if (options.getContainer !== undefined) {\n            getContainer = options.getContainer;\n        }\n        if (options.transitionName !== undefined) {\n            transitionName = options.transitionName;\n            messageInstance = null; // delete messageInstance for new transitionName\n        }\n        if (options.maxCount !== undefined) {\n            maxCount = options.maxCount;\n            messageInstance = null;\n        }\n    },\n    destroy() {\n        if (messageInstance) {\n            messageInstance.destroy();\n            messageInstance = null;\n        }\n    },\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(type => {\n    api[type] = (content, duration, onClose) => {\n        if (isArgsProps(content)) {\n            return api.open(Object.assign(Object.assign({}, content), { type }));\n        }\n        if (typeof duration === 'function') {\n            onClose = duration;\n            duration = undefined;\n        }\n        return api.open({ content, duration, type, onClose });\n    };\n});\napi.warn = api.warning;\nexport default api;\n"],"file":"index.js"}