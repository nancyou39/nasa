{"version":3,"sources":["dropdown/dropdown.jsx"],"names":["React","RcDropdown","classNames","RightOutlined","ConfigConsumer","warning","tuple","Placements","Dropdown","arguments","renderOverlay","prefixCls","overlay","props","overlayNode","Children","only","overlayProps","mode","selectable","focusable","expandIcon","fixedModeOverlay","type","cloneElement","renderDropDown","getContextPopupContainer","getPopupContainer","getPrefixCls","direction","customizePrefixCls","children","trigger","disabled","overlayClassName","child","dropdownTrigger","className","overlayClassNameCustomized","triggerActions","alignPoint","indexOf","getTransitionName","getPlacement","placement","transitionName","undefined","Component","defaultProps","mouseEnterDelay","mouseLeaveDelay"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,IAAMC,UAAU,GAAGD,KAAK,CAAC,SAAD,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,YAArC,EAAmD,cAAnD,EAAmE,aAAnE,CAAxB;;IACqBE,Q;;;AACjB,sBAAc;AAAA;;AAAA;;AACV,mFAASC,SAAT;;AACA,UAAKC,aAAL,GAAqB,UAACC,SAAD,EAAe;AAChC;AACA;AAFgC,UAGxBC,OAHwB,GAGZ,MAAKC,KAHO,CAGxBD,OAHwB;AAIhC,UAAIE,WAAJ;;AACA,UAAI,OAAOF,OAAP,KAAmB,UAAvB,EAAmC;AAC/BE,QAAAA,WAAW,GAAGF,OAAO,EAArB;AACH,OAFD,MAGK;AACDE,QAAAA,WAAW,GAAGF,OAAd;AACH;;AACDE,MAAAA,WAAW,GAAGd,KAAK,CAACe,QAAN,CAAeC,IAAf,CAAoBF,WAApB,CAAd;AACA,UAAMG,YAAY,GAAGH,WAAW,CAACD,KAAjC,CAZgC,CAahC;;AACAR,MAAAA,OAAO,CAAC,CAACY,YAAY,CAACC,IAAd,IAAsBD,YAAY,CAACC,IAAb,KAAsB,UAA7C,EAAyD,UAAzD,mBAA8ED,YAAY,CAACC,IAA3F,8CAAP,CAdgC,CAehC;AACA;;AAhBgC,kCAiBiBD,YAjBjB,CAiBxBE,UAjBwB;AAAA,UAiBxBA,UAjBwB,sCAiBX,KAjBW;AAAA,kCAiBiBF,YAjBjB,CAiBJG,SAjBI;AAAA,UAiBJA,SAjBI,sCAiBQ,IAjBR;AAkBhC,UAAMC,UAAU,GAAI;AAAM,QAAA,SAAS,YAAKV,SAAL;AAAf,SACxB,oBAAC,aAAD;AAAe,QAAA,SAAS,YAAKA,SAAL;AAAxB,QADwB,CAApB;AAGA,UAAMW,gBAAgB,GAAG,OAAOR,WAAW,CAACS,IAAnB,KAA4B,QAA5B,GACnBX,OADmB,GAEnBZ,KAAK,CAACwB,YAAN,CAAmBV,WAAnB,EAAgC;AAC9BI,QAAAA,IAAI,EAAE,UADwB;AAE9BC,QAAAA,UAAU,EAAVA,UAF8B;AAG9BC,QAAAA,SAAS,EAATA,SAH8B;AAI9BC,QAAAA,UAAU,EAAVA;AAJ8B,OAAhC,CAFN;AAQA,aAAOC,gBAAP;AACH,KA9BD;;AA+BA,UAAKG,cAAL,GAAsB,gBAA+E;AAAA,UAAzDC,wBAAyD,QAA5EC,iBAA4E;AAAA,UAA/BC,YAA+B,QAA/BA,YAA+B;AAAA,UAAjBC,SAAiB,QAAjBA,SAAiB;AAAA,wBACY,MAAKhB,KADjB;AAAA,UAC9EiB,kBAD8E,eACzFnB,SADyF;AAAA,UAC1DoB,QAD0D,eAC1DA,QAD0D;AAAA,UAChDC,OADgD,eAChDA,OADgD;AAAA,UACvCC,QADuC,eACvCA,QADuC;AAAA,UAC7BN,iBAD6B,eAC7BA,iBAD6B;AAAA,UACVO,gBADU,eACVA,gBADU;AAEjG,UAAMvB,SAAS,GAAGiB,YAAY,CAAC,UAAD,EAAaE,kBAAb,CAA9B;AACA,UAAMK,KAAK,GAAGnC,KAAK,CAACe,QAAN,CAAeC,IAAf,CAAoBe,QAApB,CAAd;AACA,UAAMK,eAAe,GAAGpC,KAAK,CAACwB,YAAN,CAAmBW,KAAnB,EAA0B;AAC9CE,QAAAA,SAAS,EAAEnC,UAAU,CAACiC,KAAK,CAACtB,KAAN,CAAYwB,SAAb,YAA2B1B,SAA3B,6CACbA,SADa,WACKkB,SAAS,KAAK,KADnB,EADyB;AAI9CI,QAAAA,QAAQ,EAARA;AAJ8C,OAA1B,CAAxB;AAMA,UAAMK,0BAA0B,GAAGpC,UAAU,CAACgC,gBAAD,gCACrCvB,SADqC,WACnBkB,SAAS,KAAK,KADK,EAA7C;AAGA,UAAMU,cAAc,GAAGN,QAAQ,GAAG,EAAH,GAAQD,OAAvC;AACA,UAAIQ,UAAJ;;AACA,UAAID,cAAc,IAAIA,cAAc,CAACE,OAAf,CAAuB,aAAvB,MAA0C,CAAC,CAAjE,EAAoE;AAChED,QAAAA,UAAU,GAAG,IAAb;AACH;;AACD,aAAQ,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAEA;AAAxB,SAAwC,MAAK3B,KAA7C;AAAoD,QAAA,gBAAgB,EAAEyB,0BAAtE;AAAkG,QAAA,SAAS,EAAE3B,SAA7G;AAAwH,QAAA,iBAAiB,EAAEgB,iBAAiB,IAAID,wBAAhK;AAA0L,QAAA,cAAc,EAAE,MAAKgB,iBAAL,EAA1M;AAAoO,QAAA,OAAO,EAAEH,cAA7O;AAA6P,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAK7B,aAAL,CAAmBC,SAAnB,CAAN;AAAA,SAAtQ;AAA2S,QAAA,SAAS,EAAE,MAAKgC,YAAL,CAAkBd,SAAlB;AAAtT,UACXO,eADW,CAAR;AAGH,KArBD;;AAjCU;AAuDb;;;;wCACmB;AAAA,yBAC2B,KAAKvB,KADhC;AAAA,+CACR+B,SADQ;AAAA,UACRA,SADQ,sCACI,EADJ;AAAA,UACQC,cADR,gBACQA,cADR;;AAEhB,UAAIA,cAAc,KAAKC,SAAvB,EAAkC;AAC9B,eAAOD,cAAP;AACH;;AACD,UAAID,SAAS,CAACH,OAAV,CAAkB,KAAlB,KAA4B,CAAhC,EAAmC;AAC/B,eAAO,YAAP;AACH;;AACD,aAAO,UAAP;AACH;;;mCAC+B;AAAA,UAAnBZ,SAAmB,uEAAP,KAAO;AAAA,UACpBe,SADoB,GACN,KAAK/B,KADC,CACpB+B,SADoB;;AAE5B,UAAIA,SAAS,KAAKE,SAAlB,EAA6B;AACzB,eAAOF,SAAP;AACH;;AACD,aAAOf,SAAS,KAAK,KAAd,GAAsB,aAAtB,GAAsC,YAA7C;AACH;;;6BACQ;AACL,aAAO,oBAAC,cAAD,QAAiB,KAAKJ,cAAtB,CAAP;AACH;;;;EA5EiCzB,KAAK,CAAC+C,S;;SAAvBvC,Q;AA8ErBA,QAAQ,CAACwC,YAAT,GAAwB;AACpBC,EAAAA,eAAe,EAAE,IADG;AAEpBC,EAAAA,eAAe,EAAE;AAFG,CAAxB","sourcesContent":["import * as React from 'react';\nimport RcDropdown from 'rc-dropdown';\nimport classNames from 'classnames';\nimport RightOutlined from '@ant-design/icons/RightOutlined';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { tuple } from '../_util/type';\nconst Placements = tuple('topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight');\nexport default class Dropdown extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderOverlay = (prefixCls) => {\n            // rc-dropdown already can process the function of overlay, but we have check logic here.\n            // So we need render the element to check and pass back to rc-dropdown.\n            const { overlay } = this.props;\n            let overlayNode;\n            if (typeof overlay === 'function') {\n                overlayNode = overlay();\n            }\n            else {\n                overlayNode = overlay;\n            }\n            overlayNode = React.Children.only(overlayNode);\n            const overlayProps = overlayNode.props;\n            // Warning if use other mode\n            warning(!overlayProps.mode || overlayProps.mode === 'vertical', 'Dropdown', `mode=\"${overlayProps.mode}\" is not supported for Dropdown's Menu.`);\n            // menu cannot be selectable in dropdown defaultly\n            // menu should be focusable in dropdown defaultly\n            const { selectable = false, focusable = true } = overlayProps;\n            const expandIcon = (<span className={`${prefixCls}-menu-submenu-arrow`}>\n        <RightOutlined className={`${prefixCls}-menu-submenu-arrow-icon`}/>\n      </span>);\n            const fixedModeOverlay = typeof overlayNode.type === 'string'\n                ? overlay\n                : React.cloneElement(overlayNode, {\n                    mode: 'vertical',\n                    selectable,\n                    focusable,\n                    expandIcon,\n                });\n            return fixedModeOverlay;\n        };\n        this.renderDropDown = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, direction, }) => {\n            const { prefixCls: customizePrefixCls, children, trigger, disabled, getPopupContainer, overlayClassName, } = this.props;\n            const prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n            const child = React.Children.only(children);\n            const dropdownTrigger = React.cloneElement(child, {\n                className: classNames(child.props.className, `${prefixCls}-trigger`, {\n                    [`${prefixCls}-rtl`]: direction === 'rtl',\n                }),\n                disabled,\n            });\n            const overlayClassNameCustomized = classNames(overlayClassName, {\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            const triggerActions = disabled ? [] : trigger;\n            let alignPoint;\n            if (triggerActions && triggerActions.indexOf('contextMenu') !== -1) {\n                alignPoint = true;\n            }\n            return (<RcDropdown alignPoint={alignPoint} {...this.props} overlayClassName={overlayClassNameCustomized} prefixCls={prefixCls} getPopupContainer={getPopupContainer || getContextPopupContainer} transitionName={this.getTransitionName()} trigger={triggerActions} overlay={() => this.renderOverlay(prefixCls)} placement={this.getPlacement(direction)}>\n        {dropdownTrigger}\n      </RcDropdown>);\n        };\n    }\n    getTransitionName() {\n        const { placement = '', transitionName } = this.props;\n        if (transitionName !== undefined) {\n            return transitionName;\n        }\n        if (placement.indexOf('top') >= 0) {\n            return 'slide-down';\n        }\n        return 'slide-up';\n    }\n    getPlacement(direction = 'ltr') {\n        const { placement } = this.props;\n        if (placement !== undefined) {\n            return placement;\n        }\n        return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n    }\n    render() {\n        return <ConfigConsumer>{this.renderDropDown}</ConfigConsumer>;\n    }\n}\nDropdown.defaultProps = {\n    mouseEnterDelay: 0.15,\n    mouseLeaveDelay: 0.1,\n};\n"],"file":"dropdown.js"}