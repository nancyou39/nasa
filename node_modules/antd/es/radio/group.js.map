{"version":3,"sources":["radio/group.jsx"],"names":["React","classNames","Radio","ConfigConsumer","SizeContext","RadioGroupContextProvider","getCheckedValue","children","value","matched","Children","forEach","radio","props","checked","undefined","RadioGroup","onRadioChange","ev","lastValue","state","target","setState","onChange","renderGroup","getPrefixCls","direction","customizePrefixCls","prefixCls","className","options","buttonStyle","customizeSize","size","groupPrefixCls","length","map","option","disabled","style","label","mergedSize","classString","onMouseEnter","onMouseLeave","id","defaultValue","checkedValue","name","nextProps","PureComponent","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport Radio from './radio';\nimport { ConfigConsumer } from '../config-provider';\nimport SizeContext from '../config-provider/SizeContext';\nimport { RadioGroupContextProvider } from './context';\nfunction getCheckedValue(children) {\n    let value = null;\n    let matched = false;\n    React.Children.forEach(children, (radio) => {\n        if (radio && radio.props && radio.props.checked) {\n            value = radio.props.value;\n            matched = true;\n        }\n    });\n    return matched ? { value } : undefined;\n}\nclass RadioGroup extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.onRadioChange = (ev) => {\n            const lastValue = this.state.value;\n            const { value } = ev.target;\n            if (!('value' in this.props)) {\n                this.setState({\n                    value,\n                });\n            }\n            const { onChange } = this.props;\n            if (onChange && value !== lastValue) {\n                onChange(ev);\n            }\n        };\n        this.renderGroup = ({ getPrefixCls, direction }) => {\n            const { props } = this;\n            const { prefixCls: customizePrefixCls, className = '', options, buttonStyle, size: customizeSize, } = props;\n            const prefixCls = getPrefixCls('radio', customizePrefixCls);\n            const groupPrefixCls = `${prefixCls}-group`;\n            let { children } = props;\n            // 如果存在 options, 优先使用\n            if (options && options.length > 0) {\n                children = options.map(option => {\n                    if (typeof option === 'string') {\n                        // 此处类型自动推导为 string\n                        return (<Radio key={option} prefixCls={prefixCls} disabled={this.props.disabled} value={option} checked={this.state.value === option}>\n              {option}\n            </Radio>);\n                    }\n                    // 此处类型自动推导为 { label: string value: string }\n                    return (<Radio key={`radio-group-value-options-${option.value}`} prefixCls={prefixCls} disabled={option.disabled || this.props.disabled} value={option.value} checked={this.state.value === option.value} style={option.style}>\n            {option.label}\n          </Radio>);\n                });\n            }\n            return (<SizeContext.Consumer>\n        {size => {\n                const mergedSize = customizeSize || size;\n                const classString = classNames(groupPrefixCls, `${groupPrefixCls}-${buttonStyle}`, {\n                    [`${groupPrefixCls}-${mergedSize}`]: mergedSize,\n                    [`${groupPrefixCls}-rtl`]: direction === 'rtl',\n                }, className);\n                return (<div className={classString} style={props.style} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave} id={props.id}>\n              {children}\n            </div>);\n            }}\n      </SizeContext.Consumer>);\n        };\n        let value;\n        if ('value' in props) {\n            value = props.value;\n        }\n        else if ('defaultValue' in props) {\n            value = props.defaultValue;\n        }\n        else {\n            const checkedValue = getCheckedValue(props.children);\n            value = checkedValue && checkedValue.value;\n        }\n        this.state = {\n            value,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value,\n            };\n        }\n        const checkedValue = getCheckedValue(nextProps.children);\n        if (checkedValue) {\n            return {\n                value: checkedValue.value,\n            };\n        }\n        return null;\n    }\n    render() {\n        return (<RadioGroupContextProvider value={{\n            onChange: this.onRadioChange,\n            value: this.state.value,\n            disabled: this.props.disabled,\n            name: this.props.name,\n        }}>\n        <ConfigConsumer>{this.renderGroup}</ConfigConsumer>\n      </RadioGroupContextProvider>);\n    }\n}\nRadioGroup.defaultProps = {\n    buttonStyle: 'outline',\n};\nexport default RadioGroup;\n"],"file":"group.js"}