{"version":3,"sources":["upload/UploadList.jsx"],"names":["React","Animate","classNames","LoadingOutlined","PaperClipOutlined","PictureTwoTone","FileTwoTone","EyeOutlined","DeleteOutlined","DownloadOutlined","previewImage","isImageUrl","Tooltip","Progress","ConfigConsumer","UploadList","arguments","handlePreview","file","e","onPreview","props","preventDefault","handleDownload","onDownload","url","window","open","handleClose","onRemove","handleIconRender","listType","locale","iconRender","isLoading","status","fileIcon","icon","uploading","handleActionIconRender","customIcon","callback","title","isValidElement","cloneElement","onClick","renderUploadList","getPrefixCls","direction","customizePrefixCls","prefixCls","items","showPreviewIcon","showRemoveIcon","showDownloadIcon","customRemoveIcon","removeIcon","customDownloadIcon","downloadIcon","progressAttr","list","map","progress","iconNode","thumbUrl","uploadingClassName","thumbnail","name","aClassName","loadingProgress","percent","infoUploadingClass","linkProps","JSON","parse","removeFile","downloadFile","downloadOrDelete","listItemNameClass","filter","x","length","preview","style","pointerEvents","opacity","previewIcon","undefined","previewFile","actions","message","response","error","statusText","uploadError","iconAndPreview","dom","listContainerNameClass","uid","listClassNames","animationDirection","forEach","document","FileReader","File","originFileObj","Blob","then","previewDataUrl","forceUpdate","Component","defaultProps","strokeWidth","showInfo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,SAAzC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,cAAT,QAA+B,oBAA/B;;IACqBC,U;;;AACjB,wBAAc;AAAA;;AAAA;;AACV,qFAASC,SAAT;;AACA,UAAKC,aAAL,GAAqB,UAACC,IAAD,EAAOC,CAAP,EAAa;AAAA,UACtBC,SADsB,GACR,MAAKC,KADG,CACtBD,SADsB;;AAE9B,UAAI,CAACA,SAAL,EAAgB;AACZ;AACH;;AACDD,MAAAA,CAAC,CAACG,cAAF;AACA,aAAOF,SAAS,CAACF,IAAD,CAAhB;AACH,KAPD;;AAQA,UAAKK,cAAL,GAAsB,UAACL,IAAD,EAAU;AAAA,UACpBM,UADoB,GACL,MAAKH,KADA,CACpBG,UADoB;;AAE5B,UAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC;AAClCA,QAAAA,UAAU,CAACN,IAAD,CAAV;AACH,OAFD,MAGK,IAAIA,IAAI,CAACO,GAAT,EAAc;AACfC,QAAAA,MAAM,CAACC,IAAP,CAAYT,IAAI,CAACO,GAAjB;AACH;AACJ,KARD;;AASA,UAAKG,WAAL,GAAmB,UAACV,IAAD,EAAU;AAAA,UACjBW,QADiB,GACJ,MAAKR,KADD,CACjBQ,QADiB;;AAEzB,UAAIA,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACX,IAAD,CAAR;AACH;AACJ,KALD;;AAMA,UAAKY,gBAAL,GAAwB,UAACZ,IAAD,EAAU;AAAA,wBACW,MAAKG,KADhB;AAAA,UACtBU,QADsB,eACtBA,QADsB;AAAA,UACZC,MADY,eACZA,MADY;AAAA,UACJC,UADI,eACJA,UADI;;AAE9B,UAAIA,UAAJ,EAAgB;AACZ,eAAOA,UAAU,CAACf,IAAD,EAAOa,QAAP,CAAjB;AACH;;AACD,UAAMG,SAAS,GAAGhB,IAAI,CAACiB,MAAL,KAAgB,WAAlC;AACA,UAAMC,QAAQ,GAAGzB,UAAU,CAACO,IAAD,CAAV,GAAmB,oBAAC,cAAD,OAAnB,GAAwC,oBAAC,WAAD,OAAzD;AACA,UAAImB,IAAI,GAAGH,SAAS,GAAG,oBAAC,eAAD,OAAH,GAAyB,oBAAC,iBAAD,OAA7C;;AACA,UAAIH,QAAQ,KAAK,SAAjB,EAA4B;AACxBM,QAAAA,IAAI,GAAGH,SAAS,GAAG,oBAAC,eAAD,OAAH,GAAyBE,QAAzC;AACH,OAFD,MAGK,IAAIL,QAAQ,KAAK,cAAjB,EAAiC;AAClCM,QAAAA,IAAI,GAAGH,SAAS,GAAGF,MAAM,CAACM,SAAV,GAAsBF,QAAtC;AACH;;AACD,aAAOC,IAAP;AACH,KAfD;;AAgBA,UAAKE,sBAAL,GAA8B,UAACC,UAAD,EAAaC,QAAb,EAAuBC,KAAvB,EAAiC;AAC3D,UAAI1C,KAAK,CAAC2C,cAAN,CAAqBH,UAArB,CAAJ,EAAsC;AAClC,eAAOxC,KAAK,CAAC4C,YAAN,CAAmBJ,UAAnB,EAA+B,SAAc,SAAc,EAAd,EAAkBA,UAAU,CAACnB,KAA7B,CAAd,EAAmD;AAAEqB,UAAAA,KAAK,EAALA,KAAF;AAASG,UAAAA,OAAO,EAAE,iBAAC1B,CAAD,EAAO;AAC1GsB,YAAAA,QAAQ;;AACR,gBAAID,UAAU,CAACnB,KAAX,CAAiBwB,OAArB,EAA8B;AAC1BL,cAAAA,UAAU,CAACnB,KAAX,CAAiBwB,OAAjB,CAAyB1B,CAAzB;AACH;AACJ;AALoF,SAAnD,CAA/B,CAAP;AAMH;;AACD,aAAQ;AAAM,QAAA,KAAK,EAAEuB,KAAb;AAAoB,QAAA,OAAO,EAAED;AAA7B,SACXD,UADW,CAAR;AAGH,KAZD;;AAaA,UAAKM,gBAAL,GAAwB,gBAAiC;AAAA;;AAAA,UAA9BC,YAA8B,QAA9BA,YAA8B;AAAA,UAAhBC,SAAgB,QAAhBA,SAAgB;AAAA,yBACqJ,MAAK3B,KAD1J;AAAA,UAClC4B,kBADkC,gBAC7CC,SAD6C;AAAA,4CACdC,KADc;AAAA,UACdA,KADc,mCACN,EADM;AAAA,UACFpB,QADE,gBACFA,QADE;AAAA,UACQqB,eADR,gBACQA,eADR;AAAA,UACyBC,cADzB,gBACyBA,cADzB;AAAA,UACyCC,gBADzC,gBACyCA,gBADzC;AAAA,UACuEC,gBADvE,gBAC2DC,UAD3D;AAAA,UACuGC,kBADvG,gBACyFC,YADzF;AAAA,UAC2H1B,MAD3H,gBAC2HA,MAD3H;AAAA,UACmI2B,YADnI,gBACmIA,YADnI;AAErD,UAAMT,SAAS,GAAGH,YAAY,CAAC,QAAD,EAAWE,kBAAX,CAA9B;AACA,UAAMW,IAAI,GAAGT,KAAK,CAACU,GAAN,CAAU,UAAA3C,IAAI,EAAI;AAAA;;AAC3B,YAAI4C,QAAJ;;AACA,YAAMC,QAAQ,GAAG,MAAKjC,gBAAL,CAAsBZ,IAAtB,CAAjB;;AACA,YAAImB,IAAI,GAAG;AAAK,UAAA,SAAS,YAAKa,SAAL;AAAd,WAA2Ca,QAA3C,CAAX;;AACA,YAAIhC,QAAQ,KAAK,SAAb,IAA0BA,QAAQ,KAAK,cAA3C,EAA2D;AACvD,cAAIb,IAAI,CAACiB,MAAL,KAAgB,WAAhB,IAAgC,CAACjB,IAAI,CAAC8C,QAAN,IAAkB,CAAC9C,IAAI,CAACO,GAA5D,EAAkE;AAAA;;AAC9D,gBAAMwC,kBAAkB,GAAG/D,UAAU,2DAC7BgD,SAD6B,2BACK,IADL,0CAE7BA,SAF6B,sBAEAhC,IAAI,CAACiB,MAAL,KAAgB,WAFhB,gBAArC;AAIAE,YAAAA,IAAI,GAAG;AAAK,cAAA,SAAS,EAAE4B;AAAhB,eAAqCF,QAArC,CAAP;AACH,WAND,MAOK;AAAA;;AACD,gBAAMG,SAAS,GAAGvD,UAAU,CAACO,IAAD,CAAV,GAAoB;AAAK,cAAA,GAAG,EAAEA,IAAI,CAAC8C,QAAL,IAAiB9C,IAAI,CAACO,GAAhC;AAAqC,cAAA,GAAG,EAAEP,IAAI,CAACiD,IAA/C;AAAqD,cAAA,SAAS,YAAKjB,SAAL;AAA9D,cAApB,GAA0Ha,QAA5I;AACA,gBAAMK,UAAU,GAAGlE,UAAU,6DACrBgD,SADqB,2BACa,IADb,2CAErBA,SAFqB,sBAEQ,CAACvC,UAAU,CAACO,IAAD,CAFnB,iBAA7B;AAIAmB,YAAAA,IAAI,GAAI;AAAG,cAAA,SAAS,EAAE+B,UAAd;AAA0B,cAAA,OAAO,EAAE,iBAAAjD,CAAC;AAAA,uBAAI,MAAKF,aAAL,CAAmBC,IAAnB,EAAyBC,CAAzB,CAAJ;AAAA,eAApC;AAAqE,cAAA,IAAI,EAAED,IAAI,CAACO,GAAL,IAAYP,IAAI,CAAC8C,QAA5F;AAAsG,cAAA,MAAM,EAAC,QAA7G;AAAsH,cAAA,GAAG,EAAC;AAA1H,eACjBE,SADiB,CAAR;AAGH;AACJ;;AACD,YAAIhD,IAAI,CAACiB,MAAL,KAAgB,WAApB,EAAiC;AAC7B;AACA,cAAMkC,eAAe,GAAG,aAAanD,IAAb,GAAqB,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAC;AAAf,aAA0ByC,YAA1B;AAAwC,YAAA,OAAO,EAAEzC,IAAI,CAACoD;AAAtD,aAArB,GAAyF,IAAjH;AACAR,UAAAA,QAAQ,GAAI;AAAK,YAAA,SAAS,YAAKZ,SAAL,wBAAd;AAAmD,YAAA,GAAG,EAAC;AAAvD,aACnBmB,eADmB,CAAZ;AAGH;;AACD,YAAME,kBAAkB,GAAGrE,UAAU,6DAC7BgD,SAD6B,iBACL,IADK,2CAE7BA,SAF6B,wBAENhC,IAAI,CAACiB,MAFC,GAEU,IAFV,2CAG7Be,SAH6B,kCAGInB,QAHJ,GAGiB,IAHjB,iBAArC;AAKA,YAAMyC,SAAS,GAAG,OAAOtD,IAAI,CAACsD,SAAZ,KAA0B,QAA1B,GAAqCC,IAAI,CAACC,KAAL,CAAWxD,IAAI,CAACsD,SAAhB,CAArC,GAAkEtD,IAAI,CAACsD,SAAzF;AACA,YAAMhB,UAAU,GAAGH,cAAc,GAC1BE,gBAAgB,IACf,MAAKhB,sBAAL,CAA4BgB,gBAA5B,EAA8C;AAAA,iBAAM,MAAK3B,WAAL,CAAiBV,IAAjB,CAAN;AAAA,SAA9C,EAA4Ec,MAAM,CAAC2C,UAAnF,CADF,IACsG,oBAAC,cAAD;AAAgB,UAAA,KAAK,EAAE3C,MAAM,CAAC2C,UAA9B;AAA0C,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAK/C,WAAL,CAAiBV,IAAjB,CAAN;AAAA;AAAnD,UAF3E,GAG3B,IAHN;AAIA,YAAMwC,YAAY,GAAGJ,gBAAgB,IAAIpC,IAAI,CAACiB,MAAL,KAAgB,MAApC,GACdsB,kBAAkB,IACjB,MAAKlB,sBAAL,CAA4BkB,kBAA5B,EAAgD;AAAA,iBAAM,MAAKlC,cAAL,CAAoBL,IAApB,CAAN;AAAA,SAAhD,EAAiFc,MAAM,CAAC4C,YAAxF,CADF,IAC6G,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAE5C,MAAM,CAAC4C,YAAhC;AAA8C,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAKrD,cAAL,CAAoBL,IAApB,CAAN;AAAA;AAAvD,UAF9F,GAGf,IAHN;AAIA,YAAM2D,gBAAgB,GAAG9C,QAAQ,KAAK,cAAb,IAAgC;AAAM,UAAA,GAAG,EAAC,iBAAV;AAA4B,UAAA,SAAS,YAAKmB,SAAL,qCAAyCnB,QAAQ,KAAK,SAAb,GAAyB,SAAzB,GAAqC,EAA9E;AAArC,WAC9D2B,YAAY,IAAI;AAAG,UAAA,KAAK,EAAE1B,MAAM,CAAC4C;AAAjB,WAAgClB,YAAhC,CAD8C,EAE9DF,UAAU,IAAI;AAAG,UAAA,KAAK,EAAExB,MAAM,CAAC2C;AAAjB,WAA8BnB,UAA9B,CAFgD,CAAzD;AAIA,YAAMsB,iBAAiB,GAAG5E,UAAU,6DAC5BgD,SAD4B,sBACC,IADD,2CAE5BA,SAF4B,wCAEW,CAACQ,YAAD,EAAeF,UAAf,EAA2BuB,MAA3B,CAAkC,UAAAC,CAAC;AAAA,iBAAIA,CAAJ;AAAA,SAAnC,EAA0CC,MAFrD,GAEgE,IAFhE,iBAApC;AAIA,YAAMC,OAAO,GAAGhE,IAAI,CAACO,GAAL,GACV,CACE;AAAG,UAAA,GAAG,EAAC,MAAP;AAAc,UAAA,MAAM,EAAC,QAArB;AAA8B,UAAA,GAAG,EAAC,qBAAlC;AAAwD,UAAA,SAAS,EAAEqD,iBAAnE;AAAsF,UAAA,KAAK,EAAE5D,IAAI,CAACiD;AAAlG,WAA4GK,SAA5G;AAAuH,UAAA,IAAI,EAAEtD,IAAI,CAACO,GAAlI;AAAuI,UAAA,OAAO,EAAE,iBAAAN,CAAC;AAAA,mBAAI,MAAKF,aAAL,CAAmBC,IAAnB,EAAyBC,CAAzB,CAAJ;AAAA;AAAjJ,YACTD,IAAI,CAACiD,IADI,CADF,EAIEU,gBAJF,CADU,GAOV,CACE;AAAM,UAAA,GAAG,EAAC,MAAV;AAAiB,UAAA,SAAS,EAAEC,iBAA5B;AAA+C,UAAA,OAAO,EAAE,iBAAA3D,CAAC;AAAA,mBAAI,MAAKF,aAAL,CAAmBC,IAAnB,EAAyBC,CAAzB,CAAJ;AAAA,WAAzD;AAA0F,UAAA,KAAK,EAAED,IAAI,CAACiD;AAAtG,WACTjD,IAAI,CAACiD,IADI,CADF,EAIEU,gBAJF,CAPN;AAaA,YAAMM,KAAK,GAAG;AACVC,UAAAA,aAAa,EAAE,MADL;AAEVC,UAAAA,OAAO,EAAE;AAFC,SAAd;AAIA,YAAMC,WAAW,GAAGlC,eAAe,GAAI;AAAG,UAAA,IAAI,EAAElC,IAAI,CAACO,GAAL,IAAYP,IAAI,CAAC8C,QAA1B;AAAoC,UAAA,MAAM,EAAC,QAA3C;AAAoD,UAAA,GAAG,EAAC,qBAAxD;AAA8E,UAAA,KAAK,EAAE9C,IAAI,CAACO,GAAL,IAAYP,IAAI,CAAC8C,QAAjB,GAA4BuB,SAA5B,GAAwCJ,KAA7H;AAAoI,UAAA,OAAO,EAAE,iBAAAhE,CAAC;AAAA,mBAAI,MAAKF,aAAL,CAAmBC,IAAnB,EAAyBC,CAAzB,CAAJ;AAAA,WAA9I;AAA+K,UAAA,KAAK,EAAEa,MAAM,CAACwD;AAA7L,WAC7C,oBAAC,WAAD,OAD6C,CAAJ,GAEnC,IAFA;AAGA,YAAMC,OAAO,GAAG1D,QAAQ,KAAK,cAAb,IAA+Bb,IAAI,CAACiB,MAAL,KAAgB,WAA/C,IAA+D;AAAM,UAAA,SAAS,YAAKe,SAAL;AAAf,WACpFoC,WADoF,EAEpFpE,IAAI,CAACiB,MAAL,KAAgB,MAAhB,IAA0BuB,YAF0D,EAGpFF,UAHoF,CAA/E;AAKA,YAAIkC,OAAJ;;AACA,YAAIxE,IAAI,CAACyE,QAAL,IAAiB,OAAOzE,IAAI,CAACyE,QAAZ,KAAyB,QAA9C,EAAwD;AACpDD,UAAAA,OAAO,GAAGxE,IAAI,CAACyE,QAAf;AACH,SAFD,MAGK;AACDD,UAAAA,OAAO,GAAIxE,IAAI,CAAC0E,KAAL,IAAc1E,IAAI,CAAC0E,KAAL,CAAWC,UAA1B,IAAyC7D,MAAM,CAAC8D,WAA1D;AACH;;AACD,YAAMC,cAAc,GAAI,kCAC7B1D,IAD6B,EAE7B6C,OAF6B,CAAxB;AAIA,YAAMc,GAAG,GAAI;AAAK,UAAA,SAAS,EAAEzB;AAAhB,WACnB;AAAK,UAAA,SAAS,YAAKrB,SAAL;AAAd,WAAgD6C,cAAhD,CADmB,EAElBN,OAFkB,EAGnB,oBAAC,OAAD;AAAS,UAAA,cAAc,EAAC,MAAxB;AAA+B,UAAA,SAAS,EAAC;AAAzC,WACG3B,QADH,CAHmB,CAAb;AAOA,YAAMmC,sBAAsB,GAAG/F,UAAU,+BACjCgD,SADiC,mCACSnB,QAAQ,KAAK,cADtB,EAAzC;AAGA,eAAQ;AAAK,UAAA,GAAG,EAAEb,IAAI,CAACgF,GAAf;AAAoB,UAAA,SAAS,EAAED;AAA/B,WACb/E,IAAI,CAACiB,MAAL,KAAgB,OAAhB,GAA0B,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAEuD;AAAhB,WAA0BM,GAA1B,CAA1B,GAAqE,kCAAOA,GAAP,CADxD,CAAR;AAGH,OArGY,CAAb;AAsGA,UAAMG,cAAc,GAAGjG,UAAU,6DACzBgD,SADyB,YACN,IADM,2CAEzBA,SAFyB,mBAEPnB,QAFO,GAEM,IAFN,2CAGzBmB,SAHyB,gBAGFF,SAAS,KAAK,KAHZ,iBAAjC;AAKA,UAAMoD,kBAAkB,GAAGrE,QAAQ,KAAK,cAAb,GAA8B,gBAA9B,GAAiD,SAA5E;AACA,aAAQ,oBAAC,OAAD;AAAS,QAAA,cAAc,YAAKmB,SAAL,cAAkBkD,kBAAlB,CAAvB;AAA+D,QAAA,SAAS,EAAC,KAAzE;AAA+E,QAAA,SAAS,EAAED;AAA1F,SACXvC,IADW,CAAR;AAGH,KAlHD;;AAtDU;AAyKb;;;;yCACoB;AAAA;;AAAA,yBACwB,KAAKvC,KAD7B;AAAA,UACTU,QADS,gBACTA,QADS;AAAA,UACCoB,KADD,gBACCA,KADD;AAAA,UACQqC,WADR,gBACQA,WADR;;AAEjB,UAAIzD,QAAQ,KAAK,SAAb,IAA0BA,QAAQ,KAAK,cAA3C,EAA2D;AACvD;AACH;;AACD,OAACoB,KAAK,IAAI,EAAV,EAAckD,OAAd,CAAsB,UAAAnF,IAAI,EAAI;AAC1B,YAAI,OAAOoF,QAAP,KAAoB,WAApB,IACA,OAAO5E,MAAP,KAAkB,WADlB,IAEA,CAACA,MAAM,CAAC6E,UAFR,IAGA,CAAC7E,MAAM,CAAC8E,IAHR,IAIA,EAAEtF,IAAI,CAACuF,aAAL,YAA8BD,IAA9B,IAAsCtF,IAAI,CAACuF,aAAL,YAA8BC,IAAtE,CAJA,IAKAxF,IAAI,CAAC8C,QAAL,KAAkBuB,SALtB,EAKiC;AAC7B;AACH;;AACDrE,QAAAA,IAAI,CAAC8C,QAAL,GAAgB,EAAhB;;AACA,YAAIwB,WAAJ,EAAiB;AACbA,UAAAA,WAAW,CAACtE,IAAI,CAACuF,aAAN,CAAX,CAAgCE,IAAhC,CAAqC,UAACC,cAAD,EAAoB;AACrD;AACA1F,YAAAA,IAAI,CAAC8C,QAAL,GAAgB4C,cAAc,IAAI,EAAlC;;AACA,YAAA,MAAI,CAACC,WAAL;AACH,WAJD;AAKH;AACJ,OAjBD;AAkBH;;;6BACQ;AACL,aAAO,oBAAC,cAAD,QAAiB,KAAK/D,gBAAtB,CAAP;AACH;;;;EArMmC9C,KAAK,CAAC8G,S;;SAAzB/F,U;AAuMrBA,UAAU,CAACgG,YAAX,GAA0B;AACtBhF,EAAAA,QAAQ,EAAE,MADY;AAEtB4B,EAAAA,YAAY,EAAE;AACVqD,IAAAA,WAAW,EAAE,CADH;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GAFQ;AAMtB5D,EAAAA,cAAc,EAAE,IANM;AAOtBC,EAAAA,gBAAgB,EAAE,KAPI;AAQtBF,EAAAA,eAAe,EAAE,IARK;AAStBoC,EAAAA,WAAW,EAAE9E;AATS,CAA1B","sourcesContent":["import * as React from 'react';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport LoadingOutlined from '@ant-design/icons/LoadingOutlined';\nimport PaperClipOutlined from '@ant-design/icons/PaperClipOutlined';\nimport PictureTwoTone from '@ant-design/icons/PictureTwoTone';\nimport FileTwoTone from '@ant-design/icons/FileTwoTone';\nimport EyeOutlined from '@ant-design/icons/EyeOutlined';\nimport DeleteOutlined from '@ant-design/icons/DeleteOutlined';\nimport DownloadOutlined from '@ant-design/icons/DownloadOutlined';\nimport { previewImage, isImageUrl } from './utils';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport { ConfigConsumer } from '../config-provider';\nexport default class UploadList extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handlePreview = (file, e) => {\n            const { onPreview } = this.props;\n            if (!onPreview) {\n                return;\n            }\n            e.preventDefault();\n            return onPreview(file);\n        };\n        this.handleDownload = (file) => {\n            const { onDownload } = this.props;\n            if (typeof onDownload === 'function') {\n                onDownload(file);\n            }\n            else if (file.url) {\n                window.open(file.url);\n            }\n        };\n        this.handleClose = (file) => {\n            const { onRemove } = this.props;\n            if (onRemove) {\n                onRemove(file);\n            }\n        };\n        this.handleIconRender = (file) => {\n            const { listType, locale, iconRender } = this.props;\n            if (iconRender) {\n                return iconRender(file, listType);\n            }\n            const isLoading = file.status === 'uploading';\n            const fileIcon = isImageUrl(file) ? <PictureTwoTone /> : <FileTwoTone />;\n            let icon = isLoading ? <LoadingOutlined /> : <PaperClipOutlined />;\n            if (listType === 'picture') {\n                icon = isLoading ? <LoadingOutlined /> : fileIcon;\n            }\n            else if (listType === 'picture-card') {\n                icon = isLoading ? locale.uploading : fileIcon;\n            }\n            return icon;\n        };\n        this.handleActionIconRender = (customIcon, callback, title) => {\n            if (React.isValidElement(customIcon)) {\n                return React.cloneElement(customIcon, Object.assign(Object.assign({}, customIcon.props), { title, onClick: (e) => {\n                        callback();\n                        if (customIcon.props.onClick) {\n                            customIcon.props.onClick(e);\n                        }\n                    } }));\n            }\n            return (<span title={title} onClick={callback}>\n        {customIcon}\n      </span>);\n        };\n        this.renderUploadList = ({ getPrefixCls, direction }) => {\n            const { prefixCls: customizePrefixCls, items = [], listType, showPreviewIcon, showRemoveIcon, showDownloadIcon, removeIcon: customRemoveIcon, downloadIcon: customDownloadIcon, locale, progressAttr, } = this.props;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const list = items.map(file => {\n                let progress;\n                const iconNode = this.handleIconRender(file);\n                let icon = <div className={`${prefixCls}-text-icon`}>{iconNode}</div>;\n                if (listType === 'picture' || listType === 'picture-card') {\n                    if (file.status === 'uploading' || (!file.thumbUrl && !file.url)) {\n                        const uploadingClassName = classNames({\n                            [`${prefixCls}-list-item-thumbnail`]: true,\n                            [`${prefixCls}-list-item-file`]: file.status !== 'uploading',\n                        });\n                        icon = <div className={uploadingClassName}>{iconNode}</div>;\n                    }\n                    else {\n                        const thumbnail = isImageUrl(file) ? (<img src={file.thumbUrl || file.url} alt={file.name} className={`${prefixCls}-list-item-image`}/>) : (iconNode);\n                        const aClassName = classNames({\n                            [`${prefixCls}-list-item-thumbnail`]: true,\n                            [`${prefixCls}-list-item-file`]: !isImageUrl(file),\n                        });\n                        icon = (<a className={aClassName} onClick={e => this.handlePreview(file, e)} href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              {thumbnail}\n            </a>);\n                    }\n                }\n                if (file.status === 'uploading') {\n                    // show loading icon if upload progress listener is disabled\n                    const loadingProgress = 'percent' in file ? (<Progress type=\"line\" {...progressAttr} percent={file.percent}/>) : null;\n                    progress = (<div className={`${prefixCls}-list-item-progress`} key=\"progress\">\n            {loadingProgress}\n          </div>);\n                }\n                const infoUploadingClass = classNames({\n                    [`${prefixCls}-list-item`]: true,\n                    [`${prefixCls}-list-item-${file.status}`]: true,\n                    [`${prefixCls}-list-item-list-type-${listType}`]: true,\n                });\n                const linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n                const removeIcon = showRemoveIcon\n                    ? (customRemoveIcon &&\n                        this.handleActionIconRender(customRemoveIcon, () => this.handleClose(file), locale.removeFile)) || (<DeleteOutlined title={locale.removeFile} onClick={() => this.handleClose(file)}/>)\n                    : null;\n                const downloadIcon = showDownloadIcon && file.status === 'done'\n                    ? (customDownloadIcon &&\n                        this.handleActionIconRender(customDownloadIcon, () => this.handleDownload(file), locale.downloadFile)) || (<DownloadOutlined title={locale.downloadFile} onClick={() => this.handleDownload(file)}/>)\n                    : null;\n                const downloadOrDelete = listType !== 'picture-card' && (<span key=\"download-delete\" className={`${prefixCls}-list-item-card-actions ${listType === 'picture' ? 'picture' : ''}`}>\n          {downloadIcon && <a title={locale.downloadFile}>{downloadIcon}</a>}\n          {removeIcon && <a title={locale.removeFile}>{removeIcon}</a>}\n        </span>);\n                const listItemNameClass = classNames({\n                    [`${prefixCls}-list-item-name`]: true,\n                    [`${prefixCls}-list-item-name-icon-count-${[downloadIcon, removeIcon].filter(x => x).length}`]: true,\n                });\n                const preview = file.url\n                    ? [\n                        <a key=\"view\" target=\"_blank\" rel=\"noopener noreferrer\" className={listItemNameClass} title={file.name} {...linkProps} href={file.url} onClick={e => this.handlePreview(file, e)}>\n              {file.name}\n            </a>,\n                        downloadOrDelete,\n                    ]\n                    : [\n                        <span key=\"view\" className={listItemNameClass} onClick={e => this.handlePreview(file, e)} title={file.name}>\n              {file.name}\n            </span>,\n                        downloadOrDelete,\n                    ];\n                const style = {\n                    pointerEvents: 'none',\n                    opacity: 0.5,\n                };\n                const previewIcon = showPreviewIcon ? (<a href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={file.url || file.thumbUrl ? undefined : style} onClick={e => this.handlePreview(file, e)} title={locale.previewFile}>\n          <EyeOutlined />\n        </a>) : null;\n                const actions = listType === 'picture-card' && file.status !== 'uploading' && (<span className={`${prefixCls}-list-item-actions`}>\n          {previewIcon}\n          {file.status === 'done' && downloadIcon}\n          {removeIcon}\n        </span>);\n                let message;\n                if (file.response && typeof file.response === 'string') {\n                    message = file.response;\n                }\n                else {\n                    message = (file.error && file.error.statusText) || locale.uploadError;\n                }\n                const iconAndPreview = (<span>\n          {icon}\n          {preview}\n        </span>);\n                const dom = (<div className={infoUploadingClass}>\n          <div className={`${prefixCls}-list-item-info`}>{iconAndPreview}</div>\n          {actions}\n          <Animate transitionName=\"fade\" component=\"\">\n            {progress}\n          </Animate>\n        </div>);\n                const listContainerNameClass = classNames({\n                    [`${prefixCls}-list-picture-card-container`]: listType === 'picture-card',\n                });\n                return (<div key={file.uid} className={listContainerNameClass}>\n          {file.status === 'error' ? <Tooltip title={message}>{dom}</Tooltip> : <span>{dom}</span>}\n        </div>);\n            });\n            const listClassNames = classNames({\n                [`${prefixCls}-list`]: true,\n                [`${prefixCls}-list-${listType}`]: true,\n                [`${prefixCls}-list-rtl`]: direction === 'rtl',\n            });\n            const animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n            return (<Animate transitionName={`${prefixCls}-${animationDirection}`} component=\"div\" className={listClassNames}>\n        {list}\n      </Animate>);\n        };\n    }\n    componentDidUpdate() {\n        const { listType, items, previewFile } = this.props;\n        if (listType !== 'picture' && listType !== 'picture-card') {\n            return;\n        }\n        (items || []).forEach(file => {\n            if (typeof document === 'undefined' ||\n                typeof window === 'undefined' ||\n                !window.FileReader ||\n                !window.File ||\n                !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) ||\n                file.thumbUrl !== undefined) {\n                return;\n            }\n            file.thumbUrl = '';\n            if (previewFile) {\n                previewFile(file.originFileObj).then((previewDataUrl) => {\n                    // Need append '' to avoid dead loop\n                    file.thumbUrl = previewDataUrl || '';\n                    this.forceUpdate();\n                });\n            }\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUploadList}</ConfigConsumer>;\n    }\n}\nUploadList.defaultProps = {\n    listType: 'text',\n    progressAttr: {\n        strokeWidth: 2,\n        showInfo: false,\n    },\n    showRemoveIcon: true,\n    showDownloadIcon: false,\n    showPreviewIcon: true,\n    previewFile: previewImage,\n};\n"],"file":"UploadList.js"}