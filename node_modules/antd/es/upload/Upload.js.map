{"version":3,"sources":["upload/Upload.jsx"],"names":["React","RcUpload","classNames","uniqBy","findIndex","UploadList","T","fileToObject","getFileItem","removeFileItem","LocaleReceiver","defaultLocale","ConfigConsumer","warning","Upload","props","saveUpload","node","upload","onStart","file","fileList","state","targetItem","status","nextFileList","concat","fileIndex","uid","push","onChange","onSuccess","response","xhr","clearProgressTimer","JSON","parse","e","onProgress","percent","event","onError","error","handleRemove","onRemove","Promise","resolve","then","ret","removedFileList","abort","info","setState","onFileDrop","dragState","type","beforeUpload","stateFileList","result","map","item","renderUploadList","locale","showUploadList","listType","onPreview","onDownload","previewFile","disabled","propLocale","iconRender","showRemoveIcon","showPreviewIcon","showDownloadIcon","removeIcon","downloadIcon","renderUpload","getPrefixCls","direction","customizePrefixCls","prefixCls","className","children","style","rcUploadProps","uploadList","dragCls","some","uploadButtonCls","id","uploadButton","undefined","display","defaultFileList","clearInterval","progressTimer","nextProps","Component","defaultProps","multiple","action","data","accept","supportServerRender"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcUpload from 'rc-upload';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport findIndex from 'lodash/findIndex';\nimport UploadList from './UploadList';\nimport { T, fileToObject, getFileItem, removeFileItem } from './utils';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nclass Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveUpload = (node) => {\n            this.upload = node;\n        };\n        this.onStart = (file) => {\n            const { fileList } = this.state;\n            const targetItem = fileToObject(file);\n            targetItem.status = 'uploading';\n            const nextFileList = fileList.concat();\n            const fileIndex = findIndex(nextFileList, ({ uid }) => uid === targetItem.uid);\n            if (fileIndex === -1) {\n                nextFileList.push(targetItem);\n            }\n            else {\n                nextFileList[fileIndex] = targetItem;\n            }\n            this.onChange({\n                file: targetItem,\n                fileList: nextFileList,\n            });\n        };\n        this.onSuccess = (response, file, xhr) => {\n            this.clearProgressTimer();\n            try {\n                if (typeof response === 'string') {\n                    response = JSON.parse(response);\n                }\n            }\n            catch (e) {\n                /* do nothing */\n            }\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.status = 'done';\n            targetItem.response = response;\n            targetItem.xhr = xhr;\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.onProgress = (e, file) => {\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.percent = e.percent;\n            this.onChange({\n                event: e,\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.onError = (error, response, file) => {\n            this.clearProgressTimer();\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.error = error;\n            targetItem.response = response;\n            targetItem.status = 'error';\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.handleRemove = (file) => {\n            const { onRemove } = this.props;\n            const { fileList } = this.state;\n            Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(ret => {\n                // Prevent removing file\n                if (ret === false) {\n                    return;\n                }\n                const removedFileList = removeFileItem(file, fileList);\n                if (removedFileList) {\n                    file.status = 'removed'; // eslint-disable-line\n                    if (this.upload) {\n                        this.upload.abort(file);\n                    }\n                    this.onChange({\n                        file,\n                        fileList: removedFileList,\n                    });\n                }\n            });\n        };\n        this.onChange = (info) => {\n            if (!('fileList' in this.props)) {\n                this.setState({ fileList: info.fileList });\n            }\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(info);\n            }\n        };\n        this.onFileDrop = (e) => {\n            this.setState({\n                dragState: e.type,\n            });\n        };\n        this.beforeUpload = (file, fileList) => {\n            const { beforeUpload } = this.props;\n            const { fileList: stateFileList } = this.state;\n            if (!beforeUpload) {\n                return true;\n            }\n            const result = beforeUpload(file, fileList);\n            if (result === false) {\n                this.onChange({\n                    file,\n                    fileList: uniqBy(stateFileList.concat(fileList.map(fileToObject)), (item) => item.uid),\n                });\n                return false;\n            }\n            if (result && result.then) {\n                return result;\n            }\n            return true;\n        };\n        this.renderUploadList = (locale) => {\n            const { showUploadList, listType, onPreview, onDownload, previewFile, disabled, locale: propLocale, iconRender, } = this.props;\n            const { showRemoveIcon, showPreviewIcon, showDownloadIcon, removeIcon, downloadIcon, } = showUploadList;\n            const { fileList } = this.state;\n            return (<UploadList listType={listType} items={fileList} previewFile={previewFile} onPreview={onPreview} onDownload={onDownload} onRemove={this.handleRemove} showRemoveIcon={!disabled && showRemoveIcon} showPreviewIcon={showPreviewIcon} showDownloadIcon={showDownloadIcon} removeIcon={removeIcon} downloadIcon={downloadIcon} iconRender={iconRender} locale={Object.assign(Object.assign({}, locale), propLocale)}/>);\n        };\n        this.renderUpload = ({ getPrefixCls, direction }) => {\n            const { prefixCls: customizePrefixCls, className, showUploadList, listType, type, disabled, children, style, } = this.props;\n            const { fileList, dragState } = this.state;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const rcUploadProps = Object.assign(Object.assign({ onStart: this.onStart, onError: this.onError, onProgress: this.onProgress, onSuccess: this.onSuccess }, this.props), { prefixCls, beforeUpload: this.beforeUpload });\n            delete rcUploadProps.className;\n            delete rcUploadProps.style;\n            const uploadList = showUploadList ? (<LocaleReceiver componentName=\"Upload\" defaultLocale={defaultLocale.Upload}>\n        {this.renderUploadList}\n      </LocaleReceiver>) : null;\n            if (type === 'drag') {\n                const dragCls = classNames(prefixCls, {\n                    [`${prefixCls}-drag`]: true,\n                    [`${prefixCls}-drag-uploading`]: fileList.some(file => file.status === 'uploading'),\n                    [`${prefixCls}-drag-hover`]: dragState === 'dragover',\n                    [`${prefixCls}-disabled`]: disabled,\n                }, className);\n                return (<span>\n          <div className={dragCls} onDrop={this.onFileDrop} onDragOver={this.onFileDrop} onDragLeave={this.onFileDrop} style={style}>\n            <RcUpload {...rcUploadProps} ref={this.saveUpload} className={`${prefixCls}-btn`}>\n              <div className={`${prefixCls}-drag-container`}>{children}</div>\n            </RcUpload>\n          </div>\n          {uploadList}\n        </span>);\n            }\n            const uploadButtonCls = classNames(prefixCls, {\n                [`${prefixCls}-select`]: true,\n                [`${prefixCls}-select-${listType}`]: true,\n                [`${prefixCls}-disabled`]: disabled,\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            // Remove id to avoid open by label when trigger is hidden\n            // https://github.com/ant-design/ant-design/issues/14298\n            // https://github.com/ant-design/ant-design/issues/16478\n            if (!children || disabled) {\n                delete rcUploadProps.id;\n            }\n            const uploadButton = (<div className={uploadButtonCls} style={children ? undefined : { display: 'none' }}>\n        <RcUpload {...rcUploadProps} ref={this.saveUpload}/>\n      </div>);\n            if (listType === 'picture-card') {\n                return (<span className={classNames(className, `${prefixCls}-picture-card-wrapper`)}>\n          {uploadList}\n          {uploadButton}\n        </span>);\n            }\n            return (<span className={className}>\n        {uploadButton}\n        {uploadList}\n      </span>);\n        };\n        this.state = {\n            fileList: props.fileList || props.defaultFileList || [],\n            dragState: 'drop',\n        };\n        warning('fileList' in props || !('value' in props), 'Upload', '`value` is not validate prop, do you mean `fileList`?');\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('fileList' in nextProps) {\n            return {\n                fileList: nextProps.fileList || [],\n            };\n        }\n        return null;\n    }\n    componentWillUnmount() {\n        this.clearProgressTimer();\n    }\n    clearProgressTimer() {\n        clearInterval(this.progressTimer);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUpload}</ConfigConsumer>;\n    }\n}\nUpload.defaultProps = {\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    beforeUpload: T,\n    showUploadList: true,\n    listType: 'text',\n    className: '',\n    disabled: false,\n    supportServerRender: true,\n};\nexport default Upload;\n"],"file":"Upload.js"}