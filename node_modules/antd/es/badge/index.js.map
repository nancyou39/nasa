{"version":3,"sources":["badge/index.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","Animate","omit","classNames","ScrollNumber","PresetColorTypes","ConfigConsumer","isPresetColor","color","Badge","arguments","renderBadge","getPrefixCls","direction","_a","props","customizePrefixCls","prefixCls","customizeScrollNumberPrefixCls","scrollNumberPrefixCls","children","status","text","restProps","omitArr","scrollNumber","renderBadgeNumber","statusText","renderStatusText","statusCls","hasStatus","statusStyle","background","styleWithOffset","getStyleWithOffset","statusTextColor","getBadgeClassName","count","overflowCount","displayCount","isDot","getNumberedDisplayCount","title","undefined","offset","style","right","parseInt","marginTop","className","numberedDisplayCount","dot","isZero","showZero","getDisplayCount","isEmpty","hidden","isHidden","customNode","cloneElement","scrollNumberCls","toString","renderDisplayComponent","getScrollNumberTitle","Component","defaultProps"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport Animate from 'rc-animate';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport ScrollNumber from './ScrollNumber';\nimport { PresetColorTypes } from '../_util/colors';\nimport { ConfigConsumer } from '../config-provider';\nfunction isPresetColor(color) {\n    return PresetColorTypes.indexOf(color) !== -1;\n}\nexport default class Badge extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderBadge = ({ getPrefixCls, direction }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, scrollNumberPrefixCls: customizeScrollNumberPrefixCls, children, status, text, color } = _a, restProps = __rest(_a, [\"prefixCls\", \"scrollNumberPrefixCls\", \"children\", \"status\", \"text\", \"color\"]);\n            const omitArr = [\n                'count',\n                'showZero',\n                'overflowCount',\n                'className',\n                'style',\n                'dot',\n                'offset',\n                'title',\n            ];\n            const prefixCls = getPrefixCls('badge', customizePrefixCls);\n            const scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n            const scrollNumber = this.renderBadgeNumber(prefixCls, scrollNumberPrefixCls);\n            const statusText = this.renderStatusText(prefixCls);\n            const statusCls = classNames({\n                [`${prefixCls}-status-dot`]: this.hasStatus(),\n                [`${prefixCls}-status-${status}`]: !!status,\n                [`${prefixCls}-status-${color}`]: isPresetColor(color),\n            });\n            const statusStyle = {};\n            if (color && !isPresetColor(color)) {\n                statusStyle.background = color;\n            }\n            // <Badge status=\"success\" />\n            if (!children && this.hasStatus()) {\n                const styleWithOffset = this.getStyleWithOffset();\n                const statusTextColor = styleWithOffset && styleWithOffset.color;\n                return (<span {...omit(restProps, omitArr)} className={this.getBadgeClassName(prefixCls, direction)} style={styleWithOffset}>\n          <span className={statusCls} style={statusStyle}/>\n          <span style={{ color: statusTextColor }} className={`${prefixCls}-status-text`}>\n            {text}\n          </span>\n        </span>);\n            }\n            return (<span {...omit(restProps, omitArr)} className={this.getBadgeClassName(prefixCls, direction)}>\n        {children}\n        <Animate component=\"\" showProp=\"data-show\" transitionName={children ? `${prefixCls}-zoom` : ''} transitionAppear>\n          {scrollNumber}\n        </Animate>\n        {statusText}\n      </span>);\n        };\n    }\n    getNumberedDisplayCount() {\n        const { count, overflowCount } = this.props;\n        const displayCount = count > overflowCount ? `${overflowCount}+` : count;\n        return displayCount;\n    }\n    getDisplayCount() {\n        const isDot = this.isDot();\n        // dot mode don't need count\n        if (isDot) {\n            return '';\n        }\n        return this.getNumberedDisplayCount();\n    }\n    getScrollNumberTitle() {\n        const { title, count } = this.props;\n        if (title) {\n            return title;\n        }\n        return typeof count === 'string' || typeof count === 'number' ? count : undefined;\n    }\n    getStyleWithOffset() {\n        const { offset, style } = this.props;\n        return offset\n            ? Object.assign({ right: -parseInt(offset[0], 10), marginTop: offset[1] }, style) : style;\n    }\n    getBadgeClassName(prefixCls, direction = 'ltr') {\n        const { className, children } = this.props;\n        return classNames(className, prefixCls, {\n            [`${prefixCls}-status`]: this.hasStatus(),\n            [`${prefixCls}-not-a-wrapper`]: !children,\n            [`${prefixCls}-rtl`]: direction === 'rtl',\n        });\n    }\n    hasStatus() {\n        const { status, color } = this.props;\n        return !!status || !!color;\n    }\n    isZero() {\n        const numberedDisplayCount = this.getNumberedDisplayCount();\n        return numberedDisplayCount === '0' || numberedDisplayCount === 0;\n    }\n    isDot() {\n        const { dot } = this.props;\n        const isZero = this.isZero();\n        return (dot && !isZero) || this.hasStatus();\n    }\n    isHidden() {\n        const { showZero } = this.props;\n        const displayCount = this.getDisplayCount();\n        const isZero = this.isZero();\n        const isDot = this.isDot();\n        const isEmpty = displayCount === null || displayCount === undefined || displayCount === '';\n        return (isEmpty || (isZero && !showZero)) && !isDot;\n    }\n    renderStatusText(prefixCls) {\n        const { text } = this.props;\n        const hidden = this.isHidden();\n        return hidden || !text ? null : <span className={`${prefixCls}-status-text`}>{text}</span>;\n    }\n    renderDisplayComponent() {\n        const { count } = this.props;\n        const customNode = count;\n        if (!customNode || typeof customNode !== 'object') {\n            return undefined;\n        }\n        return React.cloneElement(customNode, {\n            style: Object.assign(Object.assign({}, this.getStyleWithOffset()), (customNode.props && customNode.props.style)),\n        });\n    }\n    renderBadgeNumber(prefixCls, scrollNumberPrefixCls) {\n        const { status, count, color } = this.props;\n        const displayCount = this.getDisplayCount();\n        const isDot = this.isDot();\n        const hidden = this.isHidden();\n        const scrollNumberCls = classNames({\n            [`${prefixCls}-dot`]: isDot,\n            [`${prefixCls}-count`]: !isDot,\n            [`${prefixCls}-multiple-words`]: !isDot && count && count.toString && count.toString().length > 1,\n            [`${prefixCls}-status-${status}`]: !!status,\n            [`${prefixCls}-status-${color}`]: isPresetColor(color),\n        });\n        let statusStyle = this.getStyleWithOffset();\n        if (color && !isPresetColor(color)) {\n            statusStyle = statusStyle || {};\n            statusStyle.background = color;\n        }\n        return hidden ? null : (<ScrollNumber prefixCls={scrollNumberPrefixCls} data-show={!hidden} className={scrollNumberCls} count={displayCount} displayComponent={this.renderDisplayComponent()} // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n         title={this.getScrollNumberTitle()} style={statusStyle} key=\"scrollNumber\"/>);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderBadge}</ConfigConsumer>;\n    }\n}\nBadge.defaultProps = {\n    count: null,\n    showZero: false,\n    dot: false,\n    overflowCount: 99,\n};\n"],"file":"index.js"}