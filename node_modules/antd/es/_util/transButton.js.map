{"version":3,"sources":["_util/transButton.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","KeyCode","inlineStyle","border","background","padding","lineHeight","display","TransButton","arguments","onKeyDown","event","keyCode","ENTER","preventDefault","onKeyUp","onClick","props","setRef","btn","div","focus","blur","_a","style","noStyle","restProps","Component"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/**\n * Wrap of sub component which need use as Button capacity (like Icon component).\n * This helps accessibility reader to tread as a interactive button to operation.\n */\nimport * as React from 'react';\nimport KeyCode from 'rc-util/lib/KeyCode';\nconst inlineStyle = {\n    border: 0,\n    background: 'transparent',\n    padding: 0,\n    lineHeight: 'inherit',\n    display: 'inline-block',\n};\nclass TransButton extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onKeyDown = event => {\n            const { keyCode } = event;\n            if (keyCode === KeyCode.ENTER) {\n                event.preventDefault();\n            }\n        };\n        this.onKeyUp = event => {\n            const { keyCode } = event;\n            const { onClick } = this.props;\n            if (keyCode === KeyCode.ENTER && onClick) {\n                onClick();\n            }\n        };\n        this.setRef = (btn) => {\n            this.div = btn;\n        };\n    }\n    focus() {\n        if (this.div) {\n            this.div.focus();\n        }\n    }\n    blur() {\n        if (this.div) {\n            this.div.blur();\n        }\n    }\n    render() {\n        const _a = this.props, { style, noStyle } = _a, restProps = __rest(_a, [\"style\", \"noStyle\"]);\n        return (<div role=\"button\" tabIndex={0} ref={this.setRef} {...restProps} onKeyDown={this.onKeyDown} onKeyUp={this.onKeyUp} style={Object.assign(Object.assign({}, (!noStyle ? inlineStyle : null)), style)}/>);\n    }\n}\nexport default TransButton;\n"],"file":"transButton.js"}