{"version":3,"sources":["_util/responsiveObserve.js"],"names":["responsiveArray","responsiveMap","xs","sm","md","lg","xl","xxl","subscribers","subUid","screens","responsiveObserve","matchHandlers","dispatch","pointMap","length","forEach","item","func","subscribe","register","token","toString","push","unsubscribe","filter","unregister","Object","keys","screen","matchMediaQuery","handler","mql","listener","removeListener","matches","window","matchMedia","addListener"],"mappings":"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","sourcesContent":["export const responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const responsiveMap = {\n    xs: '(max-width: 575px)',\n    sm: '(min-width: 576px)',\n    md: '(min-width: 768px)',\n    lg: '(min-width: 992px)',\n    xl: '(min-width: 1200px)',\n    xxl: '(min-width: 1600px)',\n};\nlet subscribers = [];\nlet subUid = -1;\nlet screens = {};\nconst responsiveObserve = {\n    matchHandlers: {},\n    dispatch(pointMap) {\n        screens = pointMap;\n        if (subscribers.length < 1) {\n            return false;\n        }\n        subscribers.forEach(item => {\n            item.func(screens);\n        });\n        return true;\n    },\n    subscribe(func) {\n        if (subscribers.length === 0) {\n            this.register();\n        }\n        const token = (++subUid).toString();\n        subscribers.push({\n            token,\n            func,\n        });\n        func(screens);\n        return token;\n    },\n    unsubscribe(token) {\n        subscribers = subscribers.filter(item => item.token !== token);\n        if (subscribers.length === 0) {\n            this.unregister();\n        }\n    },\n    unregister() {\n        Object.keys(responsiveMap).forEach((screen) => {\n            const matchMediaQuery = responsiveMap[screen];\n            const handler = this.matchHandlers[matchMediaQuery];\n            if (handler && handler.mql && handler.listener) {\n                handler.mql.removeListener(handler.listener);\n            }\n        });\n    },\n    register() {\n        Object.keys(responsiveMap).forEach((screen) => {\n            const matchMediaQuery = responsiveMap[screen];\n            const listener = ({ matches }) => {\n                this.dispatch(Object.assign(Object.assign({}, screens), { [screen]: matches }));\n            };\n            const mql = window.matchMedia(matchMediaQuery);\n            mql.addListener(listener);\n            this.matchHandlers[matchMediaQuery] = {\n                mql,\n                listener,\n            };\n            listener(mql);\n        });\n    },\n};\nexport default responsiveObserve;\n"],"file":"responsiveObserve.js"}