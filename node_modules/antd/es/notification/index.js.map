{"version":3,"sources":["notification/index.jsx"],"names":["React","Notification","CloseOutlined","CheckCircleOutlined","CloseCircleOutlined","ExclamationCircleOutlined","InfoCircleOutlined","createUseNotification","notificationInstance","defaultDuration","defaultTop","defaultBottom","defaultPlacement","defaultGetContainer","defaultCloseIcon","setNotificationConfig","options","duration","placement","bottom","top","getContainer","closeIcon","undefined","getPlacementStyle","style","left","right","getNotificationInstance","args","callback","outerPrefixCls","prefixCls","cacheKey","cacheInstance","Promise","resolve","then","instance","closeIconToRender","newInstance","className","notification","typeToIcon","success","info","error","warning","getRCNoticeProps","iconNode","icon","type","createElement","autoMarginTag","description","content","message","btn","closable","onClose","onClick","key","api","open","notice","close","Object","keys","forEach","removeNotice","config","destroy","warn","useNotification"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport CheckCircleOutlined from '@ant-design/icons/CheckCircleOutlined';\nimport CloseCircleOutlined from '@ant-design/icons/CloseCircleOutlined';\nimport ExclamationCircleOutlined from '@ant-design/icons/ExclamationCircleOutlined';\nimport InfoCircleOutlined from '@ant-design/icons/InfoCircleOutlined';\nimport createUseNotification from './hooks/useNotification';\nconst notificationInstance = {};\nlet defaultDuration = 4.5;\nlet defaultTop = 24;\nlet defaultBottom = 24;\nlet defaultPlacement = 'topRight';\nlet defaultGetContainer;\nlet defaultCloseIcon;\nfunction setNotificationConfig(options) {\n    const { duration, placement, bottom, top, getContainer, closeIcon } = options;\n    if (duration !== undefined) {\n        defaultDuration = duration;\n    }\n    if (placement !== undefined) {\n        defaultPlacement = placement;\n    }\n    if (bottom !== undefined) {\n        defaultBottom = bottom;\n    }\n    if (top !== undefined) {\n        defaultTop = top;\n    }\n    if (getContainer !== undefined) {\n        defaultGetContainer = getContainer;\n    }\n    if (closeIcon !== undefined) {\n        defaultCloseIcon = closeIcon;\n    }\n}\nfunction getPlacementStyle(placement, top = defaultTop, bottom = defaultBottom) {\n    let style;\n    switch (placement) {\n        case 'topLeft':\n            style = {\n                left: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'topRight':\n            style = {\n                right: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'bottomLeft':\n            style = {\n                left: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n        default:\n            style = {\n                right: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n    }\n    return style;\n}\nfunction getNotificationInstance(args, callback) {\n    const { placement = defaultPlacement, top, bottom, getContainer = defaultGetContainer, closeIcon = defaultCloseIcon, } = args;\n    const outerPrefixCls = args.prefixCls || 'ant-notification';\n    const prefixCls = `${outerPrefixCls}-notice`;\n    const cacheKey = `${outerPrefixCls}-${placement}`;\n    const cacheInstance = notificationInstance[cacheKey];\n    if (cacheInstance) {\n        Promise.resolve(cacheInstance).then(instance => {\n            callback({ prefixCls, instance });\n        });\n        return;\n    }\n    const closeIconToRender = (<span className={`${outerPrefixCls}-close-x`}>\n      {closeIcon || <CloseOutlined className={`${outerPrefixCls}-close-icon`}/>}\n    </span>);\n    notificationInstance[cacheKey] = new Promise(resolve => {\n        Notification.newInstance({\n            prefixCls: outerPrefixCls,\n            className: `${outerPrefixCls}-${placement}`,\n            style: getPlacementStyle(placement, top, bottom),\n            getContainer,\n            closeIcon: closeIconToRender,\n        }, notification => {\n            resolve(notification);\n            callback({\n                prefixCls,\n                instance: notification,\n            });\n        });\n    });\n}\nconst typeToIcon = {\n    success: CheckCircleOutlined,\n    info: InfoCircleOutlined,\n    error: CloseCircleOutlined,\n    warning: ExclamationCircleOutlined,\n};\nfunction getRCNoticeProps(args, prefixCls) {\n    const duration = args.duration === undefined ? defaultDuration : args.duration;\n    let iconNode = null;\n    if (args.icon) {\n        iconNode = <span className={`${prefixCls}-icon`}>{args.icon}</span>;\n    }\n    else if (args.type) {\n        iconNode = React.createElement(typeToIcon[args.type] || null, {\n            className: `${prefixCls}-icon ${prefixCls}-icon-${args.type}`,\n        });\n    }\n    const autoMarginTag = !args.description && iconNode ? (<span className={`${prefixCls}-message-single-line-auto-margin`}/>) : null;\n    return {\n        content: (<div className={iconNode ? `${prefixCls}-with-icon` : ''}>\n        {iconNode}\n        <div className={`${prefixCls}-message`}>\n          {autoMarginTag}\n          {args.message}\n        </div>\n        <div className={`${prefixCls}-description`}>{args.description}</div>\n        {args.btn ? <span className={`${prefixCls}-btn`}>{args.btn}</span> : null}\n      </div>),\n        duration,\n        closable: true,\n        onClose: args.onClose,\n        onClick: args.onClick,\n        key: args.key,\n        style: args.style || {},\n        className: args.className,\n    };\n}\nconst api = {\n    open: (args) => {\n        getNotificationInstance(args, ({ prefixCls, instance }) => {\n            instance.notice(getRCNoticeProps(args, prefixCls));\n        });\n    },\n    close(key) {\n        Object.keys(notificationInstance).forEach(cacheKey => Promise.resolve(notificationInstance[cacheKey]).then(instance => {\n            instance.removeNotice(key);\n        }));\n    },\n    config: setNotificationConfig,\n    destroy() {\n        Object.keys(notificationInstance).forEach(cacheKey => {\n            Promise.resolve(notificationInstance[cacheKey]).then(instance => {\n                instance.destroy();\n            });\n            delete notificationInstance[cacheKey]; // lgtm[js/missing-await]\n        });\n    },\n};\n['success', 'info', 'warning', 'error'].forEach(type => {\n    api[type] = (args) => api.open(Object.assign(Object.assign({}, args), { type }));\n});\napi.warn = api.warning;\napi.useNotification = createUseNotification(getNotificationInstance, getRCNoticeProps);\nexport default api;\n"],"file":"index.js"}