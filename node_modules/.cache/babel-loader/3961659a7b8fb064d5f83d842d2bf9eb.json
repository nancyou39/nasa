{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Button from '../button';\n\nvar ActionButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ActionButton, _React$Component);\n\n  function ActionButton(props) {\n    var _this;\n\n    _classCallCheck(this, ActionButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ActionButton).call(this, props));\n\n    _this.onClick = function () {\n      var _this$props = _this.props,\n          actionFn = _this$props.actionFn,\n          closeModal = _this$props.closeModal;\n\n      if (actionFn) {\n        var ret;\n\n        if (actionFn.length) {\n          ret = actionFn(closeModal);\n        } else {\n          ret = actionFn();\n\n          if (!ret) {\n            closeModal();\n          }\n        }\n\n        if (ret && ret.then) {\n          _this.setState({\n            loading: true\n          });\n\n          ret.then(function () {\n            // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n            // this.setState({ loading: false });\n            closeModal.apply(void 0, arguments);\n          }, function (e) {\n            // Emit error when catch promise reject\n            // eslint-disable-next-line no-console\n            console.error(e); // See: https://github.com/ant-design/ant-design/issues/6183\n\n            _this.setState({\n              loading: false\n            });\n          });\n        }\n      } else {\n        closeModal();\n      }\n    };\n\n    _this.state = {\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(ActionButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.autoFocus) {\n        var $this = ReactDOM.findDOMNode(this);\n        this.timeoutId = setTimeout(function () {\n          return $this.focus();\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeoutId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          type = _this$props2.type,\n          children = _this$props2.children,\n          buttonProps = _this$props2.buttonProps;\n      var loading = this.state.loading;\n      return React.createElement(Button, _extends({\n        type: type,\n        onClick: this.onClick,\n        loading: loading\n      }, buttonProps), children);\n    }\n  }]);\n\n  return ActionButton;\n}(React.Component);\n\nexport { ActionButton as default };","map":{"version":3,"sources":["modal/ActionButton.jsx"],"names":["ActionButton","React","Component","actionFn","closeModal","ret","loading","console","$this","ReactDOM","setTimeout","clearTimeout","type","children","buttonProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,QAAA,MAAA,WAAA;AACA,OAAA,MAAA,MAAA,WAAA;;IACqBA,Y;;;;;AACjB,WAAA,YAAA,CAAA,KAAA,EAAmB;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,CAAA;;AACf,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,YAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AACA,IAAA,KAAA,CAAA,OAAA,GAAe,YAAM;AAAA,UAAA,WAAA,GACgB,KAAA,CADhB,KAAA;AAAA,UACTG,QADS,GAAA,WAAA,CAAA,QAAA;AAAA,UACCC,UADD,GAAA,WAAA,CAAA,UAAA;;AAEjB,UAAA,QAAA,EAAc;AACV,YAAA,GAAA;;AACA,YAAID,QAAQ,CAAZ,MAAA,EAAqB;AACjBE,UAAAA,GAAG,GAAGF,QAAQ,CAAdE,UAAc,CAAdA;AADJ,SAAA,MAGK;AACDA,UAAAA,GAAG,GAAGF,QAANE,EAAAA;;AACA,cAAI,CAAJ,GAAA,EAAU;AACND,YAAAA,UAAU;AACb;AACJ;;AACD,YAAIC,GAAG,IAAIA,GAAG,CAAd,IAAA,EAAqB;AACjB,UAAA,KAAA,CAAA,QAAA,CAAc;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAd;;AACAD,UAAAA,GAAG,CAAHA,IAAAA,CAAS,YAAa;AAClB;AACA;AACAD,YAAAA,UAAU,CAAVA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,SAAAA;AAHJC,WAAAA,EAIG,UAAA,CAAA,EAAO;AACN;AACA;AACAE,YAAAA,OAAO,CAAPA,KAAAA,CAHM,CAGNA,EAHM,CAIN;;AACA,YAAA,KAAA,CAAA,QAAA,CAAc;AAAED,cAAAA,OAAO,EAAE;AAAX,aAAd;AATJD,WAAAA;AAWH;AAxBL,OAAA,MA0BK;AACDD,QAAAA,UAAU;AACb;AA9BL,KAAA;;AAgCA,IAAA,KAAA,CAAA,KAAA,GAAa;AACTE,MAAAA,OAAO,EAAE;AADA,KAAb;AAlCe,WAAA,KAAA;AAqClB;;;;wCACmB;AAChB,UAAI,KAAA,KAAA,CAAJ,SAAA,EAA0B;AACtB,YAAME,KAAK,GAAGC,QAAQ,CAARA,WAAAA,CAAd,IAAcA,CAAd;AACA,aAAA,SAAA,GAAiBC,UAAU,CAAC,YAAA;AAAA,iBAAMF,KAAK,CAAX,KAAMA,EAAN;AAA5B,SAA2B,CAA3B;AACH;AACJ;;;2CACsB;AACnBG,MAAAA,YAAY,CAAC,KAAbA,SAAY,CAAZA;AACH;;;6BACQ;AAAA,UAAA,YAAA,GACmC,KADnC,KAAA;AAAA,UACGC,IADH,GAAA,YAAA,CAAA,IAAA;AAAA,UACSC,QADT,GAAA,YAAA,CAAA,QAAA;AAAA,UACmBC,WADnB,GAAA,YAAA,CAAA,WAAA;AAAA,UAEGR,OAFH,GAEe,KAFf,KAEe,CAFf,OAAA;AAGL,aAAQ,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AAAQ,QAAA,IAAI,EAAZ,IAAA;AAAoB,QAAA,OAAO,EAAE,KAA7B,OAAA;AAA2C,QAAA,OAAO,EAAEA;AAApD,OAAA,EAAA,WAAA,CAAA,EAAR,QAAQ,CAAR;AAGH;;;;EAtDqCL,KAAK,CAACC,S;;SAA3BF,Y","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport Button from '../button';\nexport default class ActionButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onClick = () => {\n            const { actionFn, closeModal } = this.props;\n            if (actionFn) {\n                let ret;\n                if (actionFn.length) {\n                    ret = actionFn(closeModal);\n                }\n                else {\n                    ret = actionFn();\n                    if (!ret) {\n                        closeModal();\n                    }\n                }\n                if (ret && ret.then) {\n                    this.setState({ loading: true });\n                    ret.then((...args) => {\n                        // It's unnecessary to set loading=false, for the Modal will be unmounted after close.\n                        // this.setState({ loading: false });\n                        closeModal(...args);\n                    }, (e) => {\n                        // Emit error when catch promise reject\n                        // eslint-disable-next-line no-console\n                        console.error(e);\n                        // See: https://github.com/ant-design/ant-design/issues/6183\n                        this.setState({ loading: false });\n                    });\n                }\n            }\n            else {\n                closeModal();\n            }\n        };\n        this.state = {\n            loading: false,\n        };\n    }\n    componentDidMount() {\n        if (this.props.autoFocus) {\n            const $this = ReactDOM.findDOMNode(this);\n            this.timeoutId = setTimeout(() => $this.focus());\n        }\n    }\n    componentWillUnmount() {\n        clearTimeout(this.timeoutId);\n    }\n    render() {\n        const { type, children, buttonProps } = this.props;\n        const { loading } = this.state;\n        return (<Button type={type} onClick={this.onClick} loading={loading} {...buttonProps}>\n        {children}\n      </Button>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}