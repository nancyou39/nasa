{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport FieldForm, { List } from 'rc-field-form';\nimport { ConfigContext } from '../config-provider';\nimport { FormContext } from './context';\nimport { useForm } from './util';\nimport SizeContext, { SizeContextProvider } from '../config-provider/SizeContext';\n\nvar InternalForm = function InternalForm(props, ref) {\n  var _classNames;\n\n  var contextSize = React.useContext(SizeContext);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var form = props.form,\n      colon = props.colon,\n      name = props.name,\n      labelAlign = props.labelAlign,\n      labelCol = props.labelCol,\n      wrapperCol = props.wrapperCol,\n      customizePrefixCls = props.prefixCls,\n      hideRequiredMark = props.hideRequiredMark,\n      _props$className = props.className,\n      className = _props$className === void 0 ? '' : _props$className,\n      _props$layout = props.layout,\n      layout = _props$layout === void 0 ? 'horizontal' : _props$layout,\n      _props$size = props.size,\n      size = _props$size === void 0 ? contextSize : _props$size,\n      scrollToFirstError = props.scrollToFirstError,\n      onFinishFailed = props.onFinishFailed;\n  var prefixCls = getPrefixCls('form', customizePrefixCls);\n  var formClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(layout), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hide-required-mark\"), hideRequiredMark), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), size), _classNames), className);\n  var formProps = omit(props, ['prefixCls', 'className', 'layout', 'hideRequiredMark', 'wrapperCol', 'labelAlign', 'labelCol', 'colon', 'scrollToFirstError']);\n\n  var _useForm = useForm(form),\n      _useForm2 = _slicedToArray(_useForm, 1),\n      wrapForm = _useForm2[0];\n\n  wrapForm.__INTERNAL__.name = name;\n  var formContextValue = React.useMemo(function () {\n    return {\n      name: name,\n      labelAlign: labelAlign,\n      labelCol: labelCol,\n      wrapperCol: wrapperCol,\n      vertical: layout === 'vertical',\n      colon: colon\n    };\n  }, [name, labelAlign, labelCol, wrapperCol, layout, colon]);\n  React.useImperativeHandle(ref, function () {\n    return wrapForm;\n  });\n\n  var onInternalFinishFailed = function onInternalFinishFailed(errorInfo) {\n    if (onFinishFailed) {\n      onFinishFailed(errorInfo);\n    }\n\n    if (scrollToFirstError && errorInfo.errorFields.length) {\n      wrapForm.scrollToField(errorInfo.errorFields[0].name);\n    }\n  };\n\n  return React.createElement(SizeContextProvider, {\n    size: size\n  }, React.createElement(FormContext.Provider, {\n    value: formContextValue\n  }, React.createElement(FieldForm, _extends({\n    id: name\n  }, formProps, {\n    onFinishFailed: onInternalFinishFailed,\n    form: wrapForm,\n    className: formClassName\n  }))));\n};\n\nvar Form = React.forwardRef(InternalForm);\nexport { useForm, List };\nexport default Form;","map":{"version":3,"sources":["form/Form.jsx"],"names":["InternalForm","contextSize","React","getPrefixCls","direction","form","colon","name","labelAlign","labelCol","wrapperCol","customizePrefixCls","hideRequiredMark","className","layout","size","scrollToFirstError","onFinishFailed","props","prefixCls","formClassName","classNames","formProps","omit","wrapForm","useForm","formContextValue","vertical","onInternalFinishFailed","errorInfo","Form"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport FieldForm, { List } from 'rc-field-form';\nimport { ConfigContext } from '../config-provider';\nimport { FormContext } from './context';\nimport { useForm } from './util';\nimport SizeContext, { SizeContextProvider } from '../config-provider/SizeContext';\nconst InternalForm = (props, ref) => {\n    const contextSize = React.useContext(SizeContext);\n    const { getPrefixCls, direction } = React.useContext(ConfigContext);\n    const { form, colon, name, labelAlign, labelCol, wrapperCol, prefixCls: customizePrefixCls, hideRequiredMark, className = '', layout = 'horizontal', size = contextSize, scrollToFirstError, onFinishFailed, } = props;\n    const prefixCls = getPrefixCls('form', customizePrefixCls);\n    const formClassName = classNames(prefixCls, {\n        [`${prefixCls}-${layout}`]: true,\n        [`${prefixCls}-hide-required-mark`]: hideRequiredMark,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n        [`${prefixCls}-${size}`]: size,\n    }, className);\n    const formProps = omit(props, [\n        'prefixCls',\n        'className',\n        'layout',\n        'hideRequiredMark',\n        'wrapperCol',\n        'labelAlign',\n        'labelCol',\n        'colon',\n        'scrollToFirstError',\n    ]);\n    const [wrapForm] = useForm(form);\n    wrapForm.__INTERNAL__.name = name;\n    const formContextValue = React.useMemo(() => ({\n        name,\n        labelAlign,\n        labelCol,\n        wrapperCol,\n        vertical: layout === 'vertical',\n        colon,\n    }), [name, labelAlign, labelCol, wrapperCol, layout, colon]);\n    React.useImperativeHandle(ref, () => wrapForm);\n    const onInternalFinishFailed = (errorInfo) => {\n        if (onFinishFailed) {\n            onFinishFailed(errorInfo);\n        }\n        if (scrollToFirstError && errorInfo.errorFields.length) {\n            wrapForm.scrollToField(errorInfo.errorFields[0].name);\n        }\n    };\n    return (<SizeContextProvider size={size}>\n      <FormContext.Provider value={formContextValue}>\n        <FieldForm id={name} {...formProps} onFinishFailed={onInternalFinishFailed} form={wrapForm} className={formClassName}/>\n      </FormContext.Provider>\n    </SizeContextProvider>);\n};\nconst Form = React.forwardRef(InternalForm);\nexport { useForm, List };\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}