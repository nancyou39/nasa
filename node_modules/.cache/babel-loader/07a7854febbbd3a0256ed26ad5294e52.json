{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport Checkbox from '../checkbox';\nimport Search from './search';\nimport defaultRenderList, { OmitProps } from './renderListBody';\n\nvar defaultRender = function defaultRender() {\n  return null;\n};\n\nfunction isRenderResultPlainObject(result) {\n  return result && !React.isValidElement(result) && Object.prototype.toString.call(result) === '[object Object]';\n}\n\nfunction renderListNode(renderList, props) {\n  var bodyContent = renderList ? renderList(props) : null;\n  var customize = !!bodyContent;\n\n  if (!customize) {\n    bodyContent = defaultRenderList(props);\n  }\n\n  return {\n    customize: customize,\n    bodyContent: bodyContent\n  };\n}\n\nvar TransferList =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TransferList, _React$PureComponent);\n\n  function TransferList(props) {\n    var _this;\n\n    _classCallCheck(this, TransferList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransferList).call(this, props));\n\n    _this.handleFilter = function (e) {\n      var handleFilter = _this.props.handleFilter;\n      var filterValue = e.target.value;\n\n      _this.setState({\n        filterValue: filterValue\n      });\n\n      handleFilter(e);\n    };\n\n    _this.handleClear = function () {\n      var handleClear = _this.props.handleClear;\n\n      _this.setState({\n        filterValue: ''\n      });\n\n      handleClear();\n    };\n\n    _this.matchFilter = function (text, item) {\n      var filterValue = _this.state.filterValue;\n      var filterOption = _this.props.filterOption;\n\n      if (filterOption) {\n        return filterOption(filterValue, item);\n      }\n\n      return text.indexOf(filterValue) >= 0;\n    };\n\n    _this.renderItem = function (item) {\n      var _this$props$render = _this.props.render,\n          render = _this$props$render === void 0 ? defaultRender : _this$props$render;\n      var renderResult = render(item);\n      var isRenderResultPlain = isRenderResultPlainObject(renderResult);\n      return {\n        renderedText: isRenderResultPlain ? renderResult.value : renderResult,\n        renderedEl: isRenderResultPlain ? renderResult.label : renderResult,\n        item: item\n      };\n    };\n\n    _this.getSelectAllLabel = function (selectedCount, totalCount) {\n      var _this$props = _this.props,\n          itemsUnit = _this$props.itemsUnit,\n          itemUnit = _this$props.itemUnit,\n          selectAllLabel = _this$props.selectAllLabel;\n\n      if (selectAllLabel) {\n        return typeof selectAllLabel === 'function' ? selectAllLabel({\n          selectedCount: selectedCount,\n          totalCount: totalCount\n        }) : selectAllLabel;\n      }\n\n      var unit = totalCount > 1 ? itemsUnit : itemUnit;\n      return React.createElement(React.Fragment, null, (selectedCount > 0 ? \"\".concat(selectedCount, \"/\") : '') + totalCount, \" \", unit);\n    };\n\n    _this.state = {\n      filterValue: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransferList, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.triggerScrollTimer);\n    }\n  }, {\n    key: \"getCheckStatus\",\n    value: function getCheckStatus(filteredItems) {\n      var checkedKeys = this.props.checkedKeys;\n\n      if (checkedKeys.length === 0) {\n        return 'none';\n      }\n\n      if (filteredItems.every(function (item) {\n        return checkedKeys.indexOf(item.key) >= 0 || !!item.disabled;\n      })) {\n        return 'all';\n      }\n\n      return 'part';\n    }\n  }, {\n    key: \"getFilteredItems\",\n    value: function getFilteredItems(dataSource, filterValue) {\n      var _this2 = this;\n\n      var filteredItems = [];\n      var filteredRenderItems = [];\n      dataSource.forEach(function (item) {\n        var renderedItem = _this2.renderItem(item);\n\n        var renderedText = renderedItem.renderedText; // Filter skip\n\n        if (filterValue && filterValue.trim() && !_this2.matchFilter(renderedText, item)) {\n          return null;\n        }\n\n        filteredItems.push(item);\n        filteredRenderItems.push(renderedItem);\n      });\n      return {\n        filteredItems: filteredItems,\n        filteredRenderItems: filteredRenderItems\n      };\n    }\n  }, {\n    key: \"getListBody\",\n    value: function getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, filteredRenderItems, checkedKeys, renderList, showSearch, disabled) {\n      var search = showSearch ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-body-search-wrapper\")\n      }, React.createElement(Search, {\n        prefixCls: \"\".concat(prefixCls, \"-search\"),\n        onChange: this.handleFilter,\n        handleClear: this.handleClear,\n        placeholder: searchPlaceholder,\n        value: filterValue,\n        disabled: disabled\n      })) : null;\n\n      var _renderListNode = renderListNode(renderList, _extends(_extends({}, omit(this.props, OmitProps)), {\n        filteredItems: filteredItems,\n        filteredRenderItems: filteredRenderItems,\n        selectedKeys: checkedKeys\n      })),\n          bodyContent = _renderListNode.bodyContent,\n          customize = _renderListNode.customize;\n\n      var bodyNode; // We should wrap customize list body in a classNamed div to use flex layout.\n\n      if (customize) {\n        bodyNode = React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-body-customize-wrapper\")\n        }, bodyContent);\n      } else {\n        bodyNode = filteredItems.length ? bodyContent : React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-body-not-found\")\n        }, notFoundContent);\n      }\n\n      return React.createElement(\"div\", {\n        className: classNames(showSearch ? \"\".concat(prefixCls, \"-body \").concat(prefixCls, \"-body-with-search\") : \"\".concat(prefixCls, \"-body\"))\n      }, search, bodyNode);\n    }\n  }, {\n    key: \"getCheckBox\",\n    value: function getCheckBox(filteredItems, onItemSelectAll, showSelectAll, disabled) {\n      var checkStatus = this.getCheckStatus(filteredItems);\n      var checkedAll = checkStatus === 'all';\n      var checkAllCheckbox = showSelectAll !== false && React.createElement(Checkbox, {\n        disabled: disabled,\n        checked: checkedAll,\n        indeterminate: checkStatus === 'part',\n        onChange: function onChange() {\n          // Only select enabled items\n          onItemSelectAll(filteredItems.filter(function (item) {\n            return !item.disabled;\n          }).map(function (_ref) {\n            var key = _ref.key;\n            return key;\n          }), !checkedAll);\n        }\n      });\n      return checkAllCheckbox;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var filterValue = this.state.filterValue;\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          dataSource = _this$props2.dataSource,\n          titleText = _this$props2.titleText,\n          checkedKeys = _this$props2.checkedKeys,\n          disabled = _this$props2.disabled,\n          footer = _this$props2.footer,\n          showSearch = _this$props2.showSearch,\n          style = _this$props2.style,\n          searchPlaceholder = _this$props2.searchPlaceholder,\n          notFoundContent = _this$props2.notFoundContent,\n          renderList = _this$props2.renderList,\n          onItemSelectAll = _this$props2.onItemSelectAll,\n          showSelectAll = _this$props2.showSelectAll; // Custom Layout\n\n      var footerDom = footer && footer(this.props);\n      var listCls = classNames(prefixCls, _defineProperty({}, \"\".concat(prefixCls, \"-with-footer\"), !!footerDom)); // ====================== Get filtered, checked item list ======================\n\n      var _this$getFilteredItem = this.getFilteredItems(dataSource, filterValue),\n          filteredItems = _this$getFilteredItem.filteredItems,\n          filteredRenderItems = _this$getFilteredItem.filteredRenderItems; // ================================= List Body =================================\n\n\n      var listBody = this.getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, filteredRenderItems, checkedKeys, renderList, showSearch, disabled); // ================================ List Footer ================================\n\n      var listFooter = footerDom ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-footer\")\n      }, footerDom) : null;\n      var checkAllCheckbox = this.getCheckBox(filteredItems, onItemSelectAll, showSelectAll, disabled); // ================================== Render ===================================\n\n      return React.createElement(\"div\", {\n        className: listCls,\n        style: style\n      }, React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\")\n      }, checkAllCheckbox, React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-header-selected\")\n      }, React.createElement(\"span\", null, this.getSelectAllLabel(checkedKeys.length, filteredItems.length)), React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-header-title\")\n      }, titleText))), listBody, listFooter);\n    }\n  }]);\n\n  return TransferList;\n}(React.PureComponent);\n\nexport { TransferList as default };\nTransferList.defaultProps = {\n  dataSource: [],\n  titleText: '',\n  showSearch: false\n};","map":{"version":3,"sources":["transfer/list.jsx"],"names":["defaultRender","result","React","Object","bodyContent","renderList","customize","defaultRenderList","TransferList","PureComponent","handleFilter","filterValue","e","handleClear","filterOption","text","render","renderResult","isRenderResultPlain","isRenderResultPlainObject","renderedText","renderedEl","item","itemsUnit","itemUnit","selectAllLabel","selectedCount","totalCount","unit","clearTimeout","filteredItems","checkedKeys","dataSource","filteredRenderItems","renderedItem","prefixCls","searchPlaceholder","notFoundContent","showSearch","disabled","search","renderListNode","omit","selectedKeys","bodyNode","classNames","onItemSelectAll","showSelectAll","checkStatus","checkedAll","checkAllCheckbox","key","titleText","footer","style","footerDom","listCls","listBody","listFooter"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport Checkbox from '../checkbox';\nimport Search from './search';\nimport defaultRenderList, { OmitProps } from './renderListBody';\nconst defaultRender = () => null;\nfunction isRenderResultPlainObject(result) {\n    return (result &&\n        !React.isValidElement(result) &&\n        Object.prototype.toString.call(result) === '[object Object]');\n}\nfunction renderListNode(renderList, props) {\n    let bodyContent = renderList ? renderList(props) : null;\n    const customize = !!bodyContent;\n    if (!customize) {\n        bodyContent = defaultRenderList(props);\n    }\n    return {\n        customize,\n        bodyContent,\n    };\n}\nexport default class TransferList extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.handleFilter = (e) => {\n            const { handleFilter } = this.props;\n            const { target: { value: filterValue }, } = e;\n            this.setState({ filterValue });\n            handleFilter(e);\n        };\n        this.handleClear = () => {\n            const { handleClear } = this.props;\n            this.setState({ filterValue: '' });\n            handleClear();\n        };\n        this.matchFilter = (text, item) => {\n            const { filterValue } = this.state;\n            const { filterOption } = this.props;\n            if (filterOption) {\n                return filterOption(filterValue, item);\n            }\n            return text.indexOf(filterValue) >= 0;\n        };\n        this.renderItem = (item) => {\n            const { render = defaultRender } = this.props;\n            const renderResult = render(item);\n            const isRenderResultPlain = isRenderResultPlainObject(renderResult);\n            return {\n                renderedText: isRenderResultPlain\n                    ? renderResult.value\n                    : renderResult,\n                renderedEl: isRenderResultPlain ? renderResult.label : renderResult,\n                item,\n            };\n        };\n        this.getSelectAllLabel = (selectedCount, totalCount) => {\n            const { itemsUnit, itemUnit, selectAllLabel } = this.props;\n            if (selectAllLabel) {\n                return typeof selectAllLabel === 'function'\n                    ? selectAllLabel({ selectedCount, totalCount })\n                    : selectAllLabel;\n            }\n            const unit = totalCount > 1 ? itemsUnit : itemUnit;\n            return (<>\n        {(selectedCount > 0 ? `${selectedCount}/` : '') + totalCount} {unit}\n      </>);\n        };\n        this.state = {\n            filterValue: '',\n        };\n    }\n    componentWillUnmount() {\n        clearTimeout(this.triggerScrollTimer);\n    }\n    getCheckStatus(filteredItems) {\n        const { checkedKeys } = this.props;\n        if (checkedKeys.length === 0) {\n            return 'none';\n        }\n        if (filteredItems.every(item => checkedKeys.indexOf(item.key) >= 0 || !!item.disabled)) {\n            return 'all';\n        }\n        return 'part';\n    }\n    getFilteredItems(dataSource, filterValue) {\n        const filteredItems = [];\n        const filteredRenderItems = [];\n        dataSource.forEach(item => {\n            const renderedItem = this.renderItem(item);\n            const { renderedText } = renderedItem;\n            // Filter skip\n            if (filterValue && filterValue.trim() && !this.matchFilter(renderedText, item)) {\n                return null;\n            }\n            filteredItems.push(item);\n            filteredRenderItems.push(renderedItem);\n        });\n        return { filteredItems, filteredRenderItems };\n    }\n    getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, filteredRenderItems, checkedKeys, renderList, showSearch, disabled) {\n        const search = showSearch ? (<div className={`${prefixCls}-body-search-wrapper`}>\n        <Search prefixCls={`${prefixCls}-search`} onChange={this.handleFilter} handleClear={this.handleClear} placeholder={searchPlaceholder} value={filterValue} disabled={disabled}/>\n      </div>) : null;\n        const { bodyContent, customize } = renderListNode(renderList, Object.assign(Object.assign({}, omit(this.props, OmitProps)), { filteredItems,\n            filteredRenderItems, selectedKeys: checkedKeys }));\n        let bodyNode;\n        // We should wrap customize list body in a classNamed div to use flex layout.\n        if (customize) {\n            bodyNode = <div className={`${prefixCls}-body-customize-wrapper`}>{bodyContent}</div>;\n        }\n        else {\n            bodyNode = filteredItems.length ? (bodyContent) : (<div className={`${prefixCls}-body-not-found`}>{notFoundContent}</div>);\n        }\n        return (<div className={classNames(showSearch ? `${prefixCls}-body ${prefixCls}-body-with-search` : `${prefixCls}-body`)}>\n        {search}\n        {bodyNode}\n      </div>);\n    }\n    getCheckBox(filteredItems, onItemSelectAll, showSelectAll, disabled) {\n        const checkStatus = this.getCheckStatus(filteredItems);\n        const checkedAll = checkStatus === 'all';\n        const checkAllCheckbox = showSelectAll !== false && (<Checkbox disabled={disabled} checked={checkedAll} indeterminate={checkStatus === 'part'} onChange={() => {\n            // Only select enabled items\n            onItemSelectAll(filteredItems.filter(item => !item.disabled).map(({ key }) => key), !checkedAll);\n        }}/>);\n        return checkAllCheckbox;\n    }\n    render() {\n        const { filterValue } = this.state;\n        const { prefixCls, dataSource, titleText, checkedKeys, disabled, footer, showSearch, style, searchPlaceholder, notFoundContent, renderList, onItemSelectAll, showSelectAll, } = this.props;\n        // Custom Layout\n        const footerDom = footer && footer(this.props);\n        const listCls = classNames(prefixCls, {\n            [`${prefixCls}-with-footer`]: !!footerDom,\n        });\n        // ====================== Get filtered, checked item list ======================\n        const { filteredItems, filteredRenderItems } = this.getFilteredItems(dataSource, filterValue);\n        // ================================= List Body =================================\n        const listBody = this.getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, filteredRenderItems, checkedKeys, renderList, showSearch, disabled);\n        // ================================ List Footer ================================\n        const listFooter = footerDom ? <div className={`${prefixCls}-footer`}>{footerDom}</div> : null;\n        const checkAllCheckbox = this.getCheckBox(filteredItems, onItemSelectAll, showSelectAll, disabled);\n        // ================================== Render ===================================\n        return (<div className={listCls} style={style}>\n        \n        <div className={`${prefixCls}-header`}>\n          {checkAllCheckbox}\n          <span className={`${prefixCls}-header-selected`}>\n            <span>{this.getSelectAllLabel(checkedKeys.length, filteredItems.length)}</span>\n            <span className={`${prefixCls}-header-title`}>{titleText}</span>\n          </span>\n        </div>\n\n        \n        {listBody}\n\n        \n        {listFooter}\n      </div>);\n    }\n}\nTransferList.defaultProps = {\n    dataSource: [],\n    titleText: '',\n    showSearch: false,\n};\n"]},"metadata":{},"sourceType":"module"}