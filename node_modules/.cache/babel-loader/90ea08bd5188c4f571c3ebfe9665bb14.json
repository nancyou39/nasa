{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nexport function T() {\n  return true;\n} // Fix IE file.status problem\n// via coping a new Object\n\nexport function fileToObject(file) {\n  return _extends(_extends({}, file), {\n    lastModified: file.lastModified,\n    lastModifiedDate: file.lastModifiedDate,\n    name: file.name,\n    size: file.size,\n    type: file.type,\n    uid: file.uid,\n    percent: 0,\n    originFileObj: file\n  });\n}\nexport function getFileItem(file, fileList) {\n  var matchKey = file.uid !== undefined ? 'uid' : 'name';\n  return fileList.filter(function (item) {\n    return item[matchKey] === file[matchKey];\n  })[0];\n}\nexport function removeFileItem(file, fileList) {\n  var matchKey = file.uid !== undefined ? 'uid' : 'name';\n  var removed = fileList.filter(function (item) {\n    return item[matchKey] !== file[matchKey];\n  });\n\n  if (removed.length === fileList.length) {\n    return null;\n  }\n\n  return removed;\n} // ==================== Default Image Preview ====================\n\nvar extname = function extname() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var temp = url.split('/');\n  var filename = temp[temp.length - 1];\n  var filenameWithoutSuffix = filename.split(/#|\\?/)[0];\n  return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [''])[0];\n};\n\nvar isImageFileType = function isImageFileType(type) {\n  return type.indexOf('image/') === 0;\n};\n\nexport var isImageUrl = function isImageUrl(file) {\n  if (file.type) {\n    return isImageFileType(file.type);\n  }\n\n  var url = file.thumbUrl || file.url;\n  var extension = extname(url);\n\n  if (/^data:image\\//.test(url) || /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico)$/i.test(extension)) {\n    return true;\n  }\n\n  if (/^data:/.test(url)) {\n    // other file types of base64\n    return false;\n  }\n\n  if (extension) {\n    // other file types which have extension\n    return false;\n  }\n\n  return true;\n};\nvar MEASURE_SIZE = 200;\nexport function previewImage(file) {\n  return new Promise(function (resolve) {\n    if (!file.type || !isImageFileType(file.type)) {\n      resolve('');\n      return;\n    }\n\n    var canvas = document.createElement('canvas');\n    canvas.width = MEASURE_SIZE;\n    canvas.height = MEASURE_SIZE;\n    canvas.style.cssText = \"position: fixed; left: 0; top: 0; width: \".concat(MEASURE_SIZE, \"px; height: \").concat(MEASURE_SIZE, \"px; z-index: 9999; display: none;\");\n    document.body.appendChild(canvas);\n    var ctx = canvas.getContext('2d');\n    var img = new Image();\n\n    img.onload = function () {\n      var width = img.width,\n          height = img.height;\n      var drawWidth = MEASURE_SIZE;\n      var drawHeight = MEASURE_SIZE;\n      var offsetX = 0;\n      var offsetY = 0;\n\n      if (width < height) {\n        drawHeight = height * (MEASURE_SIZE / width);\n        offsetY = -(drawHeight - drawWidth) / 2;\n      } else {\n        drawWidth = width * (MEASURE_SIZE / height);\n        offsetX = -(drawWidth - drawHeight) / 2;\n      }\n\n      ctx.drawImage(img, offsetX, offsetY, drawWidth, drawHeight);\n      var dataURL = canvas.toDataURL();\n      document.body.removeChild(canvas);\n      resolve(dataURL);\n    };\n\n    img.src = window.URL.createObjectURL(file);\n  });\n}","map":{"version":3,"sources":["upload/utils.jsx"],"names":["lastModified","file","lastModifiedDate","name","size","type","uid","percent","originFileObj","matchKey","item","removed","fileList","extname","url","temp","filename","filenameWithoutSuffix","isImageFileType","isImageUrl","extension","MEASURE_SIZE","resolve","canvas","document","ctx","img","width","height","drawWidth","drawHeight","offsetX","offsetY","dataURL","window"],"mappings":"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","sourcesContent":["export function T() {\n    return true;\n}\n// Fix IE file.status problem\n// via coping a new Object\nexport function fileToObject(file) {\n    return Object.assign(Object.assign({}, file), { lastModified: file.lastModified, lastModifiedDate: file.lastModifiedDate, name: file.name, size: file.size, type: file.type, uid: file.uid, percent: 0, originFileObj: file });\n}\nexport function getFileItem(file, fileList) {\n    const matchKey = file.uid !== undefined ? 'uid' : 'name';\n    return fileList.filter(item => item[matchKey] === file[matchKey])[0];\n}\nexport function removeFileItem(file, fileList) {\n    const matchKey = file.uid !== undefined ? 'uid' : 'name';\n    const removed = fileList.filter(item => item[matchKey] !== file[matchKey]);\n    if (removed.length === fileList.length) {\n        return null;\n    }\n    return removed;\n}\n// ==================== Default Image Preview ====================\nconst extname = (url = '') => {\n    const temp = url.split('/');\n    const filename = temp[temp.length - 1];\n    const filenameWithoutSuffix = filename.split(/#|\\?/)[0];\n    return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [''])[0];\n};\nconst isImageFileType = (type) => type.indexOf('image/') === 0;\nexport const isImageUrl = (file) => {\n    if (file.type) {\n        return isImageFileType(file.type);\n    }\n    const url = (file.thumbUrl || file.url);\n    const extension = extname(url);\n    if (/^data:image\\//.test(url) ||\n        /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico)$/i.test(extension)) {\n        return true;\n    }\n    if (/^data:/.test(url)) {\n        // other file types of base64\n        return false;\n    }\n    if (extension) {\n        // other file types which have extension\n        return false;\n    }\n    return true;\n};\nconst MEASURE_SIZE = 200;\nexport function previewImage(file) {\n    return new Promise(resolve => {\n        if (!file.type || !isImageFileType(file.type)) {\n            resolve('');\n            return;\n        }\n        const canvas = document.createElement('canvas');\n        canvas.width = MEASURE_SIZE;\n        canvas.height = MEASURE_SIZE;\n        canvas.style.cssText = `position: fixed; left: 0; top: 0; width: ${MEASURE_SIZE}px; height: ${MEASURE_SIZE}px; z-index: 9999; display: none;`;\n        document.body.appendChild(canvas);\n        const ctx = canvas.getContext('2d');\n        const img = new Image();\n        img.onload = () => {\n            const { width, height } = img;\n            let drawWidth = MEASURE_SIZE;\n            let drawHeight = MEASURE_SIZE;\n            let offsetX = 0;\n            let offsetY = 0;\n            if (width < height) {\n                drawHeight = height * (MEASURE_SIZE / width);\n                offsetY = -(drawHeight - drawWidth) / 2;\n            }\n            else {\n                drawWidth = width * (MEASURE_SIZE / height);\n                offsetX = -(drawWidth - drawHeight) / 2;\n            }\n            ctx.drawImage(img, offsetX, offsetY, drawWidth, drawHeight);\n            const dataURL = canvas.toDataURL();\n            document.body.removeChild(canvas);\n            resolve(dataURL);\n        };\n        img.src = window.URL.createObjectURL(file);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}