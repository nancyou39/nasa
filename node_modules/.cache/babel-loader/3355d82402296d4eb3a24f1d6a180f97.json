{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport classnames from 'classnames';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport WarningFilled from '@ant-design/icons/WarningFilled';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport noFound from './noFound';\nimport serverError from './serverError';\nimport unauthorized from './unauthorized';\nexport var IconMap = {\n  success: CheckCircleFilled,\n  error: CloseCircleFilled,\n  info: ExclamationCircleFilled,\n  warning: WarningFilled\n};\nexport var ExceptionMap = {\n  '404': noFound,\n  '500': serverError,\n  '403': unauthorized\n}; // ExceptionImageMap keys\n\nvar ExceptionStatus = Object.keys(ExceptionMap);\n/**\n * render icon\n * if ExceptionStatus includes ,render svg image\n * else render iconNode\n * @param prefixCls\n * @param {status, icon}\n */\n\nvar renderIcon = function renderIcon(prefixCls, _ref) {\n  var status = _ref.status,\n      icon = _ref.icon;\n  var className = classnames(\"\".concat(prefixCls, \"-icon\"));\n  warning(!(typeof icon === 'string' && icon.length > 2), 'Result', \"`icon` is using ReactNode instead of string naming in v4. Please check `\".concat(icon, \"` at https://ant.design/components/icon\"));\n\n  if (ExceptionStatus.includes(\"\".concat(status))) {\n    var SVGComponent = ExceptionMap[status];\n    return React.createElement(\"div\", {\n      className: \"\".concat(className, \" \").concat(prefixCls, \"-image\")\n    }, React.createElement(SVGComponent, null));\n  }\n\n  var iconNode = React.createElement(IconMap[status]);\n  return React.createElement(\"div\", {\n    className: className\n  }, icon || iconNode);\n};\n\nvar renderExtra = function renderExtra(prefixCls, _ref2) {\n  var extra = _ref2.extra;\n  return extra && React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-extra\")\n  }, extra);\n};\n\nvar Result = function Result(props) {\n  return React.createElement(ConfigConsumer, null, function (_ref3) {\n    var getPrefixCls = _ref3.getPrefixCls,\n        direction = _ref3.direction;\n    var customizePrefixCls = props.prefixCls,\n        customizeClassName = props.className,\n        subTitle = props.subTitle,\n        title = props.title,\n        style = props.style,\n        children = props.children,\n        status = props.status;\n    var prefixCls = getPrefixCls('result', customizePrefixCls);\n    var className = classnames(prefixCls, \"\".concat(prefixCls, \"-\").concat(status), customizeClassName, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n    return React.createElement(\"div\", {\n      className: className,\n      style: style\n    }, renderIcon(prefixCls, props), React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-title\")\n    }, title), subTitle && React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-subtitle\")\n    }, subTitle), children && React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, children), renderExtra(prefixCls, props));\n  });\n};\n\nResult.defaultProps = {\n  status: 'info'\n};\nResult.PRESENTED_IMAGE_403 = ExceptionMap[403];\nResult.PRESENTED_IMAGE_404 = ExceptionMap[404];\nResult.PRESENTED_IMAGE_500 = ExceptionMap[500];\nexport default Result;","map":{"version":3,"sources":["result/index.jsx"],"names":["IconMap","success","error","info","warning","WarningFilled","ExceptionMap","unauthorized","ExceptionStatus","Object","renderIcon","status","icon","className","classnames","SVGComponent","iconNode","React","renderExtra","extra","Result","getPrefixCls","direction","customizePrefixCls","customizeClassName","subTitle","title","style","children","props","prefixCls"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classnames from 'classnames';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport WarningFilled from '@ant-design/icons/WarningFilled';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport noFound from './noFound';\nimport serverError from './serverError';\nimport unauthorized from './unauthorized';\nexport const IconMap = {\n    success: CheckCircleFilled,\n    error: CloseCircleFilled,\n    info: ExclamationCircleFilled,\n    warning: WarningFilled,\n};\nexport const ExceptionMap = {\n    '404': noFound,\n    '500': serverError,\n    '403': unauthorized,\n};\n// ExceptionImageMap keys\nconst ExceptionStatus = Object.keys(ExceptionMap);\n/**\n * render icon\n * if ExceptionStatus includes ,render svg image\n * else render iconNode\n * @param prefixCls\n * @param {status, icon}\n */\nconst renderIcon = (prefixCls, { status, icon }) => {\n    const className = classnames(`${prefixCls}-icon`);\n    warning(!(typeof icon === 'string' && icon.length > 2), 'Result', `\\`icon\\` is using ReactNode instead of string naming in v4. Please check \\`${icon}\\` at https://ant.design/components/icon`);\n    if (ExceptionStatus.includes(`${status}`)) {\n        const SVGComponent = ExceptionMap[status];\n        return (<div className={`${className} ${prefixCls}-image`}>\n        <SVGComponent />\n      </div>);\n    }\n    const iconNode = React.createElement(IconMap[status]);\n    return <div className={className}>{icon || iconNode}</div>;\n};\nconst renderExtra = (prefixCls, { extra }) => extra && <div className={`${prefixCls}-extra`}>{extra}</div>;\nconst Result = props => (<ConfigConsumer>\n    {({ getPrefixCls, direction }) => {\n    const { prefixCls: customizePrefixCls, className: customizeClassName, subTitle, title, style, children, status, } = props;\n    const prefixCls = getPrefixCls('result', customizePrefixCls);\n    const className = classnames(prefixCls, `${prefixCls}-${status}`, customizeClassName, {\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n    });\n    return (<div className={className} style={style}>\n          {renderIcon(prefixCls, props)}\n          <div className={`${prefixCls}-title`}>{title}</div>\n          {subTitle && <div className={`${prefixCls}-subtitle`}>{subTitle}</div>}\n          {children && <div className={`${prefixCls}-content`}>{children}</div>}\n          {renderExtra(prefixCls, props)}\n        </div>);\n}}\n  </ConfigConsumer>);\nResult.defaultProps = {\n    status: 'info',\n};\nResult.PRESENTED_IMAGE_403 = ExceptionMap[403];\nResult.PRESENTED_IMAGE_404 = ExceptionMap[404];\nResult.PRESENTED_IMAGE_500 = ExceptionMap[500];\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}