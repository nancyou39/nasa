{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { flattenTreeData } from \"rc-tree/es/utils/treeUtil\";\nimport { fillLegacyProps } from './legacyUtil';\nexport function toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return value !== undefined ? [value] : [];\n}\nexport function findValueOption(values, options) {\n  var optionMap = new Map();\n  options.forEach(function (flattenItem) {\n    var data = flattenItem.data;\n    optionMap.set(data.value, data);\n  });\n  return values.map(function (val) {\n    return fillLegacyProps(optionMap.get(val));\n  });\n}\nexport function isValueDisabled(value, options) {\n  var option = findValueOption([value], options)[0];\n\n  if (option) {\n    return option.disabled;\n  }\n\n  return false;\n}\nexport function isCheckDisabled(node) {\n  return node.disabled || node.disableCheckbox || node.checkable === false;\n}\n\nfunction getLevel(_ref) {\n  var parent = _ref.parent;\n  var level = 0;\n  var current = parent;\n\n  while (current) {\n    current = current.parent;\n    level += 1;\n  }\n\n  return level;\n}\n/**\n * Before reuse `rc-tree` logic, we need to add key since TreeSelect use `value` instead of `key`.\n */\n\n\nexport function flattenOptions(options) {\n  // Add missing key\n  function fillKey(list) {\n    return (list || []).map(function (node) {\n      var value = node.value,\n          key = node.key,\n          children = node.children;\n\n      var clone = _objectSpread({}, node, {\n        key: 'key' in node ? key : value\n      });\n\n      if (children) {\n        clone.children = fillKey(children);\n      }\n\n      return clone;\n    });\n  }\n\n  var flattenList = flattenTreeData(fillKey(options), true);\n  return flattenList.map(function (node) {\n    return {\n      key: node.data.key,\n      data: node.data,\n      level: getLevel(node)\n    };\n  });\n}\n\nfunction getDefaultFilterOption(optionFilterProp) {\n  return function (searchValue, dataNode) {\n    var value = dataNode[optionFilterProp];\n    return String(value).toLowerCase().includes(String(searchValue).toLowerCase());\n  };\n}\n/** Filter options and return a new options by the search text */\n\n\nexport function filterOptions(searchValue, options, _ref2) {\n  var optionFilterProp = _ref2.optionFilterProp,\n      filterOption = _ref2.filterOption;\n\n  if (filterOption === false) {\n    return options;\n  }\n\n  var filterOptionFunc;\n\n  if (typeof filterOption === 'function') {\n    filterOptionFunc = filterOption;\n  } else {\n    filterOptionFunc = getDefaultFilterOption(optionFilterProp);\n  }\n\n  function dig(list) {\n    var keepAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return list.map(function (dataNode) {\n      var children = dataNode.children;\n      var match = keepAll || filterOptionFunc(searchValue, fillLegacyProps(dataNode));\n      var childList = dig(children || [], match);\n\n      if (match || childList.length) {\n        return _objectSpread({}, dataNode, {\n          children: childList\n        });\n      }\n\n      return null;\n    }).filter(function (node) {\n      return node;\n    });\n  }\n\n  return dig(options);\n}\nexport function getRawValueLabeled(values, prevValue, getEntityByValue, getLabelProp) {\n  var valueMap = new Map();\n  toArray(prevValue).forEach(function (item) {\n    if (item && _typeof(item) === 'object' && 'value' in item) {\n      valueMap.set(item.value, item);\n    }\n  });\n  return values.map(function (val) {\n    var item = {\n      value: val\n    };\n    var entity = getEntityByValue(val);\n    var label = entity ? getLabelProp(entity.data) : val;\n\n    if (valueMap.has(val)) {\n      var labeledValue = valueMap.get(val);\n      item.label = 'label' in labeledValue ? labeledValue.label : label;\n\n      if ('halfChecked' in labeledValue) {\n        item.halfChecked = labeledValue.halfChecked;\n      }\n    } else {\n      item.label = label;\n    }\n\n    return item;\n  });\n}\nexport function addValue(rawValues, value) {\n  var values = new Set(rawValues);\n  values.add(value);\n  return Array.from(values);\n}\nexport function removeValue(rawValues, value) {\n  var values = new Set(rawValues);\n  values.delete(value);\n  return Array.from(values);\n}","map":{"version":3,"sources":["/Users/nancyou/Desktop/nasa/node_modules/rc-tree-select/es/utils/valueUtil.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","value","configurable","writable","flattenTreeData","fillLegacyProps","toArray","Array","isArray","undefined","findValueOption","values","options","optionMap","Map","flattenItem","data","set","map","val","get","isValueDisabled","option","disabled","isCheckDisabled","node","disableCheckbox","checkable","getLevel","_ref","parent","level","current","flattenOptions","fillKey","list","children","clone","flattenList","getDefaultFilterOption","optionFilterProp","searchValue","dataNode","String","toLowerCase","includes","filterOptions","_ref2","filterOption","filterOptionFunc","dig","keepAll","match","childList","getRawValueLabeled","prevValue","getEntityByValue","getLabelProp","valueMap","item","entity","label","has","labeledValue","halfChecked","addValue","rawValues","Set","add","from","removeValue","delete"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { flattenTreeData } from \"rc-tree/es/utils/treeUtil\";\nimport { fillLegacyProps } from './legacyUtil';\nexport function toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return value !== undefined ? [value] : [];\n}\nexport function findValueOption(values, options) {\n  var optionMap = new Map();\n  options.forEach(function (flattenItem) {\n    var data = flattenItem.data;\n    optionMap.set(data.value, data);\n  });\n  return values.map(function (val) {\n    return fillLegacyProps(optionMap.get(val));\n  });\n}\nexport function isValueDisabled(value, options) {\n  var option = findValueOption([value], options)[0];\n\n  if (option) {\n    return option.disabled;\n  }\n\n  return false;\n}\nexport function isCheckDisabled(node) {\n  return node.disabled || node.disableCheckbox || node.checkable === false;\n}\n\nfunction getLevel(_ref) {\n  var parent = _ref.parent;\n  var level = 0;\n  var current = parent;\n\n  while (current) {\n    current = current.parent;\n    level += 1;\n  }\n\n  return level;\n}\n/**\n * Before reuse `rc-tree` logic, we need to add key since TreeSelect use `value` instead of `key`.\n */\n\n\nexport function flattenOptions(options) {\n  // Add missing key\n  function fillKey(list) {\n    return (list || []).map(function (node) {\n      var value = node.value,\n          key = node.key,\n          children = node.children;\n\n      var clone = _objectSpread({}, node, {\n        key: 'key' in node ? key : value\n      });\n\n      if (children) {\n        clone.children = fillKey(children);\n      }\n\n      return clone;\n    });\n  }\n\n  var flattenList = flattenTreeData(fillKey(options), true);\n  return flattenList.map(function (node) {\n    return {\n      key: node.data.key,\n      data: node.data,\n      level: getLevel(node)\n    };\n  });\n}\n\nfunction getDefaultFilterOption(optionFilterProp) {\n  return function (searchValue, dataNode) {\n    var value = dataNode[optionFilterProp];\n    return String(value).toLowerCase().includes(String(searchValue).toLowerCase());\n  };\n}\n/** Filter options and return a new options by the search text */\n\n\nexport function filterOptions(searchValue, options, _ref2) {\n  var optionFilterProp = _ref2.optionFilterProp,\n      filterOption = _ref2.filterOption;\n\n  if (filterOption === false) {\n    return options;\n  }\n\n  var filterOptionFunc;\n\n  if (typeof filterOption === 'function') {\n    filterOptionFunc = filterOption;\n  } else {\n    filterOptionFunc = getDefaultFilterOption(optionFilterProp);\n  }\n\n  function dig(list) {\n    var keepAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return list.map(function (dataNode) {\n      var children = dataNode.children;\n      var match = keepAll || filterOptionFunc(searchValue, fillLegacyProps(dataNode));\n      var childList = dig(children || [], match);\n\n      if (match || childList.length) {\n        return _objectSpread({}, dataNode, {\n          children: childList\n        });\n      }\n\n      return null;\n    }).filter(function (node) {\n      return node;\n    });\n  }\n\n  return dig(options);\n}\nexport function getRawValueLabeled(values, prevValue, getEntityByValue, getLabelProp) {\n  var valueMap = new Map();\n  toArray(prevValue).forEach(function (item) {\n    if (item && _typeof(item) === 'object' && 'value' in item) {\n      valueMap.set(item.value, item);\n    }\n  });\n  return values.map(function (val) {\n    var item = {\n      value: val\n    };\n    var entity = getEntityByValue(val);\n    var label = entity ? getLabelProp(entity.data) : val;\n\n    if (valueMap.has(val)) {\n      var labeledValue = valueMap.get(val);\n      item.label = 'label' in labeledValue ? labeledValue.label : label;\n\n      if ('halfChecked' in labeledValue) {\n        item.halfChecked = labeledValue.halfChecked;\n      }\n    } else {\n      item.label = label;\n    }\n\n    return item;\n  });\n}\nexport function addValue(rawValues, value) {\n  var values = new Set(rawValues);\n  values.add(value);\n  return Array.from(values);\n}\nexport function removeValue(rawValues, value) {\n  var values = new Set(rawValues);\n  values.delete(value);\n  return Array.from(values);\n}"]},"metadata":{},"sourceType":"module"}