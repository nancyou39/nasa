{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { renderColumnTitle } from '../util';\n\nfunction fillTitle(columns, columnTitleProps) {\n  return columns.map(function (column) {\n    var cloneColumn = _extends({}, column);\n\n    cloneColumn.title = renderColumnTitle(column.title, columnTitleProps);\n\n    if ('children' in cloneColumn) {\n      cloneColumn.children = fillTitle(cloneColumn.children, columnTitleProps);\n    }\n\n    return cloneColumn;\n  });\n}\n\nexport default function useTitleColumns(columnTitleProps) {\n  var filledColumns = React.useCallback(function (columns) {\n    return fillTitle(columns, columnTitleProps);\n  }, [columnTitleProps]);\n  return [filledColumns];\n}","map":{"version":3,"sources":["table/hooks/useTitleColumns.jsx"],"names":["cloneColumn","renderColumnTitle","column","fillTitle","filledColumns"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,iBAAA,QAAA,SAAA;;AACA,SAAA,SAAA,CAAA,OAAA,EAAA,gBAAA,EAA8C;AAC1C,SAAO,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAU;AACzB,QAAMA,WAAW,GAAG,QAAA,CAAA,EAAA,EAApB,MAAoB,CAApB;;AACAA,IAAAA,WAAW,CAAXA,KAAAA,GAAoBC,iBAAiB,CAACC,MAAM,CAAP,KAAA,EAArCF,gBAAqC,CAArCA;;AACA,QAAI,cAAJ,WAAA,EAA+B;AAC3BA,MAAAA,WAAW,CAAXA,QAAAA,GAAuBG,SAAS,CAACH,WAAW,CAAZ,QAAA,EAAhCA,gBAAgC,CAAhCA;AACH;;AACD,WAAA,WAAA;AANJ,GAAO,CAAP;AAQH;;AACD,eAAe,SAAA,eAAA,CAAA,gBAAA,EAA2C;AACtD,MAAMI,aAAa,GAAG,KAAK,CAAL,WAAA,CAAkB,UAAA,OAAA,EAAA;AAAA,WAAaD,SAAS,CAAA,OAAA,EAAtB,gBAAsB,CAAtB;AAAlB,GAAA,EAAqE,CAA3F,gBAA2F,CAArE,CAAtB;AACA,SAAO,CAAP,aAAO,CAAP;AACH","sourcesContent":["import * as React from 'react';\nimport { renderColumnTitle } from '../util';\nfunction fillTitle(columns, columnTitleProps) {\n    return columns.map(column => {\n        const cloneColumn = Object.assign({}, column);\n        cloneColumn.title = renderColumnTitle(column.title, columnTitleProps);\n        if ('children' in cloneColumn) {\n            cloneColumn.children = fillTitle(cloneColumn.children, columnTitleProps);\n        }\n        return cloneColumn;\n    });\n}\nexport default function useTitleColumns(columnTitleProps) {\n    const filledColumns = React.useCallback((columns) => fillTitle(columns, columnTitleProps), [columnTitleProps]);\n    return [filledColumns];\n}\n"]},"metadata":{},"sourceType":"module"}