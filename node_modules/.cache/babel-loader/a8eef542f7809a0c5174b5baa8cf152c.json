{"ast":null,"code":"import * as React from 'react';\nexport default function useLazyKVMap(data, childrenColumnName, getRowKey) {\n  var mapCacheRef = React.useRef({});\n\n  function getRecordByKey(key) {\n    if (!mapCacheRef.current || mapCacheRef.current.data !== data || mapCacheRef.current.childrenColumnName !== childrenColumnName || mapCacheRef.current.getRowKey !== getRowKey) {\n      /* eslint-disable no-inner-declarations */\n      var dig = function dig(records) {\n        records.forEach(function (record, index) {\n          var rowKey = getRowKey(record, index);\n          kvMap.set(rowKey, record);\n\n          if (childrenColumnName in record) {\n            dig(record[childrenColumnName] || []);\n          }\n        });\n      };\n      /* eslint-enable */\n\n\n      var kvMap = new Map();\n      dig(data);\n      mapCacheRef.current = {\n        data: data,\n        childrenColumnName: childrenColumnName,\n        kvMap: kvMap,\n        getRowKey: getRowKey\n      };\n    }\n\n    return mapCacheRef.current.kvMap.get(key);\n  }\n\n  return [getRecordByKey];\n}","map":{"version":3,"sources":["table/hooks/useLazyKVMap.js"],"names":["mapCacheRef","React","kvMap","dig","records","rowKey","getRowKey","childrenColumnName","record","data"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,eAAe,SAAA,YAAA,CAAA,IAAA,EAAA,kBAAA,EAAA,SAAA,EAA2D;AACtE,MAAMA,WAAW,GAAGC,KAAK,CAALA,MAAAA,CAApB,EAAoBA,CAApB;;AACA,WAAA,cAAA,CAAA,GAAA,EAA6B;AACzB,QAAI,CAACD,WAAW,CAAZ,OAAA,IACAA,WAAW,CAAXA,OAAAA,CAAAA,IAAAA,KADA,IAAA,IAEAA,WAAW,CAAXA,OAAAA,CAAAA,kBAAAA,KAFA,kBAAA,IAGAA,WAAW,CAAXA,OAAAA,CAAAA,SAAAA,KAHJ,SAAA,EAGiD;AAE7C;AAF6C,UAGpCG,GAHoC,GAG7C,SAAA,GAAA,CAAA,OAAA,EAAsB;AAClBC,QAAAA,OAAO,CAAPA,OAAAA,CAAgB,UAAA,MAAA,EAAA,KAAA,EAAmB;AAC/B,cAAMC,MAAM,GAAGC,SAAS,CAAA,MAAA,EAAxB,KAAwB,CAAxB;AACAJ,UAAAA,KAAK,CAALA,GAAAA,CAAAA,MAAAA,EAAAA,MAAAA;;AACA,cAAIK,kBAAkB,IAAtB,MAAA,EAAkC;AAC9BJ,YAAAA,GAAG,CAACK,MAAM,CAANA,kBAAM,CAANA,IAAJL,EAAG,CAAHA;AACH;AALLC,SAAAA;AAJyC,OAAA;AAY7C;;;AAXA,UAAMF,KAAK,GAAG,IAAd,GAAc,EAAd;AAYAC,MAAAA,GAAG,CAAHA,IAAG,CAAHA;AACAH,MAAAA,WAAW,CAAXA,OAAAA,GAAsB;AAClBS,QAAAA,IAAI,EADc,IAAA;AAElBF,QAAAA,kBAAkB,EAFA,kBAAA;AAGlBL,QAAAA,KAAK,EAHa,KAAA;AAIlBI,QAAAA,SAAS,EAATA;AAJkB,OAAtBN;AAMH;;AACD,WAAOA,WAAW,CAAXA,OAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAAP,GAAOA,CAAP;AACH;;AACD,SAAO,CAAP,cAAO,CAAP;AACH","sourcesContent":["import * as React from 'react';\nexport default function useLazyKVMap(data, childrenColumnName, getRowKey) {\n    const mapCacheRef = React.useRef({});\n    function getRecordByKey(key) {\n        if (!mapCacheRef.current ||\n            mapCacheRef.current.data !== data ||\n            mapCacheRef.current.childrenColumnName !== childrenColumnName ||\n            mapCacheRef.current.getRowKey !== getRowKey) {\n            const kvMap = new Map();\n            /* eslint-disable no-inner-declarations */\n            function dig(records) {\n                records.forEach((record, index) => {\n                    const rowKey = getRowKey(record, index);\n                    kvMap.set(rowKey, record);\n                    if (childrenColumnName in record) {\n                        dig(record[childrenColumnName] || []);\n                    }\n                });\n            }\n            /* eslint-enable */\n            dig(data);\n            mapCacheRef.current = {\n                data,\n                childrenColumnName,\n                kvMap,\n                getRowKey,\n            };\n        }\n        return mapCacheRef.current.kvMap.get(key);\n    }\n    return [getRecordByKey];\n}\n"]},"metadata":{},"sourceType":"module"}