{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport ScrollableInkTabBar from \"rc-tabs/es/ScrollableInkTabBar\";\nimport classNames from 'classnames';\nimport UpOutlined from '@ant-design/icons/UpOutlined';\nimport LeftOutlined from '@ant-design/icons/LeftOutlined';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport RightOutlined from '@ant-design/icons/RightOutlined';\nimport { ConfigConsumer } from '../config-provider';\n\nvar TabBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TabBar, _React$Component);\n\n  function TabBar() {\n    var _this;\n\n    _classCallCheck(this, TabBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TabBar).apply(this, arguments));\n\n    _this.renderTabBar = function (_ref) {\n      var _classNames;\n\n      var direction = _ref.direction;\n      var _this$props = _this.props,\n          tabBarStyle = _this$props.tabBarStyle,\n          animated = _this$props.animated,\n          renderTabBar = _this$props.renderTabBar,\n          tabBarExtraContent = _this$props.tabBarExtraContent,\n          tabPosition = _this$props.tabPosition,\n          prefixCls = _this$props.prefixCls,\n          className = _this$props.className,\n          size = _this$props.size,\n          type = _this$props.type;\n      var inkBarAnimated = _typeof(animated) === 'object' ? animated.inkBar : animated;\n      var isVertical = tabPosition === 'left' || tabPosition === 'right';\n      var prevIconComponent = isVertical ? UpOutlined : LeftOutlined;\n      var nextIconComponent = isVertical ? DownOutlined : RightOutlined;\n\n      if (direction === 'rtl' && !isVertical) {\n        prevIconComponent = RightOutlined;\n        nextIconComponent = LeftOutlined;\n      }\n\n      var prevIcon = React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-tab-prev-icon\")\n      }, React.createElement(prevIconComponent, {\n        className: \"\".concat(prefixCls, \"-tab-prev-icon-target\")\n      }));\n      var nextIcon = React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-tab-next-icon\")\n      }, React.createElement(nextIconComponent, {\n        className: \"\".concat(prefixCls, \"-tab-next-icon-target\")\n      })); // Additional className for style usage\n\n      var cls = classNames(\"\".concat(prefixCls, \"-\").concat(tabPosition, \"-bar\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size, \"-bar\"), !!size), _defineProperty(_classNames, \"\".concat(prefixCls, \"-card-bar\"), type && type.indexOf('card') >= 0), _classNames), className);\n\n      var renderProps = _extends(_extends({}, _this.props), {\n        children: null,\n        inkBarAnimated: inkBarAnimated,\n        extraContent: tabBarExtraContent,\n        style: tabBarStyle,\n        prevIcon: prevIcon,\n        nextIcon: nextIcon,\n        className: cls\n      });\n\n      var RenderTabBar;\n\n      if (renderTabBar) {\n        RenderTabBar = renderTabBar(renderProps, ScrollableInkTabBar);\n      } else {\n        RenderTabBar = React.createElement(ScrollableInkTabBar, renderProps);\n      }\n\n      return React.cloneElement(RenderTabBar);\n    };\n\n    return _this;\n  }\n\n  _createClass(TabBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderTabBar);\n    }\n  }]);\n\n  return TabBar;\n}(React.Component);\n\nexport { TabBar as default };\nTabBar.defaultProps = {\n  animated: true,\n  type: 'line'\n};","map":{"version":3,"sources":["tabs/TabBar.jsx"],"names":["TabBar","React","Component","direction","tabBarStyle","animated","renderTabBar","tabBarExtraContent","tabPosition","prefixCls","className","size","type","inkBarAnimated","isVertical","prevIconComponent","nextIconComponent","prevIcon","nextIcon","cls","classNames","renderProps","children","extraContent","style","RenderTabBar"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,mBAAA,MAAA,gCAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,8BAAA;AACA,OAAA,YAAA,MAAA,gCAAA;AACA,OAAA,YAAA,MAAA,gCAAA;AACA,OAAA,aAAA,MAAA,iCAAA;AACA,SAAA,cAAA,QAAA,oBAAA;;IACqBA,M;;;;;AACjB,WAAA,MAAA,GAAc;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AACV,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,MAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;AACA,IAAA,KAAA,CAAA,YAAA,GAAoB,UAAA,IAAA,EAAmB;AAAA,UAAA,WAAA;;AAAA,UAAhBG,SAAgB,GAAA,IAAA,CAAhBA,SAAgB;AAAA,UAAA,WAAA,GACiF,KAAA,CADjF,KAAA;AAAA,UAC3BC,WAD2B,GAAA,WAAA,CAAA,WAAA;AAAA,UACdC,QADc,GAAA,WAAA,CAAA,QAAA;AAAA,UACJC,YADI,GAAA,WAAA,CAAA,YAAA;AAAA,UACUC,kBADV,GAAA,WAAA,CAAA,kBAAA;AAAA,UAC8BC,WAD9B,GAAA,WAAA,CAAA,WAAA;AAAA,UAC2CC,SAD3C,GAAA,WAAA,CAAA,SAAA;AAAA,UACsDC,SADtD,GAAA,WAAA,CAAA,SAAA;AAAA,UACiEC,IADjE,GAAA,WAAA,CAAA,IAAA;AAAA,UACuEC,IADvE,GAAA,WAAA,CAAA,IAAA;AAEnC,UAAMC,cAAc,GAAG,OAAA,CAAA,QAAA,CAAA,KAAA,QAAA,GAA+BR,QAAQ,CAAvC,MAAA,GAAvB,QAAA;AACA,UAAMS,UAAU,GAAGN,WAAW,KAAXA,MAAAA,IAA0BA,WAAW,KAAxD,OAAA;AACA,UAAIO,iBAAiB,GAAGD,UAAU,GAAA,UAAA,GAAlC,YAAA;AACA,UAAIE,iBAAiB,GAAGF,UAAU,GAAA,YAAA,GAAlC,aAAA;;AACA,UAAIX,SAAS,KAATA,KAAAA,IAAuB,CAA3B,UAAA,EAAwC;AACpCY,QAAAA,iBAAiB,GAAjBA,aAAAA;AACAC,QAAAA,iBAAiB,GAAjBA,YAAAA;AACH;;AACD,UAAMC,QAAQ,GAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,gBAAA;AAAf,OAAA,EACrB,KAAK,CAAL,aAAA,CAAA,iBAAA,EAAuC;AAChCP,QAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,uBAAA;AADuB,OAAvC,CADqB,CAAlB;AAKA,UAAMQ,QAAQ,GAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,gBAAA;AAAf,OAAA,EACrB,KAAK,CAAL,aAAA,CAAA,iBAAA,EAAuC;AAChCR,QAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,uBAAA;AADuB,OAAvC,CADqB,CAAlB,CAfmC,CAoBnC;;AACA,UAAMS,GAAG,GAAGC,UAAU,CAAA,GAAA,MAAA,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,GAAA,WAAA,GAAA,EAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,CAAA,IAAA,EAAA,MAAA,CAAA,EACY,CAAC,CADb,IAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA,CAAA,EAESR,IAAI,IAAIA,IAAI,CAAJA,OAAAA,CAAAA,MAAAA,KAFjB,CAAA,CAAA,EAAA,WAAA,GAAtB,SAAsB,CAAtB;;AAIA,UAAMS,WAAW,GAAG,QAAA,CAAc,QAAA,CAAA,EAAA,EAAkB,KAAA,CAAhC,KAAc,CAAd,EAA6C;AAAEC,QAAAA,QAAQ,EAAV,IAAA;AAAkBT,QAAAA,cAAc,EAAhC,cAAA;AAAkCU,QAAAA,YAAY,EAA9C,kBAAA;AAAoEC,QAAAA,KAAK,EAAzE,WAAA;AAAwFP,QAAAA,QAAQ,EAAhG,QAAA;AAC7DC,QAAAA,QAAQ,EADqD,QAAA;AACnDR,QAAAA,SAAS,EAAES;AADwC,OAA7C,CAApB;;AAEA,UAAA,YAAA;;AACA,UAAA,YAAA,EAAkB;AACdM,QAAAA,YAAY,GAAGnB,YAAY,CAAA,WAAA,EAA3BmB,mBAA2B,CAA3BA;AADJ,OAAA,MAGK;AACDA,QAAAA,YAAY,GAAG,KAAA,CAAA,aAAA,CAAA,mBAAA,EAAfA,WAAe,CAAfA;AACH;;AACD,aAAOxB,KAAK,CAALA,YAAAA,CAAP,YAAOA,CAAP;AAlCJ,KAAA;;AAFU,WAAA,KAAA;AAsCb;;;;6BACQ;AACL,aAAO,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,EAAiB,KAAxB,YAAO,CAAP;AACH;;;;EA1C+BA,KAAK,CAACC,S;;SAArBF,M;AA4CrBA,MAAM,CAANA,YAAAA,GAAsB;AAClBK,EAAAA,QAAQ,EADU,IAAA;AAElBO,EAAAA,IAAI,EAAE;AAFY,CAAtBZ","sourcesContent":["import * as React from 'react';\nimport ScrollableInkTabBar from 'rc-tabs/lib/ScrollableInkTabBar';\nimport classNames from 'classnames';\nimport UpOutlined from '@ant-design/icons/UpOutlined';\nimport LeftOutlined from '@ant-design/icons/LeftOutlined';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport RightOutlined from '@ant-design/icons/RightOutlined';\nimport { ConfigConsumer } from '../config-provider';\nexport default class TabBar extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderTabBar = ({ direction }) => {\n            const { tabBarStyle, animated, renderTabBar, tabBarExtraContent, tabPosition, prefixCls, className, size, type, } = this.props;\n            const inkBarAnimated = typeof animated === 'object' ? animated.inkBar : animated;\n            const isVertical = tabPosition === 'left' || tabPosition === 'right';\n            let prevIconComponent = isVertical ? UpOutlined : LeftOutlined;\n            let nextIconComponent = isVertical ? DownOutlined : RightOutlined;\n            if (direction === 'rtl' && !isVertical) {\n                prevIconComponent = RightOutlined;\n                nextIconComponent = LeftOutlined;\n            }\n            const prevIcon = (<span className={`${prefixCls}-tab-prev-icon`}>\n        {React.createElement(prevIconComponent, {\n                className: `${prefixCls}-tab-prev-icon-target`,\n            })}\n      </span>);\n            const nextIcon = (<span className={`${prefixCls}-tab-next-icon`}>\n        {React.createElement(nextIconComponent, {\n                className: `${prefixCls}-tab-next-icon-target`,\n            })}\n      </span>);\n            // Additional className for style usage\n            const cls = classNames(`${prefixCls}-${tabPosition}-bar`, {\n                [`${prefixCls}-${size}-bar`]: !!size,\n                [`${prefixCls}-card-bar`]: type && type.indexOf('card') >= 0,\n            }, className);\n            const renderProps = Object.assign(Object.assign({}, this.props), { children: null, inkBarAnimated, extraContent: tabBarExtraContent, style: tabBarStyle, prevIcon,\n                nextIcon, className: cls });\n            let RenderTabBar;\n            if (renderTabBar) {\n                RenderTabBar = renderTabBar(renderProps, ScrollableInkTabBar);\n            }\n            else {\n                RenderTabBar = <ScrollableInkTabBar {...renderProps}/>;\n            }\n            return React.cloneElement(RenderTabBar);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTabBar}</ConfigConsumer>;\n    }\n}\nTabBar.defaultProps = {\n    animated: true,\n    type: 'line',\n};\n"]},"metadata":{},"sourceType":"module"}