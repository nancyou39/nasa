{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport Element from './Element';\nimport { ConfigConsumer } from '../config-provider'; // eslint-disable-next-line react/prefer-stateless-function\n\nvar SkeletonInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SkeletonInput, _React$Component);\n\n  function SkeletonInput() {\n    var _this;\n\n    _classCallCheck(this, SkeletonInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SkeletonInput).apply(this, arguments));\n\n    _this.renderSkeletonInput = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          className = _this$props.className,\n          active = _this$props.active;\n      var prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n      var otherProps = omit(_this.props, ['prefixCls']);\n      var cls = classNames(prefixCls, className, \"\".concat(prefixCls, \"-element\"), _defineProperty({}, \"\".concat(prefixCls, \"-active\"), active));\n      return React.createElement(\"div\", {\n        className: cls\n      }, React.createElement(Element, _extends({\n        prefixCls: \"\".concat(prefixCls, \"-input\")\n      }, otherProps)));\n    };\n\n    return _this;\n  }\n\n  _createClass(SkeletonInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderSkeletonInput);\n    }\n  }]);\n\n  return SkeletonInput;\n}(React.Component);\n\nSkeletonInput.defaultProps = {\n  size: 'default'\n};\nexport default SkeletonInput;","map":{"version":3,"sources":["skeleton/Input.jsx"],"names":["SkeletonInput","React","Component","getPrefixCls","customizePrefixCls","className","active","prefixCls","otherProps","omit","cls","classNames","size"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,IAAA,MAAA,SAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,OAAA,MAAA,WAAA;AACA,SAAA,cAAA,QAAA,oBAAA,C,CACA;;IACMA,a;;;;;AACF,WAAA,aAAA,GAAc;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,CAAA;;AACV,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,aAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;AACA,IAAA,KAAA,CAAA,mBAAA,GAA2B,UAAA,IAAA,EAAsB;AAAA,UAAnBG,YAAmB,GAAA,IAAA,CAAnBA,YAAmB;AAAA,UAAA,WAAA,GACgB,KAAA,CADhB,KAAA;AAAA,UAC1BC,kBAD0B,GAAA,WAAA,CAAA,SAAA;AAAA,UACNC,SADM,GAAA,WAAA,CAAA,SAAA;AAAA,UACKC,MADL,GAAA,WAAA,CAAA,MAAA;AAE7C,UAAMC,SAAS,GAAGJ,YAAY,CAAA,UAAA,EAA9B,kBAA8B,CAA9B;AACA,UAAMK,UAAU,GAAGC,IAAI,CAAC,KAAA,CAAD,KAAA,EAAa,CAApC,WAAoC,CAAb,CAAvB;AACA,UAAMC,GAAG,GAAGC,UAAU,CAAA,SAAA,EAAA,SAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA,eAAA,CAAA,EAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,SAAA,CAAA,EAAtB,MAAsB,CAAA,CAAtB;AAGA,aAAQ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAED;AAAhB,OAAA,EACZ,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AAAS,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,QAAA;AAAlB,OAAA,EADI,UACJ,CAAA,CADY,CAAR;AAPJ,KAAA;;AAFU,WAAA,KAAA;AAab;;;;6BACQ;AACL,aAAO,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,EAAiB,KAAxB,mBAAO,CAAP;AACH;;;;EAjBuBT,KAAK,CAACC,S;;AAmBlCF,aAAa,CAAbA,YAAAA,GAA6B;AACzBY,EAAAA,IAAI,EAAE;AADmB,CAA7BZ;AAGA,eAAA,aAAA","sourcesContent":["import * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport Element from './Element';\nimport { ConfigConsumer } from '../config-provider';\n// eslint-disable-next-line react/prefer-stateless-function\nclass SkeletonInput extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderSkeletonInput = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className, active } = this.props;\n            const prefixCls = getPrefixCls('skeleton', customizePrefixCls);\n            const otherProps = omit(this.props, ['prefixCls']);\n            const cls = classNames(prefixCls, className, `${prefixCls}-element`, {\n                [`${prefixCls}-active`]: active,\n            });\n            return (<div className={cls}>\n        <Element prefixCls={`${prefixCls}-input`} {...otherProps}/>\n      </div>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSkeletonInput}</ConfigConsumer>;\n    }\n}\nSkeletonInput.defaultProps = {\n    size: 'default',\n};\nexport default SkeletonInput;\n"]},"metadata":{},"sourceType":"module"}