{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/**\n * Cursor rule:\n * 1. Only `showSearch` enabled\n * 2. Only `open` is `true`\n * 3. When typing, set `open` to `true` which hit rule of 2\n *\n * Accessibility:\n * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n */\n\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport MultipleSelector from './MultipleSelector';\nimport SingleSelector from './SingleSelector';\nimport useLock from '../hooks/useLock';\n\nvar Selector = function Selector(props, ref) {\n  var inputRef = React.useRef(null);\n  var prefixCls = props.prefixCls,\n      multiple = props.multiple,\n      open = props.open,\n      mode = props.mode,\n      onSearch = props.onSearch,\n      onToggleOpen = props.onToggleOpen,\n      onInputKeyDown = props.onInputKeyDown,\n      domRef = props.domRef; // ======================= Ref =======================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  }); // ====================== Input ======================\n\n  var _useLock = useLock(0),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getInputMouseDown = _useLock2[0],\n      setInputMouseDown = _useLock2[1];\n\n  var onInternalInputKeyDown = function onInternalInputKeyDown(event) {\n    var which = event.which;\n\n    if (which === KeyCode.UP || which === KeyCode.DOWN) {\n      event.preventDefault();\n    }\n\n    if (onInputKeyDown) {\n      onInputKeyDown(event);\n    }\n\n    if (![KeyCode.SHIFT, KeyCode.TAB, KeyCode.BACKSPACE, KeyCode.ESC].includes(which)) {\n      onToggleOpen(true);\n    }\n  };\n  /**\n   * We can not use `findDOMNode` sine it will get warning,\n   * have to use timer to check if is input element.\n   */\n\n\n  var onInternalInputMouseDown = function onInternalInputMouseDown() {\n    setInputMouseDown(true);\n  };\n\n  var onInputChange = function onInputChange(_ref) {\n    var value = _ref.target.value;\n\n    if (onSearch(value) !== false) {\n      onToggleOpen(true);\n    }\n  }; // ====================== Focus ======================\n  // Should focus input if click the selector\n\n\n  var onClick = function onClick(_ref2) {\n    var target = _ref2.target;\n\n    if (target !== inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  var onMouseDown = function onMouseDown(event) {\n    if (event.target !== inputRef.current && !getInputMouseDown()) {\n      event.preventDefault();\n    }\n\n    if (mode !== 'combobox' || !open) {\n      onToggleOpen();\n    }\n  }; // ================= Inner Selector ==================\n\n\n  var sharedProps = {\n    inputRef: inputRef,\n    onInputKeyDown: onInternalInputKeyDown,\n    onInputMouseDown: onInternalInputMouseDown,\n    onInputChange: onInputChange\n  };\n  var selectNode = multiple ? React.createElement(MultipleSelector, Object.assign({}, props, sharedProps)) : React.createElement(SingleSelector, Object.assign({}, props, sharedProps));\n  return React.createElement(\"div\", {\n    ref: domRef,\n    className: \"\".concat(prefixCls, \"-selector\"),\n    onClick: onClick,\n    onMouseDown: onMouseDown\n  }, selectNode);\n};\n\nvar ForwardSelector = React.forwardRef(Selector);\nForwardSelector.displayName = 'Selector';\nexport default ForwardSelector;","map":{"version":3,"sources":["/Users/nancyou/Desktop/nasa/node_modules/rc-select/es/Selector/index.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","React","KeyCode","MultipleSelector","SingleSelector","useLock","Selector","props","ref","inputRef","useRef","prefixCls","multiple","open","mode","onSearch","onToggleOpen","onInputKeyDown","domRef","useImperativeHandle","focus","current","blur","_useLock","_useLock2","getInputMouseDown","setInputMouseDown","onInternalInputKeyDown","event","which","UP","DOWN","preventDefault","SHIFT","TAB","BACKSPACE","ESC","includes","onInternalInputMouseDown","onInputChange","_ref","target","onClick","_ref2","onMouseDown","sharedProps","onInputMouseDown","selectNode","createElement","assign","className","concat","ForwardSelector","forwardRef","displayName"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Cursor rule:\n * 1. Only `showSearch` enabled\n * 2. Only `open` is `true`\n * 3. When typing, set `open` to `true` which hit rule of 2\n *\n * Accessibility:\n * - https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html\n */\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport MultipleSelector from './MultipleSelector';\nimport SingleSelector from './SingleSelector';\nimport useLock from '../hooks/useLock';\n\nvar Selector = function Selector(props, ref) {\n  var inputRef = React.useRef(null);\n  var prefixCls = props.prefixCls,\n      multiple = props.multiple,\n      open = props.open,\n      mode = props.mode,\n      onSearch = props.onSearch,\n      onToggleOpen = props.onToggleOpen,\n      onInputKeyDown = props.onInputKeyDown,\n      domRef = props.domRef; // ======================= Ref =======================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        inputRef.current.focus();\n      },\n      blur: function blur() {\n        inputRef.current.blur();\n      }\n    };\n  }); // ====================== Input ======================\n\n  var _useLock = useLock(0),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getInputMouseDown = _useLock2[0],\n      setInputMouseDown = _useLock2[1];\n\n  var onInternalInputKeyDown = function onInternalInputKeyDown(event) {\n    var which = event.which;\n\n    if (which === KeyCode.UP || which === KeyCode.DOWN) {\n      event.preventDefault();\n    }\n\n    if (onInputKeyDown) {\n      onInputKeyDown(event);\n    }\n\n    if (![KeyCode.SHIFT, KeyCode.TAB, KeyCode.BACKSPACE, KeyCode.ESC].includes(which)) {\n      onToggleOpen(true);\n    }\n  };\n  /**\n   * We can not use `findDOMNode` sine it will get warning,\n   * have to use timer to check if is input element.\n   */\n\n\n  var onInternalInputMouseDown = function onInternalInputMouseDown() {\n    setInputMouseDown(true);\n  };\n\n  var onInputChange = function onInputChange(_ref) {\n    var value = _ref.target.value;\n\n    if (onSearch(value) !== false) {\n      onToggleOpen(true);\n    }\n  }; // ====================== Focus ======================\n  // Should focus input if click the selector\n\n\n  var onClick = function onClick(_ref2) {\n    var target = _ref2.target;\n\n    if (target !== inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  var onMouseDown = function onMouseDown(event) {\n    if (event.target !== inputRef.current && !getInputMouseDown()) {\n      event.preventDefault();\n    }\n\n    if (mode !== 'combobox' || !open) {\n      onToggleOpen();\n    }\n  }; // ================= Inner Selector ==================\n\n\n  var sharedProps = {\n    inputRef: inputRef,\n    onInputKeyDown: onInternalInputKeyDown,\n    onInputMouseDown: onInternalInputMouseDown,\n    onInputChange: onInputChange\n  };\n  var selectNode = multiple ? React.createElement(MultipleSelector, Object.assign({}, props, sharedProps)) : React.createElement(SingleSelector, Object.assign({}, props, sharedProps));\n  return React.createElement(\"div\", {\n    ref: domRef,\n    className: \"\".concat(prefixCls, \"-selector\"),\n    onClick: onClick,\n    onMouseDown: onMouseDown\n  }, selectNode);\n};\n\nvar ForwardSelector = React.forwardRef(Selector);\nForwardSelector.displayName = 'Selector';\nexport default ForwardSelector;"]},"metadata":{},"sourceType":"module"}