{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport { ConfigConsumer } from '../config-provider';\n\nvar BreadcrumbSeparator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BreadcrumbSeparator, _React$Component);\n\n  function BreadcrumbSeparator() {\n    var _this;\n\n    _classCallCheck(this, BreadcrumbSeparator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BreadcrumbSeparator).apply(this, arguments));\n\n    _this.renderSeparator = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var children = _this.props.children;\n      var prefixCls = getPrefixCls('breadcrumb');\n      return React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-separator\")\n      }, children || '/');\n    };\n\n    return _this;\n  }\n\n  _createClass(BreadcrumbSeparator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderSeparator);\n    }\n  }]);\n\n  return BreadcrumbSeparator;\n}(React.Component);\n\nexport { BreadcrumbSeparator as default };\nBreadcrumbSeparator.__ANT_BREADCRUMB_SEPARATOR = true;","map":{"version":3,"sources":["breadcrumb/BreadcrumbSeparator.jsx"],"names":["BreadcrumbSeparator","React","Component","getPrefixCls","children","prefixCls"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,cAAA,QAAA,oBAAA;;IACqBA,mB;;;;;AACjB,WAAA,mBAAA,GAAc;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,mBAAA,CAAA;;AACV,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,mBAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;AACA,IAAA,KAAA,CAAA,eAAA,GAAuB,UAAA,IAAA,EAAsB;AAAA,UAAnBG,YAAmB,GAAA,IAAA,CAAnBA,YAAmB;AAAA,UACjCC,QADiC,GACpB,KAAA,CADoB,KACpB,CADoB,QAAA;AAEzC,UAAMC,SAAS,GAAGF,YAAY,CAA9B,YAA8B,CAA9B;AACA,aAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,YAAA;AAAf,OAAA,EAA4CC,QAAQ,IAA3D,GAAO,CAAP;AAHJ,KAAA;;AAFU,WAAA,KAAA;AAOb;;;;6BACQ;AACL,aAAO,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,EAAiB,KAAxB,eAAO,CAAP;AACH;;;;EAX4CH,KAAK,CAACC,S;;SAAlCF,mB;AAarBA,mBAAmB,CAAnBA,0BAAAA,GAAAA,IAAAA","sourcesContent":["import * as React from 'react';\nimport { ConfigConsumer } from '../config-provider';\nexport default class BreadcrumbSeparator extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderSeparator = ({ getPrefixCls }) => {\n            const { children } = this.props;\n            const prefixCls = getPrefixCls('breadcrumb');\n            return <span className={`${prefixCls}-separator`}>{children || '/'}</span>;\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSeparator}</ConfigConsumer>;\n    }\n}\nBreadcrumbSeparator.__ANT_BREADCRUMB_SEPARATOR = true;\n"]},"metadata":{},"sourceType":"module"}