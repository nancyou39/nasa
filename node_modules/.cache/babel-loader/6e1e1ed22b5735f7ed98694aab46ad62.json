{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SubMenu as RcSubMenu } from 'rc-menu';\nimport classNames from 'classnames';\nimport MenuContext from './MenuContext';\n\nvar SubMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubMenu, _React$Component);\n\n  function SubMenu() {\n    var _this;\n\n    _classCallCheck(this, SubMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubMenu).apply(this, arguments));\n\n    _this.onKeyDown = function (e) {\n      _this.subMenu.onKeyDown(e);\n    };\n\n    _this.saveSubMenu = function (subMenu) {\n      _this.subMenu = subMenu;\n    };\n\n    return _this;\n  }\n\n  _createClass(SubMenu, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          rootPrefixCls = _this$props.rootPrefixCls,\n          popupClassName = _this$props.popupClassName;\n      return React.createElement(MenuContext.Consumer, null, function (_ref) {\n        var antdMenuTheme = _ref.antdMenuTheme;\n        return React.createElement(RcSubMenu, _extends({}, _this2.props, {\n          ref: _this2.saveSubMenu,\n          popupClassName: classNames(\"\".concat(rootPrefixCls, \"-\").concat(antdMenuTheme), popupClassName)\n        }));\n      });\n    }\n  }]);\n\n  return SubMenu;\n}(React.Component);\n\nSubMenu.contextTypes = {\n  antdMenuTheme: PropTypes.string\n}; // fix issue:https://github.com/ant-design/ant-design/issues/8666\n\nSubMenu.isSubMenu = 1;\nexport default SubMenu;","map":{"version":3,"sources":["menu/SubMenu.jsx"],"names":["SubMenu","React","Component","rootPrefixCls","popupClassName","antdMenuTheme","classNames","PropTypes","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,SAAA,MAAA,YAAA;AACA,SAASA,OAAO,IAAhB,SAAA,QAAA,SAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,WAAA,MAAA,eAAA;;IACMA,O;;;;;AACF,WAAA,OAAA,GAAc;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA;;AACV,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,OAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;AACA,IAAA,KAAA,CAAA,SAAA,GAAiB,UAAA,CAAA,EAAO;AACpB,MAAA,KAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;AADJ,KAAA;;AAGA,IAAA,KAAA,CAAA,WAAA,GAAmB,UAAA,OAAA,EAAa;AAC5B,MAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AADJ,KAAA;;AALU,WAAA,KAAA;AAQb;;;;6BACQ;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UAAA,WAAA,GACqC,KADrC,KAAA;AAAA,UACGG,aADH,GAAA,WAAA,CAAA,aAAA;AAAA,UACkBC,cADlB,GAAA,WAAA,CAAA,cAAA;AAEL,aAAQ,KAAA,CAAA,aAAA,CAAC,WAAD,CAAA,QAAA,EAAA,IAAA,EACP,UAAA,IAAA,EAAA;AAAA,YAAGC,aAAH,GAAA,IAAA,CAAA,aAAA;AAAA,eAAwB,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAe,MAAI,CAAnB,KAAA,EAAA;AAA2B,UAAA,GAAG,EAAE,MAAI,CAApC,WAAA;AAAkD,UAAA,cAAc,EAAEC,UAAU,CAAA,GAAA,MAAA,CAAA,aAAA,EAAA,GAAA,EAAA,MAAA,CAAA,aAAA,CAAA,EAAA,cAAA;AAA5E,SAAA,CAAA,CAAxB;AADD,OAAQ,CAAR;AAGH;;;;EAfiBL,KAAK,CAACC,S;;AAiB5BF,OAAO,CAAPA,YAAAA,GAAuB;AACnBK,EAAAA,aAAa,EAAEE,SAAS,CAACC;AADN,CAAvBR,C,CAGA;;AACAA,OAAO,CAAPA,SAAAA,GAAAA,CAAAA;AACA,eAAA,OAAA","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SubMenu as RcSubMenu } from 'rc-menu';\nimport classNames from 'classnames';\nimport MenuContext from './MenuContext';\nclass SubMenu extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onKeyDown = (e) => {\n            this.subMenu.onKeyDown(e);\n        };\n        this.saveSubMenu = (subMenu) => {\n            this.subMenu = subMenu;\n        };\n    }\n    render() {\n        const { rootPrefixCls, popupClassName } = this.props;\n        return (<MenuContext.Consumer>\n        {({ antdMenuTheme }) => (<RcSubMenu {...this.props} ref={this.saveSubMenu} popupClassName={classNames(`${rootPrefixCls}-${antdMenuTheme}`, popupClassName)}/>)}\n      </MenuContext.Consumer>);\n    }\n}\nSubMenu.contextTypes = {\n    antdMenuTheme: PropTypes.string,\n};\n// fix issue:https://github.com/ant-design/ant-design/issues/8666\nSubMenu.isSubMenu = 1;\nexport default SubMenu;\n"]},"metadata":{},"sourceType":"module"}