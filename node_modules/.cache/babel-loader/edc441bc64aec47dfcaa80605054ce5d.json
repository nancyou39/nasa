{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport * as React from 'react';\nexport default function useSyncState(filteredKeys) {\n  var filteredKeysRef = React.useRef(filteredKeys);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  return [function () {\n    return filteredKeysRef.current;\n  }, function (newValue) {\n    filteredKeysRef.current = newValue; // re-render\n\n    forceUpdate({});\n  }];\n}","map":{"version":3,"sources":["table/hooks/useSyncState.js"],"names":["filteredKeysRef","React","forceUpdate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,eAAe,SAAA,YAAA,CAAA,YAAA,EAAoC;AAC/C,MAAMA,eAAe,GAAGC,KAAK,CAALA,MAAAA,CAAxB,YAAwBA,CAAxB;;AAD+C,MAAA,eAAA,GAEvBA,KAAK,CAALA,QAAAA,CAFuB,IAEvBA,CAFuB;AAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAEtCC,WAFsC,GAAA,gBAAA,CAAA,CAAA,CAAA;;AAG/C,SAAO,CACH,YAAA;AAAA,WAAMF,eAAe,CAArB,OAAA;AADG,GAAA,EAEH,UAAA,QAAA,EAAc;AACVA,IAAAA,eAAe,CAAfA,OAAAA,GADU,QACVA,CADU,CAEV;;AACAE,IAAAA,WAAW,CAAXA,EAAW,CAAXA;AALR,GAAO,CAAP;AAQH","sourcesContent":["import * as React from 'react';\nexport default function useSyncState(filteredKeys) {\n    const filteredKeysRef = React.useRef(filteredKeys);\n    const [, forceUpdate] = React.useState(null);\n    return [\n        () => filteredKeysRef.current,\n        (newValue) => {\n            filteredKeysRef.current = newValue;\n            // re-render\n            forceUpdate({});\n        },\n    ];\n}\n"]},"metadata":{},"sourceType":"module"}