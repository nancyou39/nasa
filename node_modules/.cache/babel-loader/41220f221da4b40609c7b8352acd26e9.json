{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport RcTooltip from 'rc-tooltip';\nimport classNames from 'classnames';\nimport _getPlacements from './placements';\nimport { ConfigConsumer } from '../config-provider';\n\nvar splitObject = function splitObject(obj, keys) {\n  var picked = {};\n\n  var omitted = _extends({}, obj);\n\n  keys.forEach(function (key) {\n    if (obj && key in obj) {\n      picked[key] = obj[key];\n      delete omitted[key];\n    }\n  });\n  return {\n    picked: picked,\n    omitted: omitted\n  };\n}; // Fix Tooltip won't hide at disabled button\n// mouse events don't trigger at disabled button in Chrome\n// https://github.com/react-component/tooltip/issues/18\n\n\nfunction getDisabledCompatibleChildren(element) {\n  var elementType = element.type;\n\n  if ((elementType.__ANT_BUTTON === true || elementType.__ANT_SWITCH === true || elementType.__ANT_CHECKBOX === true || element.type === 'button') && element.props.disabled) {\n    // Pick some layout related style properties up to span\n    // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254\n    var _splitObject = splitObject(element.props.style, ['position', 'left', 'right', 'top', 'bottom', 'float', 'display', 'zIndex']),\n        picked = _splitObject.picked,\n        omitted = _splitObject.omitted;\n\n    var spanStyle = _extends(_extends({\n      display: 'inline-block'\n    }, picked), {\n      cursor: 'not-allowed',\n      width: element.props.block ? '100%' : null\n    });\n\n    var buttonStyle = _extends(_extends({}, omitted), {\n      pointerEvents: 'none'\n    });\n\n    var child = React.cloneElement(element, {\n      style: buttonStyle,\n      className: null\n    });\n    return React.createElement(\"span\", {\n      style: spanStyle,\n      className: element.props.className\n    }, child);\n  }\n\n  return element;\n}\n\nvar Tooltip =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tooltip, _React$Component);\n\n  function Tooltip(props) {\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tooltip).call(this, props));\n\n    _this.onVisibleChange = function (visible) {\n      var onVisibleChange = _this.props.onVisibleChange;\n\n      if (!('visible' in _this.props)) {\n        _this.setState({\n          visible: _this.isNoTitle() ? false : visible\n        });\n      }\n\n      if (onVisibleChange && !_this.isNoTitle()) {\n        onVisibleChange(visible);\n      }\n    };\n\n    _this.saveTooltip = function (node) {\n      _this.tooltip = node;\n    }; // 动态设置动画点\n\n\n    _this.onPopupAlign = function (domNode, align) {\n      var placements = _this.getPlacements(); // 当前返回的位置\n\n\n      var placement = Object.keys(placements).filter(function (key) {\n        return placements[key].points[0] === align.points[0] && placements[key].points[1] === align.points[1];\n      })[0]; // 根据当前坐标设置动画点\n\n      var rect = domNode.getBoundingClientRect();\n      var transformOrigin = {\n        top: '50%',\n        left: '50%'\n      };\n\n      if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {\n        transformOrigin.top = \"\".concat(rect.height - align.offset[1], \"px\");\n      } else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {\n        transformOrigin.top = \"\".concat(-align.offset[1], \"px\");\n      }\n\n      if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {\n        transformOrigin.left = \"\".concat(rect.width - align.offset[0], \"px\");\n      } else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {\n        transformOrigin.left = \"\".concat(-align.offset[0], \"px\");\n      }\n\n      domNode.style.transformOrigin = \"\".concat(transformOrigin.left, \" \").concat(transformOrigin.top);\n    };\n\n    _this.renderTooltip = function (_ref) {\n      var getContextPopupContainer = _ref.getPopupContainer,\n          getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props,\n          state = _assertThisInitialize.state;\n\n      var customizePrefixCls = props.prefixCls,\n          openClassName = props.openClassName,\n          getPopupContainer = props.getPopupContainer,\n          getTooltipContainer = props.getTooltipContainer,\n          overlayClassName = props.overlayClassName;\n      var children = props.children;\n      var prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n      var visible = state.visible; // Hide tooltip when there is no title\n\n      if (!('visible' in props) && _this.isNoTitle()) {\n        visible = false;\n      }\n\n      var child = getDisabledCompatibleChildren(React.isValidElement(children) ? children : React.createElement(\"span\", null, children));\n      var childProps = child.props;\n      var childCls = classNames(childProps.className, _defineProperty({}, openClassName || \"\".concat(prefixCls, \"-open\"), true));\n      var customOverlayClassName = classNames(overlayClassName, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n      return React.createElement(RcTooltip, _extends({}, _this.props, {\n        prefixCls: prefixCls,\n        overlayClassName: customOverlayClassName,\n        getTooltipContainer: getPopupContainer || getTooltipContainer || getContextPopupContainer,\n        ref: _this.saveTooltip,\n        builtinPlacements: _this.getPlacements(),\n        overlay: _this.getOverlay(),\n        visible: visible,\n        onVisibleChange: _this.onVisibleChange,\n        onPopupAlign: _this.onPopupAlign\n      }), visible ? React.cloneElement(child, {\n        className: childCls\n      }) : child);\n    };\n\n    _this.state = {\n      visible: !!props.visible || !!props.defaultVisible\n    };\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"getPopupDomNode\",\n    value: function getPopupDomNode() {\n      return this.tooltip.getPopupDomNode();\n    }\n  }, {\n    key: \"getPlacements\",\n    value: function getPlacements() {\n      var _this$props = this.props,\n          builtinPlacements = _this$props.builtinPlacements,\n          arrowPointAtCenter = _this$props.arrowPointAtCenter,\n          autoAdjustOverflow = _this$props.autoAdjustOverflow;\n      return builtinPlacements || _getPlacements({\n        arrowPointAtCenter: arrowPointAtCenter,\n        autoAdjustOverflow: autoAdjustOverflow\n      });\n    }\n  }, {\n    key: \"isNoTitle\",\n    value: function isNoTitle() {\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          overlay = _this$props2.overlay;\n      return !title && !overlay && title !== 0; // overlay for old version compatibility\n    }\n  }, {\n    key: \"getOverlay\",\n    value: function getOverlay() {\n      var _this$props3 = this.props,\n          title = _this$props3.title,\n          overlay = _this$props3.overlay;\n\n      if (title === 0) {\n        return title;\n      }\n\n      return overlay || title || '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderTooltip);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('visible' in nextProps) {\n        return {\n          visible: nextProps.visible\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Tooltip;\n}(React.Component);\n\nTooltip.defaultProps = {\n  placement: 'top',\n  transitionName: 'zoom-big-fast',\n  mouseEnterDelay: 0.1,\n  mouseLeaveDelay: 0.1,\n  arrowPointAtCenter: false,\n  autoAdjustOverflow: true\n};\nexport default Tooltip;","map":{"version":3,"sources":["tooltip/index.jsx"],"names":["splitObject","picked","omitted","keys","obj","key","elementType","element","spanStyle","display","cursor","width","buttonStyle","pointerEvents","child","style","className","Tooltip","React","Component","onVisibleChange","visible","placements","placement","align","rect","domNode","transformOrigin","top","left","getPopupContainer","getContextPopupContainer","getPrefixCls","direction","props","state","customizePrefixCls","openClassName","getTooltipContainer","overlayClassName","children","prefixCls","getDisabledCompatibleChildren","childProps","childCls","classNames","customOverlayClassName","onPopupAlign","defaultVisible","nextProps","builtinPlacements","arrowPointAtCenter","autoAdjustOverflow","getPlacements","title","overlay","transitionName","mouseEnterDelay","mouseLeaveDelay"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcTooltip from 'rc-tooltip';\nimport classNames from 'classnames';\nimport getPlacements from './placements';\nimport { ConfigConsumer } from '../config-provider';\nconst splitObject = (obj, keys) => {\n    const picked = {};\n    const omitted = Object.assign({}, obj);\n    keys.forEach(key => {\n        if (obj && key in obj) {\n            picked[key] = obj[key];\n            delete omitted[key];\n        }\n    });\n    return { picked, omitted };\n};\n// Fix Tooltip won't hide at disabled button\n// mouse events don't trigger at disabled button in Chrome\n// https://github.com/react-component/tooltip/issues/18\nfunction getDisabledCompatibleChildren(element) {\n    const elementType = element.type;\n    if ((elementType.__ANT_BUTTON === true ||\n        elementType.__ANT_SWITCH === true ||\n        elementType.__ANT_CHECKBOX === true ||\n        element.type === 'button') &&\n        element.props.disabled) {\n        // Pick some layout related style properties up to span\n        // Prevent layout bugs like https://github.com/ant-design/ant-design/issues/5254\n        const { picked, omitted } = splitObject(element.props.style, [\n            'position',\n            'left',\n            'right',\n            'top',\n            'bottom',\n            'float',\n            'display',\n            'zIndex',\n        ]);\n        const spanStyle = Object.assign(Object.assign({ display: 'inline-block' }, picked), { cursor: 'not-allowed', width: element.props.block ? '100%' : null });\n        const buttonStyle = Object.assign(Object.assign({}, omitted), { pointerEvents: 'none' });\n        const child = React.cloneElement(element, {\n            style: buttonStyle,\n            className: null,\n        });\n        return (<span style={spanStyle} className={element.props.className}>\n        {child}\n      </span>);\n    }\n    return element;\n}\nclass Tooltip extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onVisibleChange = (visible) => {\n            const { onVisibleChange } = this.props;\n            if (!('visible' in this.props)) {\n                this.setState({ visible: this.isNoTitle() ? false : visible });\n            }\n            if (onVisibleChange && !this.isNoTitle()) {\n                onVisibleChange(visible);\n            }\n        };\n        this.saveTooltip = (node) => {\n            this.tooltip = node;\n        };\n        // 动态设置动画点\n        this.onPopupAlign = (domNode, align) => {\n            const placements = this.getPlacements();\n            // 当前返回的位置\n            const placement = Object.keys(placements).filter(key => placements[key].points[0] === align.points[0] &&\n                placements[key].points[1] === align.points[1])[0];\n            // 根据当前坐标设置动画点\n            const rect = domNode.getBoundingClientRect();\n            const transformOrigin = {\n                top: '50%',\n                left: '50%',\n            };\n            if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {\n                transformOrigin.top = `${rect.height - align.offset[1]}px`;\n            }\n            else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {\n                transformOrigin.top = `${-align.offset[1]}px`;\n            }\n            if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {\n                transformOrigin.left = `${rect.width - align.offset[0]}px`;\n            }\n            else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {\n                transformOrigin.left = `${-align.offset[0]}px`;\n            }\n            domNode.style.transformOrigin = `${transformOrigin.left} ${transformOrigin.top}`;\n        };\n        this.renderTooltip = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, direction, }) => {\n            const { props, state } = this;\n            const { prefixCls: customizePrefixCls, openClassName, getPopupContainer, getTooltipContainer, overlayClassName, } = props;\n            const children = props.children;\n            const prefixCls = getPrefixCls('tooltip', customizePrefixCls);\n            let { visible } = state;\n            // Hide tooltip when there is no title\n            if (!('visible' in props) && this.isNoTitle()) {\n                visible = false;\n            }\n            const child = getDisabledCompatibleChildren(React.isValidElement(children) ? children : <span>{children}</span>);\n            const childProps = child.props;\n            const childCls = classNames(childProps.className, {\n                [openClassName || `${prefixCls}-open`]: true,\n            });\n            const customOverlayClassName = classNames(overlayClassName, {\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            return (<RcTooltip {...this.props} prefixCls={prefixCls} overlayClassName={customOverlayClassName} getTooltipContainer={getPopupContainer || getTooltipContainer || getContextPopupContainer} ref={this.saveTooltip} builtinPlacements={this.getPlacements()} overlay={this.getOverlay()} visible={visible} onVisibleChange={this.onVisibleChange} onPopupAlign={this.onPopupAlign}>\n        {visible ? React.cloneElement(child, { className: childCls }) : child}\n      </RcTooltip>);\n        };\n        this.state = {\n            visible: !!props.visible || !!props.defaultVisible,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('visible' in nextProps) {\n            return { visible: nextProps.visible };\n        }\n        return null;\n    }\n    getPopupDomNode() {\n        return this.tooltip.getPopupDomNode();\n    }\n    getPlacements() {\n        const { builtinPlacements, arrowPointAtCenter, autoAdjustOverflow } = this.props;\n        return (builtinPlacements ||\n            getPlacements({\n                arrowPointAtCenter,\n                autoAdjustOverflow,\n            }));\n    }\n    isNoTitle() {\n        const { title, overlay } = this.props;\n        return !title && !overlay && title !== 0; // overlay for old version compatibility\n    }\n    getOverlay() {\n        const { title, overlay } = this.props;\n        if (title === 0) {\n            return title;\n        }\n        return overlay || title || '';\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTooltip}</ConfigConsumer>;\n    }\n}\nTooltip.defaultProps = {\n    placement: 'top',\n    transitionName: 'zoom-big-fast',\n    mouseEnterDelay: 0.1,\n    mouseLeaveDelay: 0.1,\n    arrowPointAtCenter: false,\n    autoAdjustOverflow: true,\n};\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}