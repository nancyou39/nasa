{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Dialog from './Modal';\nimport ActionButton from './ActionButton';\nimport warning from '../_util/warning';\n\nvar ConfirmDialog = function ConfirmDialog(props) {\n  var icon = props.icon,\n      onCancel = props.onCancel,\n      onOk = props.onOk,\n      close = props.close,\n      zIndex = props.zIndex,\n      afterClose = props.afterClose,\n      visible = props.visible,\n      keyboard = props.keyboard,\n      centered = props.centered,\n      getContainer = props.getContainer,\n      maskStyle = props.maskStyle,\n      okText = props.okText,\n      okButtonProps = props.okButtonProps,\n      cancelText = props.cancelText,\n      cancelButtonProps = props.cancelButtonProps;\n  warning(!(typeof icon === 'string' && icon.length > 2), 'Modal', \"`icon` is using ReactNode instead of string naming in v4. Please check `\".concat(icon, \"` at https://ant.design/components/icon\")); // 支持传入{ icon: null }来隐藏`Modal.confirm`默认的Icon\n\n  var okType = props.okType || 'primary';\n  var prefixCls = props.prefixCls || 'ant-modal';\n  var contentPrefixCls = \"\".concat(prefixCls, \"-confirm\"); // 默认为 true，保持向下兼容\n\n  var okCancel = 'okCancel' in props ? props.okCancel : true;\n  var width = props.width || 416;\n  var style = props.style || {};\n  var mask = props.mask === undefined ? true : props.mask; // 默认为 false，保持旧版默认行为\n\n  var maskClosable = props.maskClosable === undefined ? false : props.maskClosable;\n  var autoFocusButton = props.autoFocusButton === null ? false : props.autoFocusButton || 'ok';\n  var transitionName = props.transitionName || 'zoom';\n  var maskTransitionName = props.maskTransitionName || 'fade';\n  var classString = classNames(contentPrefixCls, \"\".concat(contentPrefixCls, \"-\").concat(props.type), props.className);\n  var cancelButton = okCancel && React.createElement(ActionButton, {\n    actionFn: onCancel,\n    closeModal: close,\n    autoFocus: autoFocusButton === 'cancel',\n    buttonProps: cancelButtonProps\n  }, cancelText);\n  return React.createElement(Dialog, {\n    prefixCls: prefixCls,\n    className: classString,\n    wrapClassName: classNames(_defineProperty({}, \"\".concat(contentPrefixCls, \"-centered\"), !!props.centered)),\n    onCancel: function onCancel() {\n      return close({\n        triggerCancel: true\n      });\n    },\n    visible: visible,\n    title: \"\",\n    transitionName: transitionName,\n    footer: \"\",\n    maskTransitionName: maskTransitionName,\n    mask: mask,\n    maskClosable: maskClosable,\n    maskStyle: maskStyle,\n    style: style,\n    width: width,\n    zIndex: zIndex,\n    afterClose: afterClose,\n    keyboard: keyboard,\n    centered: centered,\n    getContainer: getContainer\n  }, React.createElement(\"div\", {\n    className: \"\".concat(contentPrefixCls, \"-body-wrapper\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(contentPrefixCls, \"-body\")\n  }, icon, props.title === undefined ? null : React.createElement(\"span\", {\n    className: \"\".concat(contentPrefixCls, \"-title\")\n  }, props.title), React.createElement(\"div\", {\n    className: \"\".concat(contentPrefixCls, \"-content\")\n  }, props.content)), React.createElement(\"div\", {\n    className: \"\".concat(contentPrefixCls, \"-btns\")\n  }, cancelButton, React.createElement(ActionButton, {\n    type: okType,\n    actionFn: onOk,\n    closeModal: close,\n    autoFocus: autoFocusButton === 'ok',\n    buttonProps: okButtonProps\n  }, okText))));\n};\n\nexport default ConfirmDialog;","map":{"version":3,"sources":["modal/ConfirmDialog.jsx"],"names":["ConfirmDialog","icon","onCancel","onOk","close","zIndex","afterClose","visible","keyboard","centered","getContainer","maskStyle","okText","okButtonProps","cancelText","cancelButtonProps","props","warning","okType","prefixCls","contentPrefixCls","okCancel","width","style","mask","maskClosable","autoFocusButton","transitionName","maskTransitionName","classString","classNames","cancelButton","triggerCancel"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport Dialog from './Modal';\nimport ActionButton from './ActionButton';\nimport warning from '../_util/warning';\nconst ConfirmDialog = (props) => {\n    const { icon, onCancel, onOk, close, zIndex, afterClose, visible, keyboard, centered, getContainer, maskStyle, okText, okButtonProps, cancelText, cancelButtonProps, } = props;\n    warning(!(typeof icon === 'string' && icon.length > 2), 'Modal', `\\`icon\\` is using ReactNode instead of string naming in v4. Please check \\`${icon}\\` at https://ant.design/components/icon`);\n    // 支持传入{ icon: null }来隐藏`Modal.confirm`默认的Icon\n    const okType = props.okType || 'primary';\n    const prefixCls = props.prefixCls || 'ant-modal';\n    const contentPrefixCls = `${prefixCls}-confirm`;\n    // 默认为 true，保持向下兼容\n    const okCancel = 'okCancel' in props ? props.okCancel : true;\n    const width = props.width || 416;\n    const style = props.style || {};\n    const mask = props.mask === undefined ? true : props.mask;\n    // 默认为 false，保持旧版默认行为\n    const maskClosable = props.maskClosable === undefined ? false : props.maskClosable;\n    const autoFocusButton = props.autoFocusButton === null ? false : props.autoFocusButton || 'ok';\n    const transitionName = props.transitionName || 'zoom';\n    const maskTransitionName = props.maskTransitionName || 'fade';\n    const classString = classNames(contentPrefixCls, `${contentPrefixCls}-${props.type}`, props.className);\n    const cancelButton = okCancel && (<ActionButton actionFn={onCancel} closeModal={close} autoFocus={autoFocusButton === 'cancel'} buttonProps={cancelButtonProps}>\n      {cancelText}\n    </ActionButton>);\n    return (<Dialog prefixCls={prefixCls} className={classString} wrapClassName={classNames({ [`${contentPrefixCls}-centered`]: !!props.centered })} onCancel={() => close({ triggerCancel: true })} visible={visible} title=\"\" transitionName={transitionName} footer=\"\" maskTransitionName={maskTransitionName} mask={mask} maskClosable={maskClosable} maskStyle={maskStyle} style={style} width={width} zIndex={zIndex} afterClose={afterClose} keyboard={keyboard} centered={centered} getContainer={getContainer}>\n      <div className={`${contentPrefixCls}-body-wrapper`}>\n        <div className={`${contentPrefixCls}-body`}>\n          {icon}\n          {props.title === undefined ? null : (<span className={`${contentPrefixCls}-title`}>{props.title}</span>)}\n          <div className={`${contentPrefixCls}-content`}>{props.content}</div>\n        </div>\n        <div className={`${contentPrefixCls}-btns`}>\n          {cancelButton}\n          <ActionButton type={okType} actionFn={onOk} closeModal={close} autoFocus={autoFocusButton === 'ok'} buttonProps={okButtonProps}>\n            {okText}\n          </ActionButton>\n        </div>\n      </div>\n    </Dialog>);\n};\nexport default ConfirmDialog;\n"]},"metadata":{},"sourceType":"module"}