{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport CheckCircleOutlined from '@ant-design/icons/CheckCircleOutlined';\nimport ExclamationCircleOutlined from '@ant-design/icons/ExclamationCircleOutlined';\nimport InfoCircleOutlined from '@ant-design/icons/InfoCircleOutlined';\nimport CloseCircleOutlined from '@ant-design/icons/CloseCircleOutlined';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport InfoCircleFilled from '@ant-design/icons/InfoCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport getDataOrAriaProps from '../_util/getDataOrAriaProps';\nimport ErrorBoundary from './ErrorBoundary';\n\nfunction noop() {}\n\nvar iconMapFilled = {\n  success: CheckCircleFilled,\n  info: InfoCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled\n};\nvar iconMapOutlined = {\n  success: CheckCircleOutlined,\n  info: InfoCircleOutlined,\n  error: CloseCircleOutlined,\n  warning: ExclamationCircleOutlined\n};\n\nvar Alert =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Alert, _React$Component);\n\n  function Alert() {\n    var _this;\n\n    _classCallCheck(this, Alert);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Alert).apply(this, arguments));\n    _this.state = {\n      closing: false,\n      closed: false\n    };\n\n    _this.handleClose = function (e) {\n      e.preventDefault();\n      var dom = ReactDOM.findDOMNode(_assertThisInitialized(_this));\n      dom.style.height = \"\".concat(dom.offsetHeight, \"px\"); // Magic code\n      // 重复一次后才能正确设置 height\n\n      dom.style.height = \"\".concat(dom.offsetHeight, \"px\");\n\n      _this.setState({\n        closing: true\n      });\n\n      (_this.props.onClose || noop)(e);\n    };\n\n    _this.animationEnd = function () {\n      _this.setState({\n        closing: false,\n        closed: true\n      });\n\n      (_this.props.afterClose || noop)();\n    };\n\n    _this.renderAlert = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n      var _this$props = _this.props,\n          description = _this$props.description,\n          customizePrefixCls = _this$props.prefixCls,\n          message = _this$props.message,\n          closeText = _this$props.closeText,\n          banner = _this$props.banner,\n          _this$props$className = _this$props.className,\n          className = _this$props$className === void 0 ? '' : _this$props$className,\n          style = _this$props.style,\n          icon = _this$props.icon;\n      var _this$props2 = _this.props,\n          closable = _this$props2.closable,\n          type = _this$props2.type,\n          showIcon = _this$props2.showIcon;\n      var _this$state = _this.state,\n          closing = _this$state.closing,\n          closed = _this$state.closed;\n      var prefixCls = getPrefixCls('alert', customizePrefixCls); // banner模式默认有 Icon\n\n      showIcon = banner && showIcon === undefined ? true : showIcon; // banner模式默认为警告\n\n      type = banner && type === undefined ? 'warning' : type || 'info'; // use outline icon in alert with description\n\n      var iconType = (description ? iconMapOutlined : iconMapFilled)[type] || null; // closeable when closeText is assigned\n\n      if (closeText) {\n        closable = true;\n      }\n\n      var alertCls = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-closing\"), closing), _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-description\"), !!description), _defineProperty(_classNames, \"\".concat(prefixCls, \"-no-icon\"), !showIcon), _defineProperty(_classNames, \"\".concat(prefixCls, \"-banner\"), !!banner), _defineProperty(_classNames, \"\".concat(prefixCls, \"-closable\"), closable), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n      var closeIcon = closable ? React.createElement(\"button\", {\n        type: \"button\",\n        onClick: _this.handleClose,\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        tabIndex: 0\n      }, closeText ? React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-text\")\n      }, closeText) : React.createElement(CloseOutlined, null)) : null;\n      var dataOrAriaProps = getDataOrAriaProps(_this.props);\n      var iconNode = icon && (React.isValidElement(icon) ? React.cloneElement(icon, {\n        className: classNames(\"\".concat(prefixCls, \"-icon\"), _defineProperty({}, icon.props.className, icon.props.className))\n      }) : React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-icon\")\n      }, icon)) || React.createElement(iconType, {\n        className: \"\".concat(prefixCls, \"-icon\")\n      });\n      return closed ? null : React.createElement(Animate, {\n        component: \"\",\n        showProp: \"data-show\",\n        transitionName: \"\".concat(prefixCls, \"-slide-up\"),\n        onEnd: _this.animationEnd\n      }, React.createElement(\"div\", _extends({\n        \"data-show\": !closing,\n        className: alertCls,\n        style: style\n      }, dataOrAriaProps), showIcon ? iconNode : null, React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-message\")\n      }, message), React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-description\")\n      }, description), closeIcon));\n    };\n\n    return _this;\n  }\n\n  _createClass(Alert, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderAlert);\n    }\n  }]);\n\n  return Alert;\n}(React.Component);\n\nexport { Alert as default };\nAlert.ErrorBoundary = ErrorBoundary;","map":{"version":3,"sources":["alert/index.jsx"],"names":["iconMapFilled","success","info","error","warning","ExclamationCircleFilled","iconMapOutlined","ExclamationCircleOutlined","Alert","React","Component","closing","closed","e","dom","ReactDOM","getPrefixCls","direction","description","customizePrefixCls","message","closeText","banner","className","style","icon","closable","type","showIcon","prefixCls","iconType","alertCls","classNames","closeIcon","dataOrAriaProps","getDataOrAriaProps","iconNode","animationEnd"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,QAAA,MAAA,WAAA;AACA,OAAA,aAAA,MAAA,iCAAA;AACA,OAAA,mBAAA,MAAA,uCAAA;AACA,OAAA,yBAAA,MAAA,6CAAA;AACA,OAAA,kBAAA,MAAA,sCAAA;AACA,OAAA,mBAAA,MAAA,uCAAA;AACA,OAAA,iBAAA,MAAA,qCAAA;AACA,OAAA,uBAAA,MAAA,2CAAA;AACA,OAAA,gBAAA,MAAA,oCAAA;AACA,OAAA,iBAAA,MAAA,qCAAA;AACA,OAAA,OAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,SAAA,cAAA,QAAA,oBAAA;AACA,OAAA,kBAAA,MAAA,6BAAA;AACA,OAAA,aAAA,MAAA,iBAAA;;AACA,SAAA,IAAA,GAAgB,CAAG;;AACnB,IAAMA,aAAa,GAAG;AAClBC,EAAAA,OAAO,EADW,iBAAA;AAElBC,EAAAA,IAAI,EAFc,gBAAA;AAGlBC,EAAAA,KAAK,EAHa,iBAAA;AAIlBC,EAAAA,OAAO,EAAEC;AAJS,CAAtB;AAMA,IAAMC,eAAe,GAAG;AACpBL,EAAAA,OAAO,EADa,mBAAA;AAEpBC,EAAAA,IAAI,EAFgB,kBAAA;AAGpBC,EAAAA,KAAK,EAHe,mBAAA;AAIpBC,EAAAA,OAAO,EAAEG;AAJW,CAAxB;;IAMqBC,K;;;;;AACjB,WAAA,KAAA,GAAc;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AACV,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;AACA,IAAA,KAAA,CAAA,KAAA,GAAa;AACTG,MAAAA,OAAO,EADE,KAAA;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;;AAIA,IAAA,KAAA,CAAA,WAAA,GAAmB,UAAA,CAAA,EAAO;AACtBC,MAAAA,CAAC,CAADA,cAAAA;AACA,UAAMC,GAAG,GAAGC,QAAQ,CAARA,WAAAA,CAAAA,sBAAAA,CAAZ,KAAYA,CAAAA,CAAZ;AACAD,MAAAA,GAAG,CAAHA,KAAAA,CAAAA,MAAAA,GAAAA,GAAAA,MAAAA,CAAsBA,GAAG,CAAzBA,YAAAA,EAHsB,IAGtBA,CAAAA,CAHsB,CAItB;AACA;;AACAA,MAAAA,GAAG,CAAHA,KAAAA,CAAAA,MAAAA,GAAAA,GAAAA,MAAAA,CAAsBA,GAAG,CAAzBA,YAAAA,EAAAA,IAAAA,CAAAA;;AACA,MAAA,KAAA,CAAA,QAAA,CAAc;AACVH,QAAAA,OAAO,EAAE;AADC,OAAd;;AAGA,OAAC,KAAA,CAAA,KAAA,CAAA,OAAA,IAAD,IAAA,EAAA,CAAA;AAVJ,KAAA;;AAYA,IAAA,KAAA,CAAA,YAAA,GAAoB,YAAM;AACtB,MAAA,KAAA,CAAA,QAAA,CAAc;AACVA,QAAAA,OAAO,EADG,KAAA;AAEVC,QAAAA,MAAM,EAAE;AAFE,OAAd;;AAIA,OAAC,KAAA,CAAA,KAAA,CAAA,UAAA,IAAD,IAAA;AALJ,KAAA;;AAOA,IAAA,KAAA,CAAA,WAAA,GAAmB,UAAA,IAAA,EAAiC;AAAA,UAAA,WAAA;;AAAA,UAA9BI,YAA8B,GAAA,IAAA,CAA9BA,YAA8B;AAAA,UAAhBC,SAAgB,GAAA,IAAA,CAAhBA,SAAgB;AAAA,UAAA,WAAA,GACiE,KAAA,CADjE,KAAA;AAAA,UACxCC,WADwC,GAAA,WAAA,CAAA,WAAA;AAAA,UAChBC,kBADgB,GAAA,WAAA,CAAA,SAAA;AAAA,UACIC,OADJ,GAAA,WAAA,CAAA,OAAA;AAAA,UACaC,SADb,GAAA,WAAA,CAAA,SAAA;AAAA,UACwBC,MADxB,GAAA,WAAA,CAAA,MAAA;AAAA,UAAA,qBAAA,GAAA,WAAA,CAAA,SAAA;AAAA,UACgCC,SADhC,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAAA,UACgDC,KADhD,GAAA,WAAA,CAAA,KAAA;AAAA,UACuDC,IADvD,GAAA,WAAA,CAAA,IAAA;AAAA,UAAA,YAAA,GAEb,KAAA,CAFa,KAAA;AAAA,UAE1CC,QAF0C,GAAA,YAAA,CAAA,QAAA;AAAA,UAEhCC,IAFgC,GAAA,YAAA,CAAA,IAAA;AAAA,UAE1BC,QAF0B,GAAA,YAAA,CAAA,QAAA;AAAA,UAAA,WAAA,GAGpB,KAAA,CAHoB,KAAA;AAAA,UAGxCjB,OAHwC,GAAA,WAAA,CAAA,OAAA;AAAA,UAG/BC,MAH+B,GAAA,WAAA,CAAA,MAAA;AAIhD,UAAMiB,SAAS,GAAGb,YAAY,CAAA,OAAA,EAJkB,kBAIlB,CAA9B,CAJgD,CAKhD;;AACAY,MAAAA,QAAQ,GAAGN,MAAM,IAAIM,QAAQ,KAAlBN,SAAAA,GAAAA,IAAAA,GANqC,QAMhDM,CANgD,CAOhD;;AACAD,MAAAA,IAAI,GAAGL,MAAM,IAAIK,IAAI,KAAdL,SAAAA,GAAAA,SAAAA,GAA2CK,IAAI,IARN,MAQhDA,CARgD,CAShD;;AACA,UAAMG,QAAQ,GAAG,CAACZ,WAAW,GAAA,eAAA,GAAZ,aAAA,EAAA,IAAA,KAV+B,IAUhD,CAVgD,CAWhD;;AACA,UAAA,SAAA,EAAe;AACXQ,QAAAA,QAAQ,GAARA,IAAAA;AACH;;AACD,UAAMK,QAAQ,GAAGC,UAAU,CAAA,SAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,CAAA,IAAA,CAAA,GAAA,WAAA,GAAA,EAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA,OAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,mBAAA,CAAA,EAEY,CAAC,CAFb,WAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAGG,CAHH,QAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,SAAA,CAAA,EAIE,CAAC,CAJH,MAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,WAAA,CAAA,EAAA,QAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,MAAA,CAAA,EAMDf,SAAS,KANR,KAAA,CAAA,EAAA,WAAA,GAA3B,SAA2B,CAA3B;AAQA,UAAMgB,SAAS,GAAGP,QAAQ,GAAI,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,QAAA,IAAI,EAAZ,QAAA;AAAsB,QAAA,OAAO,EAAE,KAAA,CAA/B,WAAA;AAAiD,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAA1D,aAA0D,CAA1D;AAAuF,QAAA,QAAQ,EAAE;AAAjG,OAAA,EACjCL,SAAS,GAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,aAAA;AAAf,OAAA,EAAJ,SAAI,CAAJ,GAAuE,KAAA,CAAA,aAAA,CAAA,aAAA,EADnD,IACmD,CAD/C,CAAJ,GAA1B,IAAA;AAGA,UAAMa,eAAe,GAAGC,kBAAkB,CAAC,KAAA,CAA3C,KAA0C,CAA1C;AACA,UAAMC,QAAQ,GAAIX,IAAI,KACjB,KAAK,CAAL,cAAA,CAAA,IAAA,IAA8B,KAAK,CAAL,YAAA,CAAA,IAAA,EAAyB;AACpDF,QAAAA,SAAS,EAAES,UAAU,CAAA,GAAA,MAAA,CAAA,SAAA,EAAA,OAAA,CAAA,EAAA,eAAA,CAAA,EAAA,EAChBP,IAAI,CAAJA,KAAAA,CADgB,SAAA,EACOA,IAAI,CAAJA,KAAAA,CADP,SAAA,CAAA;AAD+B,OAAzB,CAA9B,GAIM,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,OAAA;AAAf,OAAA,EALM,IAKN,CALW,CAAJA,IAMd,KAAK,CAAL,aAAA,CAAA,QAAA,EAA8B;AAAEF,QAAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,OAAA;AAAX,OAA9B,CANJ;AAOA,aAAOX,MAAM,GAAA,IAAA,GAAW,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAS,QAAA,SAAS,EAAlB,EAAA;AAAsB,QAAA,QAAQ,EAA9B,WAAA;AAA2C,QAAA,cAAc,EAAA,GAAA,MAAA,CAAA,SAAA,EAAzD,WAAyD,CAAzD;AAAoF,QAAA,KAAK,EAAE,KAAA,CAAKyB;AAAhG,OAAA,EAC5B,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,qBAAW,CAAhB,OAAA;AAA0B,QAAA,SAAS,EAAnC,QAAA;AAA+C,QAAA,KAAK,EAAEb;AAAtD,OAAA,EAAA,eAAA,CAAA,EACGI,QAAQ,GAAA,QAAA,GADX,IAAA,EAEE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA;AAAf,OAAA,EAFF,OAEE,CAFF,EAGE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,cAAA;AAAf,OAAA,EAHF,WAGE,CAHF,EADI,SACJ,CAD4B,CAAxB;AAlCJ,KAAA;;AAzBU,WAAA,KAAA;AAoEb;;;;6BACQ;AACL,aAAO,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,EAAiB,KAAxB,WAAO,CAAP;AACH;;;;EAxE8BnB,KAAK,CAACC,S;;SAApBF,K;AA0ErBA,KAAK,CAALA,aAAAA,GAAAA,aAAAA","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport CheckCircleOutlined from '@ant-design/icons/CheckCircleOutlined';\nimport ExclamationCircleOutlined from '@ant-design/icons/ExclamationCircleOutlined';\nimport InfoCircleOutlined from '@ant-design/icons/InfoCircleOutlined';\nimport CloseCircleOutlined from '@ant-design/icons/CloseCircleOutlined';\nimport CheckCircleFilled from '@ant-design/icons/CheckCircleFilled';\nimport ExclamationCircleFilled from '@ant-design/icons/ExclamationCircleFilled';\nimport InfoCircleFilled from '@ant-design/icons/InfoCircleFilled';\nimport CloseCircleFilled from '@ant-design/icons/CloseCircleFilled';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport getDataOrAriaProps from '../_util/getDataOrAriaProps';\nimport ErrorBoundary from './ErrorBoundary';\nfunction noop() { }\nconst iconMapFilled = {\n    success: CheckCircleFilled,\n    info: InfoCircleFilled,\n    error: CloseCircleFilled,\n    warning: ExclamationCircleFilled,\n};\nconst iconMapOutlined = {\n    success: CheckCircleOutlined,\n    info: InfoCircleOutlined,\n    error: CloseCircleOutlined,\n    warning: ExclamationCircleOutlined,\n};\nexport default class Alert extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            closing: false,\n            closed: false,\n        };\n        this.handleClose = (e) => {\n            e.preventDefault();\n            const dom = ReactDOM.findDOMNode(this);\n            dom.style.height = `${dom.offsetHeight}px`;\n            // Magic code\n            // 重复一次后才能正确设置 height\n            dom.style.height = `${dom.offsetHeight}px`;\n            this.setState({\n                closing: true,\n            });\n            (this.props.onClose || noop)(e);\n        };\n        this.animationEnd = () => {\n            this.setState({\n                closing: false,\n                closed: true,\n            });\n            (this.props.afterClose || noop)();\n        };\n        this.renderAlert = ({ getPrefixCls, direction }) => {\n            const { description, prefixCls: customizePrefixCls, message, closeText, banner, className = '', style, icon, } = this.props;\n            let { closable, type, showIcon } = this.props;\n            const { closing, closed } = this.state;\n            const prefixCls = getPrefixCls('alert', customizePrefixCls);\n            // banner模式默认有 Icon\n            showIcon = banner && showIcon === undefined ? true : showIcon;\n            // banner模式默认为警告\n            type = banner && type === undefined ? 'warning' : type || 'info';\n            // use outline icon in alert with description\n            const iconType = (description ? iconMapOutlined : iconMapFilled)[type] || null;\n            // closeable when closeText is assigned\n            if (closeText) {\n                closable = true;\n            }\n            const alertCls = classNames(prefixCls, `${prefixCls}-${type}`, {\n                [`${prefixCls}-closing`]: closing,\n                [`${prefixCls}-with-description`]: !!description,\n                [`${prefixCls}-no-icon`]: !showIcon,\n                [`${prefixCls}-banner`]: !!banner,\n                [`${prefixCls}-closable`]: closable,\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            }, className);\n            const closeIcon = closable ? (<button type=\"button\" onClick={this.handleClose} className={`${prefixCls}-close-icon`} tabIndex={0}>\n        {closeText ? (<span className={`${prefixCls}-close-text`}>{closeText}</span>) : (<CloseOutlined />)}\n      </button>) : null;\n            const dataOrAriaProps = getDataOrAriaProps(this.props);\n            const iconNode = (icon &&\n                (React.isValidElement(icon) ? (React.cloneElement(icon, {\n                    className: classNames(`${prefixCls}-icon`, {\n                        [icon.props.className]: icon.props.className,\n                    }),\n                })) : (<span className={`${prefixCls}-icon`}>{icon}</span>))) ||\n                React.createElement(iconType, { className: `${prefixCls}-icon` });\n            return closed ? null : (<Animate component=\"\" showProp=\"data-show\" transitionName={`${prefixCls}-slide-up`} onEnd={this.animationEnd}>\n        <div data-show={!closing} className={alertCls} style={style} {...dataOrAriaProps}>\n          {showIcon ? iconNode : null}\n          <span className={`${prefixCls}-message`}>{message}</span>\n          <span className={`${prefixCls}-description`}>{description}</span>\n          {closeIcon}\n        </div>\n      </Animate>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderAlert}</ConfigConsumer>;\n    }\n}\nAlert.ErrorBoundary = ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}