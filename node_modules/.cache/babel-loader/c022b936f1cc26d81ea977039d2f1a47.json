{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport TransitionEvents from \"css-animation/es/Event\";\nimport raf from './raf';\nimport { ConfigConsumer } from '../config-provider';\nvar styleForPesudo; // Where el is the DOM element you'd like to test for visibility\n\nfunction isHidden(element) {\n  if (process.env.NODE_ENV === 'test') {\n    return false;\n  }\n\n  return !element || element.offsetParent === null;\n}\n\nfunction isNotGrey(color) {\n  // eslint-disable-next-line no-useless-escape\n  var match = (color || '').match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n\n  if (match && match[1] && match[2] && match[3]) {\n    return !(match[1] === match[2] && match[2] === match[3]);\n  }\n\n  return true;\n}\n\nvar Wave =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Wave, _React$Component);\n\n  function Wave() {\n    var _this;\n\n    _classCallCheck(this, Wave);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wave).apply(this, arguments));\n    _this.animationStart = false;\n    _this.destroy = false;\n\n    _this.onClick = function (node, waveColor) {\n      if (!node || isHidden(node) || node.className.indexOf('-leave') >= 0) {\n        return;\n      }\n\n      var insertExtraNode = _this.props.insertExtraNode;\n      _this.extraNode = document.createElement('div');\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          extraNode = _assertThisInitialize.extraNode;\n\n      extraNode.className = 'ant-click-animating-node';\n\n      var attributeName = _this.getAttributeName();\n\n      node.setAttribute(attributeName, 'true'); // Not white or transparnt or grey\n\n      styleForPesudo = styleForPesudo || document.createElement('style');\n\n      if (waveColor && waveColor !== '#ffffff' && waveColor !== 'rgb(255, 255, 255)' && isNotGrey(waveColor) && !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(waveColor) && // any transparent rgba color\n      waveColor !== 'transparent') {\n        // Add nonce if CSP exist\n        if (_this.csp && _this.csp.nonce) {\n          styleForPesudo.nonce = _this.csp.nonce;\n        }\n\n        extraNode.style.borderColor = waveColor;\n        styleForPesudo.innerHTML = \"\\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\\n        --antd-wave-shadow-color: \".concat(waveColor, \";\\n      }\");\n\n        if (!document.body.contains(styleForPesudo)) {\n          document.body.appendChild(styleForPesudo);\n        }\n      }\n\n      if (insertExtraNode) {\n        node.appendChild(extraNode);\n      }\n\n      TransitionEvents.addStartEventListener(node, _this.onTransitionStart);\n      TransitionEvents.addEndEventListener(node, _this.onTransitionEnd);\n    };\n\n    _this.onTransitionStart = function (e) {\n      if (_this.destroy) return;\n      var node = findDOMNode(_assertThisInitialized(_this));\n\n      if (!e || e.target !== node) {\n        return;\n      }\n\n      if (!_this.animationStart) {\n        _this.resetEffect(node);\n      }\n    };\n\n    _this.onTransitionEnd = function (e) {\n      if (!e || e.animationName !== 'fadeEffect') {\n        return;\n      }\n\n      _this.resetEffect(e.target);\n    };\n\n    _this.bindAnimationEvent = function (node) {\n      if (!node || !node.getAttribute || node.getAttribute('disabled') || node.className.indexOf('disabled') >= 0) {\n        return;\n      }\n\n      var onClick = function onClick(e) {\n        // Fix radio button click twice\n        if (e.target.tagName === 'INPUT' || isHidden(e.target)) {\n          return;\n        }\n\n        _this.resetEffect(node); // Get wave color from target\n\n\n        var waveColor = getComputedStyle(node).getPropertyValue('border-top-color') || // Firefox Compatible\n        getComputedStyle(node).getPropertyValue('border-color') || getComputedStyle(node).getPropertyValue('background-color');\n        _this.clickWaveTimeoutId = window.setTimeout(function () {\n          return _this.onClick(node, waveColor);\n        }, 0);\n        raf.cancel(_this.animationStartId);\n        _this.animationStart = true; // Render to trigger transition event cost 3 frames. Let's delay 10 frames to reset this.\n\n        _this.animationStartId = raf(function () {\n          _this.animationStart = false;\n        }, 10);\n      };\n\n      node.addEventListener('click', onClick, true);\n      return {\n        cancel: function cancel() {\n          node.removeEventListener('click', onClick, true);\n        }\n      };\n    };\n\n    _this.renderWave = function (_ref) {\n      var csp = _ref.csp;\n      var children = _this.props.children;\n      _this.csp = csp;\n      return children;\n    };\n\n    return _this;\n  }\n\n  _createClass(Wave, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var node = findDOMNode(this);\n\n      if (!node || node.nodeType !== 1) {\n        return;\n      }\n\n      this.instance = this.bindAnimationEvent(node);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.instance) {\n        this.instance.cancel();\n      }\n\n      if (this.clickWaveTimeoutId) {\n        clearTimeout(this.clickWaveTimeoutId);\n      }\n\n      this.destroy = true;\n    }\n  }, {\n    key: \"getAttributeName\",\n    value: function getAttributeName() {\n      var insertExtraNode = this.props.insertExtraNode;\n      return insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n    }\n  }, {\n    key: \"resetEffect\",\n    value: function resetEffect(node) {\n      if (!node || node === this.extraNode || !(node instanceof Element)) {\n        return;\n      }\n\n      var insertExtraNode = this.props.insertExtraNode;\n      var attributeName = this.getAttributeName();\n      node.setAttribute(attributeName, 'false'); // edge has bug on `removeAttribute` #14466\n\n      if (styleForPesudo) {\n        styleForPesudo.innerHTML = '';\n      }\n\n      if (insertExtraNode && this.extraNode && node.contains(this.extraNode)) {\n        node.removeChild(this.extraNode);\n      }\n\n      TransitionEvents.removeStartEventListener(node, this.onTransitionStart);\n      TransitionEvents.removeEndEventListener(node, this.onTransitionEnd);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderWave);\n    }\n  }]);\n\n  return Wave;\n}(React.Component);\n\nexport { Wave as default };","map":{"version":3,"sources":["_util/wave.jsx"],"names":["process","element","match","color","Wave","React","Component","isHidden","node","insertExtraNode","document","extraNode","attributeName","styleForPesudo","waveColor","isNotGrey","TransitionEvents","findDOMNode","e","onClick","getComputedStyle","raf","cancel","csp","children","clearTimeout"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport TransitionEvents from 'css-animation/lib/Event';\nimport raf from './raf';\nimport { ConfigConsumer } from '../config-provider';\nlet styleForPesudo;\n// Where el is the DOM element you'd like to test for visibility\nfunction isHidden(element) {\n    if (process.env.NODE_ENV === 'test') {\n        return false;\n    }\n    return !element || element.offsetParent === null;\n}\nfunction isNotGrey(color) {\n    // eslint-disable-next-line no-useless-escape\n    const match = (color || '').match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\.\\d]*)?\\)/);\n    if (match && match[1] && match[2] && match[3]) {\n        return !(match[1] === match[2] && match[2] === match[3]);\n    }\n    return true;\n}\nexport default class Wave extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.animationStart = false;\n        this.destroy = false;\n        this.onClick = (node, waveColor) => {\n            if (!node || isHidden(node) || node.className.indexOf('-leave') >= 0) {\n                return;\n            }\n            const { insertExtraNode } = this.props;\n            this.extraNode = document.createElement('div');\n            const { extraNode } = this;\n            extraNode.className = 'ant-click-animating-node';\n            const attributeName = this.getAttributeName();\n            node.setAttribute(attributeName, 'true');\n            // Not white or transparnt or grey\n            styleForPesudo = styleForPesudo || document.createElement('style');\n            if (waveColor &&\n                waveColor !== '#ffffff' &&\n                waveColor !== 'rgb(255, 255, 255)' &&\n                isNotGrey(waveColor) &&\n                !/rgba\\(\\d*, \\d*, \\d*, 0\\)/.test(waveColor) && // any transparent rgba color\n                waveColor !== 'transparent') {\n                // Add nonce if CSP exist\n                if (this.csp && this.csp.nonce) {\n                    styleForPesudo.nonce = this.csp.nonce;\n                }\n                extraNode.style.borderColor = waveColor;\n                styleForPesudo.innerHTML = `\n      [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n        --antd-wave-shadow-color: ${waveColor};\n      }`;\n                if (!document.body.contains(styleForPesudo)) {\n                    document.body.appendChild(styleForPesudo);\n                }\n            }\n            if (insertExtraNode) {\n                node.appendChild(extraNode);\n            }\n            TransitionEvents.addStartEventListener(node, this.onTransitionStart);\n            TransitionEvents.addEndEventListener(node, this.onTransitionEnd);\n        };\n        this.onTransitionStart = (e) => {\n            if (this.destroy)\n                return;\n            const node = findDOMNode(this);\n            if (!e || e.target !== node) {\n                return;\n            }\n            if (!this.animationStart) {\n                this.resetEffect(node);\n            }\n        };\n        this.onTransitionEnd = (e) => {\n            if (!e || e.animationName !== 'fadeEffect') {\n                return;\n            }\n            this.resetEffect(e.target);\n        };\n        this.bindAnimationEvent = (node) => {\n            if (!node ||\n                !node.getAttribute ||\n                node.getAttribute('disabled') ||\n                node.className.indexOf('disabled') >= 0) {\n                return;\n            }\n            const onClick = (e) => {\n                // Fix radio button click twice\n                if (e.target.tagName === 'INPUT' || isHidden(e.target)) {\n                    return;\n                }\n                this.resetEffect(node);\n                // Get wave color from target\n                const waveColor = getComputedStyle(node).getPropertyValue('border-top-color') || // Firefox Compatible\n                    getComputedStyle(node).getPropertyValue('border-color') ||\n                    getComputedStyle(node).getPropertyValue('background-color');\n                this.clickWaveTimeoutId = window.setTimeout(() => this.onClick(node, waveColor), 0);\n                raf.cancel(this.animationStartId);\n                this.animationStart = true;\n                // Render to trigger transition event cost 3 frames. Let's delay 10 frames to reset this.\n                this.animationStartId = raf(() => {\n                    this.animationStart = false;\n                }, 10);\n            };\n            node.addEventListener('click', onClick, true);\n            return {\n                cancel: () => {\n                    node.removeEventListener('click', onClick, true);\n                },\n            };\n        };\n        this.renderWave = ({ csp }) => {\n            const { children } = this.props;\n            this.csp = csp;\n            return children;\n        };\n    }\n    componentDidMount() {\n        const node = findDOMNode(this);\n        if (!node || node.nodeType !== 1) {\n            return;\n        }\n        this.instance = this.bindAnimationEvent(node);\n    }\n    componentWillUnmount() {\n        if (this.instance) {\n            this.instance.cancel();\n        }\n        if (this.clickWaveTimeoutId) {\n            clearTimeout(this.clickWaveTimeoutId);\n        }\n        this.destroy = true;\n    }\n    getAttributeName() {\n        const { insertExtraNode } = this.props;\n        return insertExtraNode ? 'ant-click-animating' : 'ant-click-animating-without-extra-node';\n    }\n    resetEffect(node) {\n        if (!node || node === this.extraNode || !(node instanceof Element)) {\n            return;\n        }\n        const { insertExtraNode } = this.props;\n        const attributeName = this.getAttributeName();\n        node.setAttribute(attributeName, 'false'); // edge has bug on `removeAttribute` #14466\n        if (styleForPesudo) {\n            styleForPesudo.innerHTML = '';\n        }\n        if (insertExtraNode && this.extraNode && node.contains(this.extraNode)) {\n            node.removeChild(this.extraNode);\n        }\n        TransitionEvents.removeStartEventListener(node, this.onTransitionStart);\n        TransitionEvents.removeEndEventListener(node, this.onTransitionEnd);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderWave}</ConfigConsumer>;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}