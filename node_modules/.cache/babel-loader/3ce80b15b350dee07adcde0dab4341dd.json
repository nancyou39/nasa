{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport RcCollapse from 'rc-collapse';\nimport classNames from 'classnames';\nimport RightOutlined from '@ant-design/icons/RightOutlined';\nimport CollapsePanel from './CollapsePanel';\nimport { ConfigConsumer } from '../config-provider';\nimport animation from '../_util/openAnimation';\n\nvar Collapse =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Collapse, _React$Component);\n\n  function Collapse() {\n    var _this;\n\n    _classCallCheck(this, Collapse);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collapse).apply(this, arguments));\n\n    _this.renderExpandIcon = function () {\n      var panelProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var prefixCls = arguments.length > 1 ? arguments[1] : undefined;\n      var expandIcon = _this.props.expandIcon;\n      var icon = expandIcon ? expandIcon(panelProps) : React.createElement(RightOutlined, {\n        rotate: panelProps.isActive ? 90 : undefined\n      });\n      return React.isValidElement(icon) ? React.cloneElement(icon, {\n        className: classNames(icon.props.className, \"\".concat(prefixCls, \"-arrow\"))\n      }) : icon;\n    };\n\n    _this.renderCollapse = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          _this$props$className = _this$props.className,\n          className = _this$props$className === void 0 ? '' : _this$props$className,\n          bordered = _this$props.bordered,\n          expandIconPosition = _this$props.expandIconPosition;\n      var prefixCls = getPrefixCls('collapse', customizePrefixCls);\n      var collapseClassName = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-borderless\"), !bordered), _defineProperty(_classNames, \"\".concat(prefixCls, \"-icon-position-\").concat(expandIconPosition), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n      return React.createElement(RcCollapse, _extends({}, _this.props, {\n        expandIcon: function expandIcon(panelProps) {\n          return _this.renderExpandIcon(panelProps, prefixCls);\n        },\n        prefixCls: prefixCls,\n        className: collapseClassName\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(Collapse, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderCollapse);\n    }\n  }]);\n\n  return Collapse;\n}(React.Component);\n\nexport { Collapse as default };\nCollapse.Panel = CollapsePanel;\nCollapse.defaultProps = {\n  bordered: true,\n  openAnimation: _extends(_extends({}, animation), {\n    appear: function appear() {}\n  }),\n  expandIconPosition: 'left'\n};","map":{"version":3,"sources":["collapse/Collapse.jsx"],"names":["Collapse","React","Component","panelProps","prefixCls","expandIcon","icon","undefined","className","classNames","getPrefixCls","direction","customizePrefixCls","bordered","expandIconPosition","collapseClassName","openAnimation","appear"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcCollapse from 'rc-collapse';\nimport classNames from 'classnames';\nimport RightOutlined from '@ant-design/icons/RightOutlined';\nimport CollapsePanel from './CollapsePanel';\nimport { ConfigConsumer } from '../config-provider';\nimport animation from '../_util/openAnimation';\nexport default class Collapse extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderExpandIcon = (panelProps = {}, prefixCls) => {\n            const { expandIcon } = this.props;\n            const icon = (expandIcon ? (expandIcon(panelProps)) : (<RightOutlined rotate={panelProps.isActive ? 90 : undefined}/>));\n            return React.isValidElement(icon)\n                ? React.cloneElement(icon, {\n                    className: classNames(icon.props.className, `${prefixCls}-arrow`),\n                })\n                : icon;\n        };\n        this.renderCollapse = ({ getPrefixCls, direction }) => {\n            const { prefixCls: customizePrefixCls, className = '', bordered, expandIconPosition, } = this.props;\n            const prefixCls = getPrefixCls('collapse', customizePrefixCls);\n            const collapseClassName = classNames({\n                [`${prefixCls}-borderless`]: !bordered,\n                [`${prefixCls}-icon-position-${expandIconPosition}`]: true,\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            }, className);\n            return (<RcCollapse {...this.props} expandIcon={(panelProps) => this.renderExpandIcon(panelProps, prefixCls)} prefixCls={prefixCls} className={collapseClassName}/>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderCollapse}</ConfigConsumer>;\n    }\n}\nCollapse.Panel = CollapsePanel;\nCollapse.defaultProps = {\n    bordered: true,\n    openAnimation: Object.assign(Object.assign({}, animation), { appear() { } }),\n    expandIconPosition: 'left',\n};\n"]},"metadata":{},"sourceType":"module"}