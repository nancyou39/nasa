{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\n\nfunction getNumberArray(num) {\n  return num ? num.toString().split('').reverse().map(function (i) {\n    var current = Number(i);\n    return isNaN(current) ? i : current;\n  }) : [];\n}\n\nfunction renderNumberList(position, className) {\n  var childrenToReturn = [];\n\n  for (var i = 0; i < 30; i++) {\n    childrenToReturn.push(React.createElement(\"p\", {\n      key: i.toString(),\n      className: classNames(className, {\n        current: position === i\n      })\n    }, i % 10));\n  }\n\n  return childrenToReturn;\n}\n\nvar ScrollNumber =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ScrollNumber, _React$Component);\n\n  function ScrollNumber(props) {\n    var _this;\n\n    _classCallCheck(this, ScrollNumber);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollNumber).call(this, props));\n\n    _this.onAnimated = function () {\n      var onAnimated = _this.props.onAnimated;\n\n      if (onAnimated) {\n        onAnimated();\n      }\n    };\n\n    _this.renderScrollNumber = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          className = _this$props.className,\n          style = _this$props.style,\n          title = _this$props.title,\n          _this$props$component = _this$props.component,\n          component = _this$props$component === void 0 ? 'sup' : _this$props$component,\n          displayComponent = _this$props.displayComponent; // fix https://fb.me/react-unknown-prop\n\n      var restProps = omit(_this.props, ['count', 'onAnimated', 'component', 'prefixCls', 'displayComponent']);\n      var prefixCls = getPrefixCls('scroll-number', customizePrefixCls);\n\n      var newProps = _extends(_extends({}, restProps), {\n        className: classNames(prefixCls, className),\n        title: title\n      }); // allow specify the border\n      // mock border-color by box-shadow for compatible with old usage:\n      // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n\n\n      if (style && style.borderColor) {\n        newProps.style = _extends(_extends({}, style), {\n          boxShadow: \"0 0 0 1px \".concat(style.borderColor, \" inset\")\n        });\n      }\n\n      if (displayComponent) {\n        return React.cloneElement(displayComponent, {\n          className: classNames(\"\".concat(prefixCls, \"-custom-component\"), displayComponent.props && displayComponent.props.className)\n        });\n      }\n\n      return React.createElement(component, newProps, _this.renderNumberElement(prefixCls));\n    };\n\n    _this.state = {\n      animateStarted: true,\n      count: props.count\n    };\n    return _this;\n  }\n\n  _createClass(ScrollNumber, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_, prevState) {\n      var _this2 = this;\n\n      this.lastCount = prevState.count;\n      var animateStarted = this.state.animateStarted;\n\n      if (animateStarted) {\n        this.clearTimeout(); // Let browser has time to reset the scroller before actually\n        // performing the transition.\n\n        this.timeout = setTimeout(function () {\n          // eslint-disable-next-line react/no-did-update-set-state\n          _this2.setState(function (__, props) {\n            return {\n              animateStarted: false,\n              count: props.count\n            };\n          }, _this2.onAnimated);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearTimeout();\n    }\n  }, {\n    key: \"getPositionByNum\",\n    value: function getPositionByNum(num, i) {\n      var count = this.state.count;\n      var currentCount = Math.abs(Number(count));\n      var lastCount = Math.abs(Number(this.lastCount));\n      var currentDigit = Math.abs(getNumberArray(this.state.count)[i]);\n      var lastDigit = Math.abs(getNumberArray(this.lastCount)[i]);\n\n      if (this.state.animateStarted) {\n        return 10 + num;\n      } // 同方向则在同一侧切换数字\n\n\n      if (currentCount > lastCount) {\n        if (currentDigit >= lastDigit) {\n          return 10 + num;\n        }\n\n        return 20 + num;\n      }\n\n      if (currentDigit <= lastDigit) {\n        return 10 + num;\n      }\n\n      return num;\n    }\n  }, {\n    key: \"renderCurrentNumber\",\n    value: function renderCurrentNumber(prefixCls, num, i) {\n      if (typeof num === 'number') {\n        var position = this.getPositionByNum(num, i);\n        var removeTransition = this.state.animateStarted || getNumberArray(this.lastCount)[i] === undefined;\n        return React.createElement('span', {\n          className: \"\".concat(prefixCls, \"-only\"),\n          style: {\n            transition: removeTransition ? 'none' : undefined,\n            msTransform: \"translateY(\".concat(-position * 100, \"%)\"),\n            WebkitTransform: \"translateY(\".concat(-position * 100, \"%)\"),\n            transform: \"translateY(\".concat(-position * 100, \"%)\")\n          },\n          key: i\n        }, renderNumberList(position, \"\".concat(prefixCls, \"-only-unit\")));\n      }\n\n      return React.createElement(\"span\", {\n        key: \"symbol\",\n        className: \"\".concat(prefixCls, \"-symbol\")\n      }, num);\n    }\n  }, {\n    key: \"renderNumberElement\",\n    value: function renderNumberElement(prefixCls) {\n      var _this3 = this;\n\n      var count = this.state.count;\n\n      if (count && Number(count) % 1 === 0) {\n        return getNumberArray(count).map(function (num, i) {\n          return _this3.renderCurrentNumber(prefixCls, num, i);\n        }).reverse();\n      }\n\n      return count;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderScrollNumber);\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function () {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = undefined;\n      }\n    })\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, nextState) {\n      if ('count' in nextProps) {\n        if (nextState.count === nextProps.count) {\n          return null;\n        }\n\n        return {\n          animateStarted: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ScrollNumber;\n}(React.Component);\n\nScrollNumber.defaultProps = {\n  count: null,\n  onAnimated: function onAnimated() {}\n};\nexport default ScrollNumber;","map":{"version":3,"sources":["badge/ScrollNumber.jsx"],"names":["num","current","Number","isNaN","childrenToReturn","i","classNames","position","ScrollNumber","React","Component","onAnimated","getPrefixCls","customizePrefixCls","className","style","title","component","displayComponent","restProps","omit","prefixCls","newProps","boxShadow","animateStarted","count","props","nextProps","nextState","_","prevState","setTimeout","currentCount","Math","lastCount","currentDigit","getNumberArray","lastDigit","removeTransition","transition","msTransform","WebkitTransform","transform","key","renderNumberList","clearTimeout"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nfunction getNumberArray(num) {\n    return num\n        ? num\n            .toString()\n            .split('')\n            .reverse()\n            .map(i => {\n            const current = Number(i);\n            return isNaN(current) ? i : current;\n        })\n        : [];\n}\nfunction renderNumberList(position, className) {\n    const childrenToReturn = [];\n    for (let i = 0; i < 30; i++) {\n        childrenToReturn.push(<p key={i.toString()} className={classNames(className, {\n            current: position === i,\n        })}>\n        {i % 10}\n      </p>);\n    }\n    return childrenToReturn;\n}\nclass ScrollNumber extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onAnimated = () => {\n            const { onAnimated } = this.props;\n            if (onAnimated) {\n                onAnimated();\n            }\n        };\n        this.renderScrollNumber = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className, style, title, component = 'sup', displayComponent, } = this.props;\n            // fix https://fb.me/react-unknown-prop\n            const restProps = omit(this.props, [\n                'count',\n                'onAnimated',\n                'component',\n                'prefixCls',\n                'displayComponent',\n            ]);\n            const prefixCls = getPrefixCls('scroll-number', customizePrefixCls);\n            const newProps = Object.assign(Object.assign({}, restProps), { className: classNames(prefixCls, className), title: title });\n            // allow specify the border\n            // mock border-color by box-shadow for compatible with old usage:\n            // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n            if (style && style.borderColor) {\n                newProps.style = Object.assign(Object.assign({}, style), { boxShadow: `0 0 0 1px ${style.borderColor} inset` });\n            }\n            if (displayComponent) {\n                return React.cloneElement(displayComponent, {\n                    className: classNames(`${prefixCls}-custom-component`, displayComponent.props && displayComponent.props.className),\n                });\n            }\n            return React.createElement(component, newProps, this.renderNumberElement(prefixCls));\n        };\n        this.state = {\n            animateStarted: true,\n            count: props.count,\n        };\n    }\n    static getDerivedStateFromProps(nextProps, nextState) {\n        if ('count' in nextProps) {\n            if (nextState.count === nextProps.count) {\n                return null;\n            }\n            return {\n                animateStarted: true,\n            };\n        }\n        return null;\n    }\n    componentDidUpdate(_, prevState) {\n        this.lastCount = prevState.count;\n        const { animateStarted } = this.state;\n        if (animateStarted) {\n            this.clearTimeout();\n            // Let browser has time to reset the scroller before actually\n            // performing the transition.\n            this.timeout = setTimeout(() => {\n                // eslint-disable-next-line react/no-did-update-set-state\n                this.setState((__, props) => ({\n                    animateStarted: false,\n                    count: props.count,\n                }), this.onAnimated);\n            });\n        }\n    }\n    componentWillUnmount() {\n        this.clearTimeout();\n    }\n    getPositionByNum(num, i) {\n        const { count } = this.state;\n        const currentCount = Math.abs(Number(count));\n        const lastCount = Math.abs(Number(this.lastCount));\n        const currentDigit = Math.abs(getNumberArray(this.state.count)[i]);\n        const lastDigit = Math.abs(getNumberArray(this.lastCount)[i]);\n        if (this.state.animateStarted) {\n            return 10 + num;\n        }\n        // 同方向则在同一侧切换数字\n        if (currentCount > lastCount) {\n            if (currentDigit >= lastDigit) {\n                return 10 + num;\n            }\n            return 20 + num;\n        }\n        if (currentDigit <= lastDigit) {\n            return 10 + num;\n        }\n        return num;\n    }\n    renderCurrentNumber(prefixCls, num, i) {\n        if (typeof num === 'number') {\n            const position = this.getPositionByNum(num, i);\n            const removeTransition = this.state.animateStarted || getNumberArray(this.lastCount)[i] === undefined;\n            return React.createElement('span', {\n                className: `${prefixCls}-only`,\n                style: {\n                    transition: removeTransition ? 'none' : undefined,\n                    msTransform: `translateY(${-position * 100}%)`,\n                    WebkitTransform: `translateY(${-position * 100}%)`,\n                    transform: `translateY(${-position * 100}%)`,\n                },\n                key: i,\n            }, renderNumberList(position, `${prefixCls}-only-unit`));\n        }\n        return (<span key=\"symbol\" className={`${prefixCls}-symbol`}>\n        {num}\n      </span>);\n    }\n    renderNumberElement(prefixCls) {\n        const { count } = this.state;\n        if (count && Number(count) % 1 === 0) {\n            return getNumberArray(count)\n                .map((num, i) => this.renderCurrentNumber(prefixCls, num, i))\n                .reverse();\n        }\n        return count;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderScrollNumber}</ConfigConsumer>;\n    }\n    clearTimeout() {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            this.timeout = undefined;\n        }\n    }\n}\nScrollNumber.defaultProps = {\n    count: null,\n    onAnimated() { },\n};\nexport default ScrollNumber;\n"]},"metadata":{},"sourceType":"module"}