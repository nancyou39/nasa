{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport { tuple } from '../_util/type';\nimport ListItem from './ListItem';\nexport var OmitProps = tuple('handleFilter', 'handleClear', 'checkedKeys');\n\nvar ListBody =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ListBody, _React$Component);\n\n  function ListBody() {\n    var _this;\n\n    _classCallCheck(this, ListBody);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListBody).apply(this, arguments));\n\n    _this.onItemSelect = function (item) {\n      var _this$props = _this.props,\n          onItemSelect = _this$props.onItemSelect,\n          selectedKeys = _this$props.selectedKeys;\n      var checked = selectedKeys.indexOf(item.key) >= 0;\n      onItemSelect(item.key, !checked);\n    };\n\n    return _this;\n  }\n\n  _createClass(ListBody, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          onScroll = _this$props2.onScroll,\n          filteredRenderItems = _this$props2.filteredRenderItems,\n          selectedKeys = _this$props2.selectedKeys,\n          globalDisabled = _this$props2.disabled;\n      return React.createElement(\"ul\", {\n        className: \"\".concat(prefixCls, \"-content\"),\n        onScroll: onScroll\n      }, filteredRenderItems.map(function (_ref) {\n        var renderedEl = _ref.renderedEl,\n            renderedText = _ref.renderedText,\n            item = _ref.item;\n        var disabled = item.disabled;\n        var checked = selectedKeys.indexOf(item.key) >= 0;\n        return React.createElement(ListItem, {\n          disabled: globalDisabled || disabled,\n          key: item.key,\n          item: item,\n          renderedText: renderedText,\n          renderedEl: renderedEl,\n          checked: checked,\n          prefixCls: prefixCls,\n          onClick: _this2.onItemSelect\n        });\n      }));\n    }\n  }]);\n\n  return ListBody;\n}(React.Component);\n\nvar ListBodyWrapper = function ListBodyWrapper(props) {\n  return React.createElement(ListBody, props);\n};\n\nexport default ListBodyWrapper;","map":{"version":3,"sources":["transfer/renderListBody.jsx"],"names":["OmitProps","tuple","ListBody","React","Component","onItemSelect","selectedKeys","checked","item","prefixCls","onScroll","filteredRenderItems","globalDisabled","renderedEl","renderedText","disabled","ListBodyWrapper"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,KAAA,QAAA,eAAA;AACA,OAAA,QAAA,MAAA,YAAA;AACA,OAAO,IAAMA,SAAS,GAAGC,KAAK,CAAA,cAAA,EAAA,aAAA,EAAvB,aAAuB,CAAvB;;IACDC,Q;;;;;AACF,WAAA,QAAA,GAAc;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA;;AACV,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,QAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;AACA,IAAA,KAAA,CAAA,YAAA,GAAoB,UAAA,IAAA,EAAU;AAAA,UAAA,WAAA,GACa,KAAA,CADb,KAAA;AAAA,UAClBG,YADkB,GAAA,WAAA,CAAA,YAAA;AAAA,UACJC,YADI,GAAA,WAAA,CAAA,YAAA;AAE1B,UAAMC,OAAO,GAAGD,YAAY,CAAZA,OAAAA,CAAqBE,IAAI,CAAzBF,GAAAA,KAAhB,CAAA;AACAD,MAAAA,YAAY,CAACG,IAAI,CAAL,GAAA,EAAW,CAAvBH,OAAY,CAAZA;AAHJ,KAAA;;AAFU,WAAA,KAAA;AAOb;;;;6BACQ;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UAAA,YAAA,GACyF,KADzF,KAAA;AAAA,UACGI,SADH,GAAA,YAAA,CAAA,SAAA;AAAA,UACcC,QADd,GAAA,YAAA,CAAA,QAAA;AAAA,UACwBC,mBADxB,GAAA,YAAA,CAAA,mBAAA;AAAA,UAC6CL,YAD7C,GAAA,YAAA,CAAA,YAAA;AAAA,UACqEM,cADrE,GAAA,YAAA,CAAA,QAAA;AAEL,aAAQ,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAb,UAAa,CAAb;AAAuC,QAAA,QAAQ,EAAEF;AAAjD,OAAA,EACP,mBAAmB,CAAnB,GAAA,CAAwB,UAAA,IAAA,EAAwC;AAAA,YAArCG,UAAqC,GAAA,IAAA,CAArCA,UAAqC;AAAA,YAAzBC,YAAyB,GAAA,IAAA,CAAzBA,YAAyB;AAAA,YAAXN,IAAW,GAAA,IAAA,CAAXA,IAAW;AAAA,YACrDO,QADqD,GACxCP,IADwC,CAAA,QAAA;AAE7D,YAAMD,OAAO,GAAGD,YAAY,CAAZA,OAAAA,CAAqBE,IAAI,CAAzBF,GAAAA,KAAhB,CAAA;AACA,eAAQ,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAU,UAAA,QAAQ,EAAEM,cAAc,IAAlC,QAAA;AAAgD,UAAA,GAAG,EAAEJ,IAAI,CAAzD,GAAA;AAA+D,UAAA,IAAI,EAAnE,IAAA;AAA2E,UAAA,YAAY,EAAvF,YAAA;AAAuG,UAAA,UAAU,EAAjH,UAAA;AAA+H,UAAA,OAAO,EAAtI,OAAA;AAAiJ,UAAA,SAAS,EAA1J,SAAA;AAAuK,UAAA,OAAO,EAAE,MAAI,CAACH;AAArL,SAAA,CAAR;AAJJ,OACC,CADO,CAAR;AAOH;;;;EAlBkBF,KAAK,CAACC,S;;AAoB7B,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAA,KAAA,EAAA;AAAA,SAAW,KAAA,CAAA,aAAA,CAAA,QAAA,EAAX,KAAW,CAAX;AAAxB,CAAA;;AACA,eAAA,eAAA","sourcesContent":["import * as React from 'react';\nimport { tuple } from '../_util/type';\nimport ListItem from './ListItem';\nexport const OmitProps = tuple('handleFilter', 'handleClear', 'checkedKeys');\nclass ListBody extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onItemSelect = (item) => {\n            const { onItemSelect, selectedKeys } = this.props;\n            const checked = selectedKeys.indexOf(item.key) >= 0;\n            onItemSelect(item.key, !checked);\n        };\n    }\n    render() {\n        const { prefixCls, onScroll, filteredRenderItems, selectedKeys, disabled: globalDisabled, } = this.props;\n        return (<ul className={`${prefixCls}-content`} onScroll={onScroll}>\n        {filteredRenderItems.map(({ renderedEl, renderedText, item }) => {\n            const { disabled } = item;\n            const checked = selectedKeys.indexOf(item.key) >= 0;\n            return (<ListItem disabled={globalDisabled || disabled} key={item.key} item={item} renderedText={renderedText} renderedEl={renderedEl} checked={checked} prefixCls={prefixCls} onClick={this.onItemSelect}/>);\n        })}\n      </ul>);\n    }\n}\nconst ListBodyWrapper = (props) => <ListBody {...props}/>;\nexport default ListBodyWrapper;\n"]},"metadata":{},"sourceType":"module"}