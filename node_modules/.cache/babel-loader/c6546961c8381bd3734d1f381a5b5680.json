{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nfunction renderExpandIcon(locale) {\n  return function expandIcon(_ref) {\n    var _classNames;\n\n    var prefixCls = _ref.prefixCls,\n        onExpand = _ref.onExpand,\n        record = _ref.record,\n        expanded = _ref.expanded,\n        expandable = _ref.expandable;\n    var iconPrefix = \"\".concat(prefixCls, \"-row-expand-icon\");\n    return React.createElement(\"button\", {\n      type: \"button\",\n      onClick: function onClick(e) {\n        onExpand(record, e);\n        e.stopPropagation();\n      },\n      className: classNames(iconPrefix, (_classNames = {}, _defineProperty(_classNames, \"\".concat(iconPrefix, \"-spaced\"), !expandable), _defineProperty(_classNames, \"\".concat(iconPrefix, \"-expanded\"), expandable && expanded), _defineProperty(_classNames, \"\".concat(iconPrefix, \"-collapsed\"), expandable && !expanded), _classNames)),\n      \"aria-label\": expanded ? locale.collapse : locale.expand\n    });\n  };\n}\n\nexport default renderExpandIcon;","map":{"version":3,"sources":["table/ExpandIcon.jsx"],"names":["prefixCls","onExpand","record","expanded","expandable","iconPrefix","e","classNames","locale","expand"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,YAAA;;AACA,SAAA,gBAAA,CAAA,MAAA,EAAkC;AAC9B,SAAO,SAAA,UAAA,CAAA,IAAA,EAA4E;AAAA,QAAA,WAAA;;AAAA,QAAtDA,SAAsD,GAAA,IAAA,CAAtDA,SAAsD;AAAA,QAA3CC,QAA2C,GAAA,IAAA,CAA3CA,QAA2C;AAAA,QAAjCC,MAAiC,GAAA,IAAA,CAAjCA,MAAiC;AAAA,QAAzBC,QAAyB,GAAA,IAAA,CAAzBA,QAAyB;AAAA,QAAfC,UAAe,GAAA,IAAA,CAAfA,UAAe;AAC/E,QAAMC,UAAU,GAAA,GAAA,MAAA,CAAA,SAAA,EAAhB,kBAAgB,CAAhB;AACA,WAAQ,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,MAAA,IAAI,EAAZ,QAAA;AAAsB,MAAA,OAAO,EAAE,SAAA,OAAA,CAAA,CAAA,EAAK;AACxCJ,QAAAA,QAAQ,CAAA,MAAA,EAARA,CAAQ,CAARA;AACAK,QAAAA,CAAC,CAADA,eAAAA;AAFI,OAAA;AAGL,MAAA,SAAS,EAAEC,UAAU,CAAA,UAAA,GAAA,WAAA,GAAA,EAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,UAAA,EAAA,SAAA,CAAA,EACM,CADN,UAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,UAAA,EAAA,WAAA,CAAA,EAEQH,UAAU,IAFlB,QAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAGSA,UAAU,IAAI,CAHvB,QAAA,CAAA,EAHhB,WAGgB,EAHhB;AAOJ,oBAAYD,QAAQ,GAAGK,MAAM,CAAT,QAAA,GAAqBA,MAAM,CAACC;AAP5C,KAAA,CAAR;AAFJ,GAAA;AAWH;;AACD,eAAA,gBAAA","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nfunction renderExpandIcon(locale) {\n    return function expandIcon({ prefixCls, onExpand, record, expanded, expandable, }) {\n        const iconPrefix = `${prefixCls}-row-expand-icon`;\n        return (<button type=\"button\" onClick={e => {\n            onExpand(record, e);\n            e.stopPropagation();\n        }} className={classNames(iconPrefix, {\n            [`${iconPrefix}-spaced`]: !expandable,\n            [`${iconPrefix}-expanded`]: expandable && expanded,\n            [`${iconPrefix}-collapsed`]: expandable && !expanded,\n        })} aria-label={expanded ? locale.collapse : locale.expand}/>);\n    };\n}\nexport default renderExpandIcon;\n"]},"metadata":{},"sourceType":"module"}