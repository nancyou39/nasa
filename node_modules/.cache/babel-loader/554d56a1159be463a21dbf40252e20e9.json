{"ast":null,"code":"import raf from 'raf';\nvar id = 0;\nvar ids = {}; // Support call raf with delay specified frame\n\nexport default function wrapperRaf(callback) {\n  var delayFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var myId = id++;\n  var restFrames = delayFrames;\n\n  function internalCallback() {\n    restFrames -= 1;\n\n    if (restFrames <= 0) {\n      callback();\n      delete ids[myId];\n    } else {\n      ids[myId] = raf(internalCallback);\n    }\n  }\n\n  ids[myId] = raf(internalCallback);\n  return myId;\n}\n\nwrapperRaf.cancel = function cancel(pid) {\n  if (pid === undefined) return;\n  raf.cancel(ids[pid]);\n  delete ids[pid];\n};\n\nwrapperRaf.ids = ids; // export this for test usage","map":{"version":3,"sources":["_util/raf.js"],"names":["id","ids","delayFrames","myId","restFrames","callback","raf","wrapperRaf","pid"],"mappings":"AAAA,OAAA,GAAA,MAAA,KAAA;AACA,IAAIA,EAAE,GAAN,CAAA;AACA,IAAMC,GAAG,GAAT,EAAA,C,CACA;;AACA,eAAe,SAAA,UAAA,CAAA,QAAA,EAA+C;AAAA,MAAjBC,WAAiB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAH,CAAG;AAC1D,MAAMC,IAAI,GAAGH,EAAb,EAAA;AACA,MAAII,UAAU,GAAd,WAAA;;AACA,WAAA,gBAAA,GAA4B;AACxBA,IAAAA,UAAU,IAAVA,CAAAA;;AACA,QAAIA,UAAU,IAAd,CAAA,EAAqB;AACjBC,MAAAA,QAAQ;AACR,aAAOJ,GAAG,CAAV,IAAU,CAAV;AAFJ,KAAA,MAIK;AACDA,MAAAA,GAAG,CAAHA,IAAG,CAAHA,GAAYK,GAAG,CAAfL,gBAAe,CAAfA;AACH;AACJ;;AACDA,EAAAA,GAAG,CAAHA,IAAG,CAAHA,GAAYK,GAAG,CAAfL,gBAAe,CAAfA;AACA,SAAA,IAAA;AACH;;AACDM,UAAU,CAAVA,MAAAA,GAAoB,SAAA,MAAA,CAAA,GAAA,EAAqB;AACrC,MAAIC,GAAG,KAAP,SAAA,EACI;AACJF,EAAAA,GAAG,CAAHA,MAAAA,CAAWL,GAAG,CAAdK,GAAc,CAAdA;AACA,SAAOL,GAAG,CAAV,GAAU,CAAV;AAJJM,CAAAA;;AAMAA,UAAU,CAAVA,GAAAA,GAAAA,GAAAA,C,CAAsB","sourcesContent":["import raf from 'raf';\nlet id = 0;\nconst ids = {};\n// Support call raf with delay specified frame\nexport default function wrapperRaf(callback, delayFrames = 1) {\n    const myId = id++;\n    let restFrames = delayFrames;\n    function internalCallback() {\n        restFrames -= 1;\n        if (restFrames <= 0) {\n            callback();\n            delete ids[myId];\n        }\n        else {\n            ids[myId] = raf(internalCallback);\n        }\n    }\n    ids[myId] = raf(internalCallback);\n    return myId;\n}\nwrapperRaf.cancel = function cancel(pid) {\n    if (pid === undefined)\n        return;\n    raf.cancel(ids[pid]);\n    delete ids[pid];\n};\nwrapperRaf.ids = ids; // export this for test usage\n"]},"metadata":{},"sourceType":"module"}