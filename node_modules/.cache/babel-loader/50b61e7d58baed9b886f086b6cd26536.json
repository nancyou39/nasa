{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Checkbox from './Checkbox';\nimport { ConfigConsumer } from '../config-provider';\nexport var GroupContext = React.createContext(null);\n\nvar CheckboxGroup =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CheckboxGroup, _React$PureComponent);\n\n  function CheckboxGroup(props) {\n    var _this;\n\n    _classCallCheck(this, CheckboxGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckboxGroup).call(this, props));\n\n    _this.cancelValue = function (value) {\n      _this.setState(function (_ref) {\n        var registeredValues = _ref.registeredValues;\n        return {\n          registeredValues: registeredValues.filter(function (val) {\n            return val !== value;\n          })\n        };\n      });\n    };\n\n    _this.registerValue = function (value) {\n      _this.setState(function (_ref2) {\n        var registeredValues = _ref2.registeredValues;\n        return {\n          registeredValues: [].concat(_toConsumableArray(registeredValues), [value])\n        };\n      });\n    };\n\n    _this.toggleOption = function (option) {\n      var registeredValues = _this.state.registeredValues;\n\n      var optionIndex = _this.state.value.indexOf(option.value);\n\n      var value = _toConsumableArray(_this.state.value);\n\n      if (optionIndex === -1) {\n        value.push(option.value);\n      } else {\n        value.splice(optionIndex, 1);\n      }\n\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value\n        });\n      }\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        var options = _this.getOptions();\n\n        onChange(value.filter(function (val) {\n          return registeredValues.indexOf(val) !== -1;\n        }).sort(function (a, b) {\n          var indexA = options.findIndex(function (opt) {\n            return opt.value === a;\n          });\n          var indexB = options.findIndex(function (opt) {\n            return opt.value === b;\n          });\n          return indexA - indexB;\n        }));\n      }\n    };\n\n    _this.renderGroup = function (_ref3) {\n      var getPrefixCls = _ref3.getPrefixCls;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props,\n          state = _assertThisInitialize.state;\n\n      var customizePrefixCls = props.prefixCls,\n          className = props.className,\n          style = props.style,\n          options = props.options,\n          restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"options\"]);\n\n      var prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n      var groupPrefixCls = \"\".concat(prefixCls, \"-group\");\n      var domProps = omit(restProps, ['children', 'defaultValue', 'value', 'onChange', 'disabled']);\n      var children = props.children;\n\n      if (options && options.length > 0) {\n        children = _this.getOptions().map(function (option) {\n          return React.createElement(Checkbox, {\n            prefixCls: prefixCls,\n            key: option.value.toString(),\n            disabled: 'disabled' in option ? option.disabled : props.disabled,\n            value: option.value,\n            checked: state.value.indexOf(option.value) !== -1,\n            onChange: option.onChange,\n            className: \"\".concat(groupPrefixCls, \"-item\"),\n            style: option.style\n          }, option.label);\n        });\n      }\n\n      var context = {\n        toggleOption: _this.toggleOption,\n        value: _this.state.value,\n        disabled: _this.props.disabled,\n        name: _this.props.name,\n        // https://github.com/ant-design/ant-design/issues/16376\n        registerValue: _this.registerValue,\n        cancelValue: _this.cancelValue\n      };\n      var classString = classNames(groupPrefixCls, className);\n      return React.createElement(\"div\", _extends({\n        className: classString,\n        style: style\n      }, domProps), React.createElement(GroupContext.Provider, {\n        value: context\n      }, children));\n    };\n\n    _this.state = {\n      value: props.value || props.defaultValue || [],\n      registeredValues: []\n    };\n    return _this;\n  }\n\n  _createClass(CheckboxGroup, [{\n    key: \"getOptions\",\n    value: function getOptions() {\n      var options = this.props.options; // https://github.com/Microsoft/TypeScript/issues/7960\n\n      return options.map(function (option) {\n        if (typeof option === 'string') {\n          return {\n            label: option,\n            value: option\n          };\n        }\n\n        return option;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderGroup);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('value' in nextProps) {\n        return {\n          value: nextProps.value || []\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CheckboxGroup;\n}(React.PureComponent);\n\nCheckboxGroup.defaultProps = {\n  options: []\n};\nCheckboxGroup.propTypes = {\n  defaultValue: PropTypes.array,\n  value: PropTypes.array,\n  options: PropTypes.array.isRequired,\n  onChange: PropTypes.func\n};\nexport default CheckboxGroup;","map":{"version":3,"sources":["checkbox/Group.jsx"],"names":["__rest","t","Object","e","s","i","p","GroupContext","React","CheckboxGroup","PureComponent","registeredValues","val","optionIndex","option","value","onChange","options","indexA","opt","indexB","getPrefixCls","props","state","customizePrefixCls","className","style","restProps","prefixCls","groupPrefixCls","domProps","omit","children","context","toggleOption","disabled","name","registerValue","cancelValue","classString","classNames","nextProps","label","defaultValue","PropTypes","func"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Checkbox from './Checkbox';\nimport { ConfigConsumer } from '../config-provider';\nexport const GroupContext = React.createContext(null);\nclass CheckboxGroup extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.cancelValue = (value) => {\n            this.setState(({ registeredValues }) => ({\n                registeredValues: registeredValues.filter(val => val !== value),\n            }));\n        };\n        this.registerValue = (value) => {\n            this.setState(({ registeredValues }) => ({\n                registeredValues: [...registeredValues, value],\n            }));\n        };\n        this.toggleOption = (option) => {\n            const { registeredValues } = this.state;\n            const optionIndex = this.state.value.indexOf(option.value);\n            const value = [...this.state.value];\n            if (optionIndex === -1) {\n                value.push(option.value);\n            }\n            else {\n                value.splice(optionIndex, 1);\n            }\n            if (!('value' in this.props)) {\n                this.setState({ value });\n            }\n            const { onChange } = this.props;\n            if (onChange) {\n                const options = this.getOptions();\n                onChange(value\n                    .filter(val => registeredValues.indexOf(val) !== -1)\n                    .sort((a, b) => {\n                    const indexA = options.findIndex(opt => opt.value === a);\n                    const indexB = options.findIndex(opt => opt.value === b);\n                    return indexA - indexB;\n                }));\n            }\n        };\n        this.renderGroup = ({ getPrefixCls }) => {\n            const { props, state } = this;\n            const { prefixCls: customizePrefixCls, className, style, options } = props, restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"options\"]);\n            const prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n            const groupPrefixCls = `${prefixCls}-group`;\n            const domProps = omit(restProps, ['children', 'defaultValue', 'value', 'onChange', 'disabled']);\n            let { children } = props;\n            if (options && options.length > 0) {\n                children = this.getOptions().map(option => (<Checkbox prefixCls={prefixCls} key={option.value.toString()} disabled={'disabled' in option ? option.disabled : props.disabled} value={option.value} checked={state.value.indexOf(option.value) !== -1} onChange={option.onChange} className={`${groupPrefixCls}-item`} style={option.style}>\n          {option.label}\n        </Checkbox>));\n            }\n            const context = {\n                toggleOption: this.toggleOption,\n                value: this.state.value,\n                disabled: this.props.disabled,\n                name: this.props.name,\n                // https://github.com/ant-design/ant-design/issues/16376\n                registerValue: this.registerValue,\n                cancelValue: this.cancelValue,\n            };\n            const classString = classNames(groupPrefixCls, className);\n            return (<div className={classString} style={style} {...domProps}>\n        <GroupContext.Provider value={context}>{children}</GroupContext.Provider>\n      </div>);\n        };\n        this.state = {\n            value: props.value || props.defaultValue || [],\n            registeredValues: [],\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value || [],\n            };\n        }\n        return null;\n    }\n    getOptions() {\n        const { options } = this.props;\n        // https://github.com/Microsoft/TypeScript/issues/7960\n        return options.map(option => {\n            if (typeof option === 'string') {\n                return {\n                    label: option,\n                    value: option,\n                };\n            }\n            return option;\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderGroup}</ConfigConsumer>;\n    }\n}\nCheckboxGroup.defaultProps = {\n    options: [],\n};\nCheckboxGroup.propTypes = {\n    defaultValue: PropTypes.array,\n    value: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    onChange: PropTypes.func,\n};\nexport default CheckboxGroup;\n"]},"metadata":{},"sourceType":"module"}