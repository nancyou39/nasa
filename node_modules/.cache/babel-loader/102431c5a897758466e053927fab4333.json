{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport Animate from 'rc-animate';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport ScrollNumber from './ScrollNumber';\nimport { PresetColorTypes } from '../_util/colors';\nimport { ConfigConsumer } from '../config-provider';\n\nfunction isPresetColor(color) {\n  return PresetColorTypes.indexOf(color) !== -1;\n}\n\nvar Badge =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Badge, _React$Component);\n\n  function Badge() {\n    var _this;\n\n    _classCallCheck(this, Badge);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Badge).apply(this, arguments));\n\n    _this.renderBadge = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          customizeScrollNumberPrefixCls = _a.scrollNumberPrefixCls,\n          children = _a.children,\n          status = _a.status,\n          text = _a.text,\n          color = _a.color,\n          restProps = __rest(_a, [\"prefixCls\", \"scrollNumberPrefixCls\", \"children\", \"status\", \"text\", \"color\"]);\n\n      var omitArr = ['count', 'showZero', 'overflowCount', 'className', 'style', 'dot', 'offset', 'title'];\n      var prefixCls = getPrefixCls('badge', customizePrefixCls);\n      var scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n\n      var scrollNumber = _this.renderBadgeNumber(prefixCls, scrollNumberPrefixCls);\n\n      var statusText = _this.renderStatusText(prefixCls);\n\n      var statusCls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-dot\"), _this.hasStatus()), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(color), isPresetColor(color)), _classNames));\n      var statusStyle = {};\n\n      if (color && !isPresetColor(color)) {\n        statusStyle.background = color;\n      } // <Badge status=\"success\" />\n\n\n      if (!children && _this.hasStatus()) {\n        var styleWithOffset = _this.getStyleWithOffset();\n\n        var statusTextColor = styleWithOffset && styleWithOffset.color;\n        return React.createElement(\"span\", _extends({}, omit(restProps, omitArr), {\n          className: _this.getBadgeClassName(prefixCls, direction),\n          style: styleWithOffset\n        }), React.createElement(\"span\", {\n          className: statusCls,\n          style: statusStyle\n        }), React.createElement(\"span\", {\n          style: {\n            color: statusTextColor\n          },\n          className: \"\".concat(prefixCls, \"-status-text\")\n        }, text));\n      }\n\n      return React.createElement(\"span\", _extends({}, omit(restProps, omitArr), {\n        className: _this.getBadgeClassName(prefixCls, direction)\n      }), children, React.createElement(Animate, {\n        component: \"\",\n        showProp: \"data-show\",\n        transitionName: children ? \"\".concat(prefixCls, \"-zoom\") : '',\n        transitionAppear: true\n      }, scrollNumber), statusText);\n    };\n\n    return _this;\n  }\n\n  _createClass(Badge, [{\n    key: \"getNumberedDisplayCount\",\n    value: function getNumberedDisplayCount() {\n      var _this$props = this.props,\n          count = _this$props.count,\n          overflowCount = _this$props.overflowCount;\n      var displayCount = count > overflowCount ? \"\".concat(overflowCount, \"+\") : count;\n      return displayCount;\n    }\n  }, {\n    key: \"getDisplayCount\",\n    value: function getDisplayCount() {\n      var isDot = this.isDot(); // dot mode don't need count\n\n      if (isDot) {\n        return '';\n      }\n\n      return this.getNumberedDisplayCount();\n    }\n  }, {\n    key: \"getScrollNumberTitle\",\n    value: function getScrollNumberTitle() {\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          count = _this$props2.count;\n\n      if (title) {\n        return title;\n      }\n\n      return typeof count === 'string' || typeof count === 'number' ? count : undefined;\n    }\n  }, {\n    key: \"getStyleWithOffset\",\n    value: function getStyleWithOffset() {\n      var _this$props3 = this.props,\n          offset = _this$props3.offset,\n          style = _this$props3.style;\n      return offset ? _extends({\n        right: -parseInt(offset[0], 10),\n        marginTop: offset[1]\n      }, style) : style;\n    }\n  }, {\n    key: \"getBadgeClassName\",\n    value: function getBadgeClassName(prefixCls) {\n      var _classNames2;\n\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ltr';\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          children = _this$props4.children;\n      return classNames(className, prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-status\"), this.hasStatus()), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-not-a-wrapper\"), !children), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2));\n    }\n  }, {\n    key: \"hasStatus\",\n    value: function hasStatus() {\n      var _this$props5 = this.props,\n          status = _this$props5.status,\n          color = _this$props5.color;\n      return !!status || !!color;\n    }\n  }, {\n    key: \"isZero\",\n    value: function isZero() {\n      var numberedDisplayCount = this.getNumberedDisplayCount();\n      return numberedDisplayCount === '0' || numberedDisplayCount === 0;\n    }\n  }, {\n    key: \"isDot\",\n    value: function isDot() {\n      var dot = this.props.dot;\n      var isZero = this.isZero();\n      return dot && !isZero || this.hasStatus();\n    }\n  }, {\n    key: \"isHidden\",\n    value: function isHidden() {\n      var showZero = this.props.showZero;\n      var displayCount = this.getDisplayCount();\n      var isZero = this.isZero();\n      var isDot = this.isDot();\n      var isEmpty = displayCount === null || displayCount === undefined || displayCount === '';\n      return (isEmpty || isZero && !showZero) && !isDot;\n    }\n  }, {\n    key: \"renderStatusText\",\n    value: function renderStatusText(prefixCls) {\n      var text = this.props.text;\n      var hidden = this.isHidden();\n      return hidden || !text ? null : React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-status-text\")\n      }, text);\n    }\n  }, {\n    key: \"renderDisplayComponent\",\n    value: function renderDisplayComponent() {\n      var count = this.props.count;\n      var customNode = count;\n\n      if (!customNode || _typeof(customNode) !== 'object') {\n        return undefined;\n      }\n\n      return React.cloneElement(customNode, {\n        style: _extends(_extends({}, this.getStyleWithOffset()), customNode.props && customNode.props.style)\n      });\n    }\n  }, {\n    key: \"renderBadgeNumber\",\n    value: function renderBadgeNumber(prefixCls, scrollNumberPrefixCls) {\n      var _classNames3;\n\n      var _this$props6 = this.props,\n          status = _this$props6.status,\n          count = _this$props6.count,\n          color = _this$props6.color;\n      var displayCount = this.getDisplayCount();\n      var isDot = this.isDot();\n      var hidden = this.isHidden();\n      var scrollNumberCls = classNames((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefixCls, \"-dot\"), isDot), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-count\"), !isDot), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-multiple-words\"), !isDot && count && count.toString && count.toString().length > 1), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(color), isPresetColor(color)), _classNames3));\n      var statusStyle = this.getStyleWithOffset();\n\n      if (color && !isPresetColor(color)) {\n        statusStyle = statusStyle || {};\n        statusStyle.background = color;\n      }\n\n      return hidden ? null : React.createElement(ScrollNumber, {\n        prefixCls: scrollNumberPrefixCls,\n        \"data-show\": !hidden,\n        className: scrollNumberCls,\n        count: displayCount,\n        displayComponent: this.renderDisplayComponent() // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n        ,\n        title: this.getScrollNumberTitle(),\n        style: statusStyle,\n        key: \"scrollNumber\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderBadge);\n    }\n  }]);\n\n  return Badge;\n}(React.Component);\n\nexport { Badge as default };\nBadge.defaultProps = {\n  count: null,\n  showZero: false,\n  dot: false,\n  overflowCount: 99\n};","map":{"version":3,"sources":["badge/index.jsx"],"names":["__rest","t","Object","e","s","i","p","PresetColorTypes","Badge","React","Component","getPrefixCls","direction","customizePrefixCls","customizeScrollNumberPrefixCls","children","status","text","color","_a","restProps","omitArr","prefixCls","scrollNumberPrefixCls","scrollNumber","statusText","statusCls","classNames","isPresetColor","statusStyle","styleWithOffset","statusTextColor","omit","count","overflowCount","displayCount","isDot","title","offset","style","right","parseInt","marginTop","className","numberedDisplayCount","dot","isZero","showZero","isEmpty","hidden","customNode","scrollNumberCls"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,MAAM,GAAI,QAAQ,KAAT,MAAC,IAAwB,UAAA,CAAA,EAAA,CAAA,EAAgB;AAClD,MAAIC,CAAC,GAAL,EAAA;;AACA,OAAK,IAAL,CAAA,IAAA,CAAA,EAAA;AAAiB,QAAIC,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,KAA8CC,CAAC,CAADA,OAAAA,CAAAA,CAAAA,IAAlD,CAAA,EACbF,CAAC,CAADA,CAAC,CAADA,GAAOG,CAAC,CAARH,CAAQ,CAARA;AADJ;;AAEA,MAAIG,CAAC,IAADA,IAAAA,IAAa,OAAOF,MAAM,CAAb,qBAAA,KAAjB,UAAA,EACI,KAAK,IAAIG,CAAC,GAAL,CAAA,EAAWC,CAAC,GAAGJ,MAAM,CAANA,qBAAAA,CAApB,CAAoBA,CAApB,EAAqDG,CAAC,GAAGC,CAAC,CAA1D,MAAA,EAAmED,CAAnE,EAAA,EAAwE;AACpE,QAAIF,CAAC,CAADA,OAAAA,CAAUG,CAAC,CAAXH,CAAW,CAAXA,IAAAA,CAAAA,IAAuBD,MAAM,CAANA,SAAAA,CAAAA,oBAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAA8CI,CAAC,CAA1E,CAA0E,CAA/CJ,CAA3B,EACID,CAAC,CAACK,CAAC,CAAHL,CAAG,CAAF,CAADA,GAAUG,CAAC,CAACE,CAAC,CAAbL,CAAa,CAAF,CAAXA;AACP;AACL,SAAA,CAAA;AATJ,CAAA;;AAWA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,OAAA,MAAA,YAAA;AACA,OAAA,IAAA,MAAA,SAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,YAAA,MAAA,gBAAA;AACA,SAAA,gBAAA,QAAA,iBAAA;AACA,SAAA,cAAA,QAAA,oBAAA;;AACA,SAAA,aAAA,CAAA,KAAA,EAA8B;AAC1B,SAAOM,gBAAgB,CAAhBA,OAAAA,CAAAA,KAAAA,MAAoC,CAA3C,CAAA;AACH;;IACoBC,K;;;;;AACjB,WAAA,KAAA,GAAc;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AACV,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,KAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;AACA,IAAA,KAAA,CAAA,WAAA,GAAmB,UAAA,IAAA,EAAiC;AAAA,UAAA,WAAA;;AAAA,UAA9BG,YAA8B,GAAA,IAAA,CAA9BA,YAA8B;AAAA,UAAhBC,SAAgB,GAAA,IAAA,CAAhBA,SAAgB;;AAC1C,UAAA,EAAE,GAAG,KAAA,CAAL,KAAA;AAAA,UAA8BC,kBAA9B,GAA2IM,EAA3I,CAAA,SAAA;AAAA,UAAyEL,8BAAzE,GAA2IK,EAA3I,CAAA,qBAAA;AAAA,UAAyGJ,QAAzG,GAA2II,EAA3I,CAAA,QAAA;AAAA,UAAmHH,MAAnH,GAA2IG,EAA3I,CAAA,MAAA;AAAA,UAA2HF,IAA3H,GAA2IE,EAA3I,CAAA,IAAA;AAAA,UAAiID,KAAjI,GAA2IC,EAA3I,CAAA,KAAA;AAAA,UAA+IC,SAA/I,GAA2JpB,MAAM,CAAA,EAAA,EAAK,CAAA,WAAA,EAAA,uBAAA,EAAA,UAAA,EAAA,QAAA,EAAA,MAAA,EAAtK,OAAsK,CAAL,CAAjK;;AACN,UAAMqB,OAAO,GAAG,CAAA,OAAA,EAAA,UAAA,EAAA,eAAA,EAAA,WAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAhB,OAAgB,CAAhB;AAUA,UAAMC,SAAS,GAAGX,YAAY,CAAA,OAAA,EAA9B,kBAA8B,CAA9B;AACA,UAAMY,qBAAqB,GAAGZ,YAAY,CAAA,eAAA,EAA1C,8BAA0C,CAA1C;;AACA,UAAMa,YAAY,GAAG,KAAA,CAAA,iBAAA,CAAA,SAAA,EAArB,qBAAqB,CAArB;;AACA,UAAMC,UAAU,GAAG,KAAA,CAAA,gBAAA,CAAnB,SAAmB,CAAnB;;AACA,UAAMC,SAAS,GAAGC,UAAU,EAAA,WAAA,GAAA,EAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,aAAA,CAAA,EACK,KAAA,CADL,SACK,EADL,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAEW,CAAC,CAFZ,MAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA,KAAA,CAAA,EAGUC,aAAa,CAHvB,KAGuB,CAHvB,CAAA,EAA5B,WAA4B,EAA5B;AAKA,UAAMC,WAAW,GAAjB,EAAA;;AACA,UAAIX,KAAK,IAAI,CAACU,aAAa,CAA3B,KAA2B,CAA3B,EAAoC;AAChCC,QAAAA,WAAW,CAAXA,UAAAA,GAAAA,KAAAA;AAvB4C,OAAA,CAyBhD;;;AACA,UAAI,CAAA,QAAA,IAAa,KAAA,CAAjB,SAAiB,EAAjB,EAAmC;AAC/B,YAAMC,eAAe,GAAG,KAAA,CAAxB,kBAAwB,EAAxB;;AACA,YAAMC,eAAe,GAAGD,eAAe,IAAIA,eAAe,CAA1D,KAAA;AACA,eAAQ,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAUE,IAAI,CAAA,SAAA,EAAd,OAAc,CAAd,EAAA;AAAoC,UAAA,SAAS,EAAE,KAAA,CAAA,iBAAA,CAAA,SAAA,EAA/C,SAA+C,CAA/C;AAA6F,UAAA,KAAK,EAAEF;AAApG,SAAA,CAAA,EACd,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,SAAS,EAAf,SAAA;AAA4B,UAAA,KAAK,EAAED;AAAnC,SAAA,CADc,EAEd,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,KAAK,EAAE;AAAEX,YAAAA,KAAK,EAAEa;AAAT,WAAb;AAAyC,UAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,cAAA;AAAlD,SAAA,EAFM,IAEN,CAFc,CAAR;AAMH;;AACD,aAAQ,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAUC,IAAI,CAAA,SAAA,EAAd,OAAc,CAAd,EAAA;AAAoC,QAAA,SAAS,EAAE,KAAA,CAAA,iBAAA,CAAA,SAAA,EAAA,SAAA;AAA/C,OAAA,CAAA,EAAA,QAAA,EAEZ,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAS,QAAA,SAAS,EAAlB,EAAA;AAAsB,QAAA,QAAQ,EAA9B,WAAA;AAA2C,QAAA,cAAc,EAAEjB,QAAQ,GAAA,GAAA,MAAA,CAAA,SAAA,EAAA,OAAA,CAAA,GAAnE,EAAA;AAAgG,QAAA,gBAAgB,EAAA;AAAhH,OAAA,EAFY,YAEZ,CAFY,EAAR,UAAQ,CAAR;AApCJ,KAAA;;AAFU,WAAA,KAAA;AA8Cb;;;;8CACyB;AAAA,UAAA,WAAA,GACW,KADX,KAAA;AAAA,UACdkB,KADc,GAAA,WAAA,CAAA,KAAA;AAAA,UACPC,aADO,GAAA,WAAA,CAAA,aAAA;AAEtB,UAAMC,YAAY,GAAGF,KAAK,GAALA,aAAAA,GAAAA,GAAAA,MAAAA,CAAAA,aAAAA,EAAAA,GAAAA,CAAAA,GAArB,KAAA;AACA,aAAA,YAAA;AACH;;;sCACiB;AACd,UAAMG,KAAK,GAAG,KADA,KACA,EAAd,CADc,CAEd;;AACA,UAAA,KAAA,EAAW;AACP,eAAA,EAAA;AACH;;AACD,aAAO,KAAP,uBAAO,EAAP;AACH;;;2CACsB;AAAA,UAAA,YAAA,GACM,KADN,KAAA;AAAA,UACXC,KADW,GAAA,YAAA,CAAA,KAAA;AAAA,UACJJ,KADI,GAAA,YAAA,CAAA,KAAA;;AAEnB,UAAA,KAAA,EAAW;AACP,eAAA,KAAA;AACH;;AACD,aAAO,OAAA,KAAA,KAAA,QAAA,IAA6B,OAAA,KAAA,KAA7B,QAAA,GAAA,KAAA,GAAP,SAAA;AACH;;;yCACoB;AAAA,UAAA,YAAA,GACS,KADT,KAAA;AAAA,UACTK,MADS,GAAA,YAAA,CAAA,MAAA;AAAA,UACDC,KADC,GAAA,YAAA,CAAA,KAAA;AAEjB,aAAOD,MAAM,GACP,QAAA,CAAc;AAAEE,QAAAA,KAAK,EAAE,CAACC,QAAQ,CAACH,MAAM,CAAP,CAAO,CAAP,EAAlB,EAAkB,CAAlB;AAAmCI,QAAAA,SAAS,EAAEJ,MAAM,CAAA,CAAA;AAApD,OAAd,EADO,KACP,CADO,GAAb,KAAA;AAEH;;;sCACiBhB,S,EAA8B;AAAA,UAAA,YAAA;;AAAA,UAAnBV,SAAmB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,KAAO;AAAA,UAAA,YAAA,GACZ,KADY,KAAA;AAAA,UACpC+B,SADoC,GAAA,YAAA,CAAA,SAAA;AAAA,UACzB5B,QADyB,GAAA,YAAA,CAAA,QAAA;AAE5C,aAAOY,UAAU,CAAA,SAAA,EAAA,SAAA,GAAA,YAAA,GAAA,EAAA,EAAA,eAAA,CAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,SAAA,CAAA,EACY,KADZ,SACY,EADZ,CAAA,EAAA,eAAA,CAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,gBAAA,CAAA,EAEmB,CAFnB,QAAA,CAAA,EAAA,eAAA,CAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,MAAA,CAAA,EAGSf,SAAS,KAHlB,KAAA,CAAA,EAAjB,YAAiB,EAAjB;AAKH;;;gCACW;AAAA,UAAA,YAAA,GACkB,KADlB,KAAA;AAAA,UACAI,MADA,GAAA,YAAA,CAAA,MAAA;AAAA,UACQE,KADR,GAAA,YAAA,CAAA,KAAA;AAER,aAAO,CAAC,CAAD,MAAA,IAAY,CAAC,CAApB,KAAA;AACH;;;6BACQ;AACL,UAAM0B,oBAAoB,GAAG,KAA7B,uBAA6B,EAA7B;AACA,aAAOA,oBAAoB,KAApBA,GAAAA,IAAgCA,oBAAoB,KAA3D,CAAA;AACH;;;4BACO;AAAA,UACIC,GADJ,GACY,KADZ,KACY,CADZ,GAAA;AAEJ,UAAMC,MAAM,GAAG,KAAf,MAAe,EAAf;AACA,aAAQD,GAAG,IAAI,CAAR,MAACA,IAAmB,KAA3B,SAA2B,EAA3B;AACH;;;+BACU;AAAA,UACCE,QADD,GACc,KADd,KACc,CADd,QAAA;AAEP,UAAMZ,YAAY,GAAG,KAArB,eAAqB,EAArB;AACA,UAAMW,MAAM,GAAG,KAAf,MAAe,EAAf;AACA,UAAMV,KAAK,GAAG,KAAd,KAAc,EAAd;AACA,UAAMY,OAAO,GAAGb,YAAY,KAAZA,IAAAA,IAAyBA,YAAY,KAArCA,SAAAA,IAAuDA,YAAY,KAAnF,EAAA;AACA,aAAO,CAACa,OAAO,IAAKF,MAAM,IAAI,CAAvB,QAAA,KAAsC,CAA7C,KAAA;AACH;;;qCACgBxB,S,EAAW;AAAA,UAChBL,IADgB,GACP,KADO,KACP,CADO,IAAA;AAExB,UAAMgC,MAAM,GAAG,KAAf,QAAe,EAAf;AACA,aAAOA,MAAM,IAAI,CAAVA,IAAAA,GAAAA,IAAAA,GAAyB,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,cAAA;AAAf,OAAA,EAAhC,IAAgC,CAAhC;AACH;;;6CACwB;AAAA,UACbhB,KADa,GACH,KADG,KACH,CADG,KAAA;AAErB,UAAMiB,UAAU,GAAhB,KAAA;;AACA,UAAI,CAAA,UAAA,IAAe,OAAA,CAAA,UAAA,CAAA,KAAnB,QAAA,EAAmD;AAC/C,eAAA,SAAA;AACH;;AACD,aAAO,KAAK,CAAL,YAAA,CAAA,UAAA,EAA+B;AAClCX,QAAAA,KAAK,EAAE,QAAA,CAAc,QAAA,CAAA,EAAA,EAAkB,KAAhC,kBAAgC,EAAlB,CAAd,EAA6DW,UAAU,CAAVA,KAAAA,IAAoBA,UAAU,CAAVA,KAAAA,CAAjF,KAAA;AAD2B,OAA/B,CAAP;AAGH;;;sCACiB5B,S,EAAWC,qB,EAAuB;AAAA,UAAA,YAAA;;AAAA,UAAA,YAAA,GACf,KADe,KAAA;AAAA,UACxCP,MADwC,GAAA,YAAA,CAAA,MAAA;AAAA,UAChCiB,KADgC,GAAA,YAAA,CAAA,KAAA;AAAA,UACzBf,KADyB,GAAA,YAAA,CAAA,KAAA;AAEhD,UAAMiB,YAAY,GAAG,KAArB,eAAqB,EAArB;AACA,UAAMC,KAAK,GAAG,KAAd,KAAc,EAAd;AACA,UAAMa,MAAM,GAAG,KAAf,QAAe,EAAf;AACA,UAAME,eAAe,GAAGxB,UAAU,EAAA,YAAA,GAAA,EAAA,EAAA,eAAA,CAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,MAAA,CAAA,EAAA,KAAA,CAAA,EAAA,eAAA,CAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAEN,CAFM,KAAA,CAAA,EAAA,eAAA,CAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,iBAAA,CAAA,EAGG,CAAA,KAAA,IAAA,KAAA,IAAmBM,KAAK,CAAxB,QAAA,IAAqCA,KAAK,CAALA,QAAAA,GAAAA,MAAAA,GAHxC,CAAA,CAAA,EAAA,eAAA,CAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAIK,CAAC,CAJN,MAAA,CAAA,EAAA,eAAA,CAAA,YAAA,EAAA,GAAA,MAAA,CAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CAAA,KAAA,CAAA,EAKIL,aAAa,CALjB,KAKiB,CALjB,CAAA,EAAlC,YAAkC,EAAlC;AAOA,UAAIC,WAAW,GAAG,KAAlB,kBAAkB,EAAlB;;AACA,UAAIX,KAAK,IAAI,CAACU,aAAa,CAA3B,KAA2B,CAA3B,EAAoC;AAChCC,QAAAA,WAAW,GAAGA,WAAW,IAAzBA,EAAAA;AACAA,QAAAA,WAAW,CAAXA,UAAAA,GAAAA,KAAAA;AACH;;AACD,aAAOoB,MAAM,GAAA,IAAA,GAAW,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;AAAc,QAAA,SAAS,EAAvB,qBAAA;AAAgD,qBAAW,CAA3D,MAAA;AAAoE,QAAA,SAAS,EAA7E,eAAA;AAAgG,QAAA,KAAK,EAArG,YAAA;AAAqH,QAAA,gBAAgB,EAAE,KAAvI,sBAAuI,EAAvI,CAAsK;AAAtK;AACvB,QAAA,KAAK,EAAE,KADgB,oBAChB,EADgB;AACa,QAAA,KAAK,EADlB,WAAA;AACiC,QAAA,GAAG,EAAC;AADrC,OAAA,CAAxB;AAEH;;;6BACQ;AACL,aAAO,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,EAAiB,KAAxB,WAAO,CAAP;AACH;;;;EA3I8BxC,KAAK,CAACC,S;;SAApBF,K;AA6IrBA,KAAK,CAALA,YAAAA,GAAqB;AACjByB,EAAAA,KAAK,EADY,IAAA;AAEjBc,EAAAA,QAAQ,EAFS,KAAA;AAGjBF,EAAAA,GAAG,EAHc,KAAA;AAIjBX,EAAAA,aAAa,EAAE;AAJE,CAArB1B","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport Animate from 'rc-animate';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport ScrollNumber from './ScrollNumber';\nimport { PresetColorTypes } from '../_util/colors';\nimport { ConfigConsumer } from '../config-provider';\nfunction isPresetColor(color) {\n    return PresetColorTypes.indexOf(color) !== -1;\n}\nexport default class Badge extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderBadge = ({ getPrefixCls, direction }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, scrollNumberPrefixCls: customizeScrollNumberPrefixCls, children, status, text, color } = _a, restProps = __rest(_a, [\"prefixCls\", \"scrollNumberPrefixCls\", \"children\", \"status\", \"text\", \"color\"]);\n            const omitArr = [\n                'count',\n                'showZero',\n                'overflowCount',\n                'className',\n                'style',\n                'dot',\n                'offset',\n                'title',\n            ];\n            const prefixCls = getPrefixCls('badge', customizePrefixCls);\n            const scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n            const scrollNumber = this.renderBadgeNumber(prefixCls, scrollNumberPrefixCls);\n            const statusText = this.renderStatusText(prefixCls);\n            const statusCls = classNames({\n                [`${prefixCls}-status-dot`]: this.hasStatus(),\n                [`${prefixCls}-status-${status}`]: !!status,\n                [`${prefixCls}-status-${color}`]: isPresetColor(color),\n            });\n            const statusStyle = {};\n            if (color && !isPresetColor(color)) {\n                statusStyle.background = color;\n            }\n            // <Badge status=\"success\" />\n            if (!children && this.hasStatus()) {\n                const styleWithOffset = this.getStyleWithOffset();\n                const statusTextColor = styleWithOffset && styleWithOffset.color;\n                return (<span {...omit(restProps, omitArr)} className={this.getBadgeClassName(prefixCls, direction)} style={styleWithOffset}>\n          <span className={statusCls} style={statusStyle}/>\n          <span style={{ color: statusTextColor }} className={`${prefixCls}-status-text`}>\n            {text}\n          </span>\n        </span>);\n            }\n            return (<span {...omit(restProps, omitArr)} className={this.getBadgeClassName(prefixCls, direction)}>\n        {children}\n        <Animate component=\"\" showProp=\"data-show\" transitionName={children ? `${prefixCls}-zoom` : ''} transitionAppear>\n          {scrollNumber}\n        </Animate>\n        {statusText}\n      </span>);\n        };\n    }\n    getNumberedDisplayCount() {\n        const { count, overflowCount } = this.props;\n        const displayCount = count > overflowCount ? `${overflowCount}+` : count;\n        return displayCount;\n    }\n    getDisplayCount() {\n        const isDot = this.isDot();\n        // dot mode don't need count\n        if (isDot) {\n            return '';\n        }\n        return this.getNumberedDisplayCount();\n    }\n    getScrollNumberTitle() {\n        const { title, count } = this.props;\n        if (title) {\n            return title;\n        }\n        return typeof count === 'string' || typeof count === 'number' ? count : undefined;\n    }\n    getStyleWithOffset() {\n        const { offset, style } = this.props;\n        return offset\n            ? Object.assign({ right: -parseInt(offset[0], 10), marginTop: offset[1] }, style) : style;\n    }\n    getBadgeClassName(prefixCls, direction = 'ltr') {\n        const { className, children } = this.props;\n        return classNames(className, prefixCls, {\n            [`${prefixCls}-status`]: this.hasStatus(),\n            [`${prefixCls}-not-a-wrapper`]: !children,\n            [`${prefixCls}-rtl`]: direction === 'rtl',\n        });\n    }\n    hasStatus() {\n        const { status, color } = this.props;\n        return !!status || !!color;\n    }\n    isZero() {\n        const numberedDisplayCount = this.getNumberedDisplayCount();\n        return numberedDisplayCount === '0' || numberedDisplayCount === 0;\n    }\n    isDot() {\n        const { dot } = this.props;\n        const isZero = this.isZero();\n        return (dot && !isZero) || this.hasStatus();\n    }\n    isHidden() {\n        const { showZero } = this.props;\n        const displayCount = this.getDisplayCount();\n        const isZero = this.isZero();\n        const isDot = this.isDot();\n        const isEmpty = displayCount === null || displayCount === undefined || displayCount === '';\n        return (isEmpty || (isZero && !showZero)) && !isDot;\n    }\n    renderStatusText(prefixCls) {\n        const { text } = this.props;\n        const hidden = this.isHidden();\n        return hidden || !text ? null : <span className={`${prefixCls}-status-text`}>{text}</span>;\n    }\n    renderDisplayComponent() {\n        const { count } = this.props;\n        const customNode = count;\n        if (!customNode || typeof customNode !== 'object') {\n            return undefined;\n        }\n        return React.cloneElement(customNode, {\n            style: Object.assign(Object.assign({}, this.getStyleWithOffset()), (customNode.props && customNode.props.style)),\n        });\n    }\n    renderBadgeNumber(prefixCls, scrollNumberPrefixCls) {\n        const { status, count, color } = this.props;\n        const displayCount = this.getDisplayCount();\n        const isDot = this.isDot();\n        const hidden = this.isHidden();\n        const scrollNumberCls = classNames({\n            [`${prefixCls}-dot`]: isDot,\n            [`${prefixCls}-count`]: !isDot,\n            [`${prefixCls}-multiple-words`]: !isDot && count && count.toString && count.toString().length > 1,\n            [`${prefixCls}-status-${status}`]: !!status,\n            [`${prefixCls}-status-${color}`]: isPresetColor(color),\n        });\n        let statusStyle = this.getStyleWithOffset();\n        if (color && !isPresetColor(color)) {\n            statusStyle = statusStyle || {};\n            statusStyle.background = color;\n        }\n        return hidden ? null : (<ScrollNumber prefixCls={scrollNumberPrefixCls} data-show={!hidden} className={scrollNumberCls} count={displayCount} displayComponent={this.renderDisplayComponent()} // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n         title={this.getScrollNumberTitle()} style={statusStyle} key=\"scrollNumber\"/>);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderBadge}</ConfigConsumer>;\n    }\n}\nBadge.defaultProps = {\n    count: null,\n    showZero: false,\n    dot: false,\n    overflowCount: 99,\n};\n"]},"metadata":{},"sourceType":"module"}