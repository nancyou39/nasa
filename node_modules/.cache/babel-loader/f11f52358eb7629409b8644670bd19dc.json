{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Notification from 'rc-notification';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport CheckCircleOutlined from '@ant-design/icons/CheckCircleOutlined';\nimport CloseCircleOutlined from '@ant-design/icons/CloseCircleOutlined';\nimport ExclamationCircleOutlined from '@ant-design/icons/ExclamationCircleOutlined';\nimport InfoCircleOutlined from '@ant-design/icons/InfoCircleOutlined';\nimport createUseNotification from './hooks/useNotification';\nvar notificationInstance = {};\nvar defaultDuration = 4.5;\nvar defaultTop = 24;\nvar defaultBottom = 24;\nvar defaultPlacement = 'topRight';\nvar defaultGetContainer;\nvar defaultCloseIcon;\n\nfunction setNotificationConfig(options) {\n  var duration = options.duration,\n      placement = options.placement,\n      bottom = options.bottom,\n      top = options.top,\n      getContainer = options.getContainer,\n      closeIcon = options.closeIcon;\n\n  if (duration !== undefined) {\n    defaultDuration = duration;\n  }\n\n  if (placement !== undefined) {\n    defaultPlacement = placement;\n  }\n\n  if (bottom !== undefined) {\n    defaultBottom = bottom;\n  }\n\n  if (top !== undefined) {\n    defaultTop = top;\n  }\n\n  if (getContainer !== undefined) {\n    defaultGetContainer = getContainer;\n  }\n\n  if (closeIcon !== undefined) {\n    defaultCloseIcon = closeIcon;\n  }\n}\n\nfunction getPlacementStyle(placement) {\n  var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultTop;\n  var bottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultBottom;\n  var style;\n\n  switch (placement) {\n    case 'topLeft':\n      style = {\n        left: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'topRight':\n      style = {\n        right: 0,\n        top: top,\n        bottom: 'auto'\n      };\n      break;\n\n    case 'bottomLeft':\n      style = {\n        left: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n\n    default:\n      style = {\n        right: 0,\n        top: 'auto',\n        bottom: bottom\n      };\n      break;\n  }\n\n  return style;\n}\n\nfunction getNotificationInstance(args, callback) {\n  var _args$placement = args.placement,\n      placement = _args$placement === void 0 ? defaultPlacement : _args$placement,\n      top = args.top,\n      bottom = args.bottom,\n      _args$getContainer = args.getContainer,\n      getContainer = _args$getContainer === void 0 ? defaultGetContainer : _args$getContainer,\n      _args$closeIcon = args.closeIcon,\n      closeIcon = _args$closeIcon === void 0 ? defaultCloseIcon : _args$closeIcon;\n  var outerPrefixCls = args.prefixCls || 'ant-notification';\n  var prefixCls = \"\".concat(outerPrefixCls, \"-notice\");\n  var cacheKey = \"\".concat(outerPrefixCls, \"-\").concat(placement);\n  var cacheInstance = notificationInstance[cacheKey];\n\n  if (cacheInstance) {\n    Promise.resolve(cacheInstance).then(function (instance) {\n      callback({\n        prefixCls: prefixCls,\n        instance: instance\n      });\n    });\n    return;\n  }\n\n  var closeIconToRender = React.createElement(\"span\", {\n    className: \"\".concat(outerPrefixCls, \"-close-x\")\n  }, closeIcon || React.createElement(CloseOutlined, {\n    className: \"\".concat(outerPrefixCls, \"-close-icon\")\n  }));\n  notificationInstance[cacheKey] = new Promise(function (resolve) {\n    Notification.newInstance({\n      prefixCls: outerPrefixCls,\n      className: \"\".concat(outerPrefixCls, \"-\").concat(placement),\n      style: getPlacementStyle(placement, top, bottom),\n      getContainer: getContainer,\n      closeIcon: closeIconToRender\n    }, function (notification) {\n      resolve(notification);\n      callback({\n        prefixCls: prefixCls,\n        instance: notification\n      });\n    });\n  });\n}\n\nvar typeToIcon = {\n  success: CheckCircleOutlined,\n  info: InfoCircleOutlined,\n  error: CloseCircleOutlined,\n  warning: ExclamationCircleOutlined\n};\n\nfunction getRCNoticeProps(args, prefixCls) {\n  var duration = args.duration === undefined ? defaultDuration : args.duration;\n  var iconNode = null;\n\n  if (args.icon) {\n    iconNode = React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-icon\")\n    }, args.icon);\n  } else if (args.type) {\n    iconNode = React.createElement(typeToIcon[args.type] || null, {\n      className: \"\".concat(prefixCls, \"-icon \").concat(prefixCls, \"-icon-\").concat(args.type)\n    });\n  }\n\n  var autoMarginTag = !args.description && iconNode ? React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-message-single-line-auto-margin\")\n  }) : null;\n  return {\n    content: React.createElement(\"div\", {\n      className: iconNode ? \"\".concat(prefixCls, \"-with-icon\") : ''\n    }, iconNode, React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message\")\n    }, autoMarginTag, args.message), React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-description\")\n    }, args.description), args.btn ? React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-btn\")\n    }, args.btn) : null),\n    duration: duration,\n    closable: true,\n    onClose: args.onClose,\n    onClick: args.onClick,\n    key: args.key,\n    style: args.style || {},\n    className: args.className\n  };\n}\n\nvar api = {\n  open: function open(args) {\n    getNotificationInstance(args, function (_ref) {\n      var prefixCls = _ref.prefixCls,\n          instance = _ref.instance;\n      instance.notice(getRCNoticeProps(args, prefixCls));\n    });\n  },\n  close: function close(key) {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      return Promise.resolve(notificationInstance[cacheKey]).then(function (instance) {\n        instance.removeNotice(key);\n      });\n    });\n  },\n  config: setNotificationConfig,\n  destroy: function destroy() {\n    Object.keys(notificationInstance).forEach(function (cacheKey) {\n      Promise.resolve(notificationInstance[cacheKey]).then(function (instance) {\n        instance.destroy();\n      });\n      delete notificationInstance[cacheKey]; // lgtm[js/missing-await]\n    });\n  }\n};\n['success', 'info', 'warning', 'error'].forEach(function (type) {\n  api[type] = function (args) {\n    return api.open(_extends(_extends({}, args), {\n      type: type\n    }));\n  };\n});\napi.warn = api.warning;\napi.useNotification = createUseNotification(getNotificationInstance, getRCNoticeProps);\nexport default api;","map":{"version":3,"sources":["notification/index.jsx"],"names":["notificationInstance","defaultDuration","defaultTop","defaultBottom","defaultPlacement","duration","placement","bottom","top","getContainer","closeIcon","options","defaultGetContainer","defaultCloseIcon","style","left","right","args","outerPrefixCls","prefixCls","cacheKey","cacheInstance","Promise","callback","instance","closeIconToRender","Notification","className","getPlacementStyle","resolve","notification","typeToIcon","success","info","error","warning","ExclamationCircleOutlined","iconNode","autoMarginTag","content","closable","onClose","onClick","key","api","open","getNotificationInstance","getRCNoticeProps","close","Object","config","destroy","type","createUseNotification"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport CloseOutlined from '@ant-design/icons/CloseOutlined';\nimport CheckCircleOutlined from '@ant-design/icons/CheckCircleOutlined';\nimport CloseCircleOutlined from '@ant-design/icons/CloseCircleOutlined';\nimport ExclamationCircleOutlined from '@ant-design/icons/ExclamationCircleOutlined';\nimport InfoCircleOutlined from '@ant-design/icons/InfoCircleOutlined';\nimport createUseNotification from './hooks/useNotification';\nconst notificationInstance = {};\nlet defaultDuration = 4.5;\nlet defaultTop = 24;\nlet defaultBottom = 24;\nlet defaultPlacement = 'topRight';\nlet defaultGetContainer;\nlet defaultCloseIcon;\nfunction setNotificationConfig(options) {\n    const { duration, placement, bottom, top, getContainer, closeIcon } = options;\n    if (duration !== undefined) {\n        defaultDuration = duration;\n    }\n    if (placement !== undefined) {\n        defaultPlacement = placement;\n    }\n    if (bottom !== undefined) {\n        defaultBottom = bottom;\n    }\n    if (top !== undefined) {\n        defaultTop = top;\n    }\n    if (getContainer !== undefined) {\n        defaultGetContainer = getContainer;\n    }\n    if (closeIcon !== undefined) {\n        defaultCloseIcon = closeIcon;\n    }\n}\nfunction getPlacementStyle(placement, top = defaultTop, bottom = defaultBottom) {\n    let style;\n    switch (placement) {\n        case 'topLeft':\n            style = {\n                left: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'topRight':\n            style = {\n                right: 0,\n                top,\n                bottom: 'auto',\n            };\n            break;\n        case 'bottomLeft':\n            style = {\n                left: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n        default:\n            style = {\n                right: 0,\n                top: 'auto',\n                bottom,\n            };\n            break;\n    }\n    return style;\n}\nfunction getNotificationInstance(args, callback) {\n    const { placement = defaultPlacement, top, bottom, getContainer = defaultGetContainer, closeIcon = defaultCloseIcon, } = args;\n    const outerPrefixCls = args.prefixCls || 'ant-notification';\n    const prefixCls = `${outerPrefixCls}-notice`;\n    const cacheKey = `${outerPrefixCls}-${placement}`;\n    const cacheInstance = notificationInstance[cacheKey];\n    if (cacheInstance) {\n        Promise.resolve(cacheInstance).then(instance => {\n            callback({ prefixCls, instance });\n        });\n        return;\n    }\n    const closeIconToRender = (<span className={`${outerPrefixCls}-close-x`}>\n      {closeIcon || <CloseOutlined className={`${outerPrefixCls}-close-icon`}/>}\n    </span>);\n    notificationInstance[cacheKey] = new Promise(resolve => {\n        Notification.newInstance({\n            prefixCls: outerPrefixCls,\n            className: `${outerPrefixCls}-${placement}`,\n            style: getPlacementStyle(placement, top, bottom),\n            getContainer,\n            closeIcon: closeIconToRender,\n        }, notification => {\n            resolve(notification);\n            callback({\n                prefixCls,\n                instance: notification,\n            });\n        });\n    });\n}\nconst typeToIcon = {\n    success: CheckCircleOutlined,\n    info: InfoCircleOutlined,\n    error: CloseCircleOutlined,\n    warning: ExclamationCircleOutlined,\n};\nfunction getRCNoticeProps(args, prefixCls) {\n    const duration = args.duration === undefined ? defaultDuration : args.duration;\n    let iconNode = null;\n    if (args.icon) {\n        iconNode = <span className={`${prefixCls}-icon`}>{args.icon}</span>;\n    }\n    else if (args.type) {\n        iconNode = React.createElement(typeToIcon[args.type] || null, {\n            className: `${prefixCls}-icon ${prefixCls}-icon-${args.type}`,\n        });\n    }\n    const autoMarginTag = !args.description && iconNode ? (<span className={`${prefixCls}-message-single-line-auto-margin`}/>) : null;\n    return {\n        content: (<div className={iconNode ? `${prefixCls}-with-icon` : ''}>\n        {iconNode}\n        <div className={`${prefixCls}-message`}>\n          {autoMarginTag}\n          {args.message}\n        </div>\n        <div className={`${prefixCls}-description`}>{args.description}</div>\n        {args.btn ? <span className={`${prefixCls}-btn`}>{args.btn}</span> : null}\n      </div>),\n        duration,\n        closable: true,\n        onClose: args.onClose,\n        onClick: args.onClick,\n        key: args.key,\n        style: args.style || {},\n        className: args.className,\n    };\n}\nconst api = {\n    open: (args) => {\n        getNotificationInstance(args, ({ prefixCls, instance }) => {\n            instance.notice(getRCNoticeProps(args, prefixCls));\n        });\n    },\n    close(key) {\n        Object.keys(notificationInstance).forEach(cacheKey => Promise.resolve(notificationInstance[cacheKey]).then(instance => {\n            instance.removeNotice(key);\n        }));\n    },\n    config: setNotificationConfig,\n    destroy() {\n        Object.keys(notificationInstance).forEach(cacheKey => {\n            Promise.resolve(notificationInstance[cacheKey]).then(instance => {\n                instance.destroy();\n            });\n            delete notificationInstance[cacheKey]; // lgtm[js/missing-await]\n        });\n    },\n};\n['success', 'info', 'warning', 'error'].forEach(type => {\n    api[type] = (args) => api.open(Object.assign(Object.assign({}, args), { type }));\n});\napi.warn = api.warning;\napi.useNotification = createUseNotification(getNotificationInstance, getRCNoticeProps);\nexport default api;\n"]},"metadata":{},"sourceType":"module"}