{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { ConfigConsumer } from '../config-provider';\nimport { tuple } from '../_util/type';\nvar SpinSizes = tuple('small', 'default', 'large'); // Render indicator\n\nvar defaultIndicator = null;\n\nfunction renderIndicator(prefixCls, props) {\n  var indicator = props.indicator;\n  var dotClassName = \"\".concat(prefixCls, \"-dot\"); // should not be render default indicator when indicator value is null\n\n  if (indicator === null) {\n    return null;\n  }\n\n  if (React.isValidElement(indicator)) {\n    return React.cloneElement(indicator, {\n      className: classNames(indicator.props.className, dotClassName)\n    });\n  }\n\n  if (React.isValidElement(defaultIndicator)) {\n    return React.cloneElement(defaultIndicator, {\n      className: classNames(defaultIndicator.props.className, dotClassName)\n    });\n  }\n\n  return React.createElement(\"span\", {\n    className: classNames(dotClassName, \"\".concat(prefixCls, \"-dot-spin\"))\n  }, React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }), React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }), React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }), React.createElement(\"i\", {\n    className: \"\".concat(prefixCls, \"-dot-item\")\n  }));\n}\n\nfunction shouldDelay(spinning, delay) {\n  return !!spinning && !!delay && !isNaN(Number(delay));\n}\n\nvar Spin =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Spin, _React$Component);\n\n  function Spin(props) {\n    var _this;\n\n    _classCallCheck(this, Spin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Spin).call(this, props));\n\n    _this.debouncifyUpdateSpinning = function (props) {\n      var _ref = props || _this.props,\n          delay = _ref.delay;\n\n      if (delay) {\n        _this.cancelExistingSpin();\n\n        _this.updateSpinning = debounce(_this.originalUpdateSpinning, delay);\n      }\n    };\n\n    _this.updateSpinning = function () {\n      var spinning = _this.props.spinning;\n      var currentSpinning = _this.state.spinning;\n\n      if (currentSpinning !== spinning) {\n        _this.setState({\n          spinning: spinning\n        });\n      }\n    };\n\n    _this.renderSpin = function (_ref2) {\n      var _classNames;\n\n      var getPrefixCls = _ref2.getPrefixCls,\n          direction = _ref2.direction;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          size = _a.size,\n          tip = _a.tip,\n          wrapperClassName = _a.wrapperClassName,\n          style = _a.style,\n          restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"tip\", \"wrapperClassName\", \"style\"]);\n\n      var spinning = _this.state.spinning;\n      var prefixCls = getPrefixCls('spin', customizePrefixCls);\n      var spinClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-spinning\"), spinning), _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-text\"), !!tip), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className); // fix https://fb.me/react-unknown-prop\n\n      var divProps = omit(restProps, ['spinning', 'delay', 'indicator']);\n      var spinElement = React.createElement(\"div\", _extends({}, divProps, {\n        style: style,\n        className: spinClassName\n      }), renderIndicator(prefixCls, _this.props), tip ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-text\")\n      }, tip) : null);\n\n      if (_this.isNestedPattern()) {\n        var containerClassName = classNames(\"\".concat(prefixCls, \"-container\"), _defineProperty({}, \"\".concat(prefixCls, \"-blur\"), spinning));\n        return React.createElement(\"div\", _extends({}, divProps, {\n          className: classNames(\"\".concat(prefixCls, \"-nested-loading\"), wrapperClassName)\n        }), spinning && React.createElement(\"div\", {\n          key: \"loading\"\n        }, spinElement), React.createElement(\"div\", {\n          className: containerClassName,\n          key: \"container\"\n        }, _this.props.children));\n      }\n\n      return spinElement;\n    };\n\n    var spinning = props.spinning,\n        delay = props.delay;\n    var shouldBeDelayed = shouldDelay(spinning, delay);\n    _this.state = {\n      spinning: spinning && !shouldBeDelayed\n    };\n    _this.originalUpdateSpinning = _this.updateSpinning;\n\n    _this.debouncifyUpdateSpinning(props);\n\n    return _this;\n  }\n\n  _createClass(Spin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateSpinning();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.debouncifyUpdateSpinning();\n      this.updateSpinning();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelExistingSpin();\n    }\n  }, {\n    key: \"cancelExistingSpin\",\n    value: function cancelExistingSpin() {\n      var updateSpinning = this.updateSpinning;\n\n      if (updateSpinning && updateSpinning.cancel) {\n        updateSpinning.cancel();\n      }\n    }\n  }, {\n    key: \"isNestedPattern\",\n    value: function isNestedPattern() {\n      return !!(this.props && this.props.children);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderSpin);\n    }\n  }], [{\n    key: \"setDefaultIndicator\",\n    value: function setDefaultIndicator(indicator) {\n      defaultIndicator = indicator;\n    }\n  }]);\n\n  return Spin;\n}(React.Component);\n\nSpin.defaultProps = {\n  spinning: true,\n  size: 'default',\n  wrapperClassName: ''\n};\nexport default Spin;","map":{"version":3,"sources":["spin/index.jsx"],"names":["__rest","t","Object","e","s","i","p","SpinSizes","tuple","defaultIndicator","indicator","props","dotClassName","React","className","classNames","isNaN","Number","Spin","Component","delay","debounce","spinning","currentSpinning","getPrefixCls","direction","customizePrefixCls","size","tip","wrapperClassName","style","_a","restProps","prefixCls","spinClassName","divProps","omit","spinElement","renderIndicator","containerClassName","shouldBeDelayed","shouldDelay","updateSpinning"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { ConfigConsumer } from '../config-provider';\nimport { tuple } from '../_util/type';\nconst SpinSizes = tuple('small', 'default', 'large');\n// Render indicator\nlet defaultIndicator = null;\nfunction renderIndicator(prefixCls, props) {\n    const { indicator } = props;\n    const dotClassName = `${prefixCls}-dot`;\n    // should not be render default indicator when indicator value is null\n    if (indicator === null) {\n        return null;\n    }\n    if (React.isValidElement(indicator)) {\n        return React.cloneElement(indicator, {\n            className: classNames(indicator.props.className, dotClassName),\n        });\n    }\n    if (React.isValidElement(defaultIndicator)) {\n        return React.cloneElement(defaultIndicator, {\n            className: classNames(defaultIndicator.props.className, dotClassName),\n        });\n    }\n    return (<span className={classNames(dotClassName, `${prefixCls}-dot-spin`)}>\n      <i className={`${prefixCls}-dot-item`}/>\n      <i className={`${prefixCls}-dot-item`}/>\n      <i className={`${prefixCls}-dot-item`}/>\n      <i className={`${prefixCls}-dot-item`}/>\n    </span>);\n}\nfunction shouldDelay(spinning, delay) {\n    return !!spinning && !!delay && !isNaN(Number(delay));\n}\nclass Spin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.debouncifyUpdateSpinning = (props) => {\n            const { delay } = props || this.props;\n            if (delay) {\n                this.cancelExistingSpin();\n                this.updateSpinning = debounce(this.originalUpdateSpinning, delay);\n            }\n        };\n        this.updateSpinning = () => {\n            const { spinning } = this.props;\n            const { spinning: currentSpinning } = this.state;\n            if (currentSpinning !== spinning) {\n                this.setState({ spinning });\n            }\n        };\n        this.renderSpin = ({ getPrefixCls, direction }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, className, size, tip, wrapperClassName, style } = _a, restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"tip\", \"wrapperClassName\", \"style\"]);\n            const { spinning } = this.state;\n            const prefixCls = getPrefixCls('spin', customizePrefixCls);\n            const spinClassName = classNames(prefixCls, {\n                [`${prefixCls}-sm`]: size === 'small',\n                [`${prefixCls}-lg`]: size === 'large',\n                [`${prefixCls}-spinning`]: spinning,\n                [`${prefixCls}-show-text`]: !!tip,\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            }, className);\n            // fix https://fb.me/react-unknown-prop\n            const divProps = omit(restProps, ['spinning', 'delay', 'indicator']);\n            const spinElement = (<div {...divProps} style={style} className={spinClassName}>\n        {renderIndicator(prefixCls, this.props)}\n        {tip ? <div className={`${prefixCls}-text`}>{tip}</div> : null}\n      </div>);\n            if (this.isNestedPattern()) {\n                const containerClassName = classNames(`${prefixCls}-container`, {\n                    [`${prefixCls}-blur`]: spinning,\n                });\n                return (<div {...divProps} className={classNames(`${prefixCls}-nested-loading`, wrapperClassName)}>\n          {spinning && <div key=\"loading\">{spinElement}</div>}\n          <div className={containerClassName} key=\"container\">\n            {this.props.children}\n          </div>\n        </div>);\n            }\n            return spinElement;\n        };\n        const { spinning, delay } = props;\n        const shouldBeDelayed = shouldDelay(spinning, delay);\n        this.state = {\n            spinning: spinning && !shouldBeDelayed,\n        };\n        this.originalUpdateSpinning = this.updateSpinning;\n        this.debouncifyUpdateSpinning(props);\n    }\n    static setDefaultIndicator(indicator) {\n        defaultIndicator = indicator;\n    }\n    componentDidMount() {\n        this.updateSpinning();\n    }\n    componentDidUpdate() {\n        this.debouncifyUpdateSpinning();\n        this.updateSpinning();\n    }\n    componentWillUnmount() {\n        this.cancelExistingSpin();\n    }\n    cancelExistingSpin() {\n        const { updateSpinning } = this;\n        if (updateSpinning && updateSpinning.cancel) {\n            updateSpinning.cancel();\n        }\n    }\n    isNestedPattern() {\n        return !!(this.props && this.props.children);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSpin}</ConfigConsumer>;\n    }\n}\nSpin.defaultProps = {\n    spinning: true,\n    size: 'default',\n    wrapperClassName: '',\n};\nexport default Spin;\n"]},"metadata":{},"sourceType":"module"}