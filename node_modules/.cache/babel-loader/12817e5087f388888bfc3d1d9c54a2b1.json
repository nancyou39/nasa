{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport warning from 'warning';\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport NameMap from './utils/NameMap';\nimport { defaultValidateMessages } from './utils/messages';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      getInternalHooks: _this.getInternalHooks\n    };\n  }; // ======================== Internal Hooks ========================\n\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n  /**\n   * First time `setInitialValues` should update store with initial value\n   */\n\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      _this.store = setValues({}, initialValues, _this.store);\n    }\n  };\n\n  this.getInitialValue = function (namePath) {\n    return getValue(_this.initialValues, namePath);\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.formHooked) {\n      warning(false, 'Instance created by `useForm` is not connect to any Form element. Forget to pass `form` prop?');\n    }\n  }; // ============================ Fields ============================\n\n  /**\n   * Get registered field entities.\n   * @param pure Only return field which has a `name`. Default: false\n   */\n\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath();\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var testTouched = function testTouched(field) {\n      // Not provide `nameList` will check all the fields\n      if (!namePathList) {\n        return field.isFieldTouched();\n      }\n\n      var fieldNamePath = field.getNamePath();\n\n      if (containsNamePath(namePathList, fieldNamePath)) {\n        return field.isFieldTouched();\n      }\n\n      return isAllFieldsTouched;\n    };\n\n    return isAllFieldsTouched ? _this.getFieldEntities(true).every(testTouched) : _this.getFieldEntities(true).some(testTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.store = setValues({}, _this.initialValues);\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.store = setValue(_this.store, namePath, initialValue);\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, [\"name\", \"errors\"]);\n\n      var namePath = getNamePath(name); // Value\n\n      if ('value' in data) {\n        _this.store = setValue(_this.store, namePath, data.value);\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n  };\n\n  this.getFields = function () {\n    return _this.getFieldEntities(true).map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n      return _objectSpread({}, meta, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n    });\n  }; // =========================== Observer ===========================\n\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity);\n\n    return function () {\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      });\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      _this.getFieldEntities().forEach(function (_ref) {\n        var onStoreChange = _ref.onStoreChange;\n        onStoreChange(prevStore, namePathList, info);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n    _this.store = setValue(_this.store, namePath, value);\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    }); // Notify dependencies children with parent update\n\n\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    _this.validateFields(childrenFields);\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    }); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.store);\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  }; // Let all child Field get update.\n\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      _this.store = setValues(_this.store, store);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldTouched() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n\n      var changedFields = fields.filter(function (_ref2) {\n        var fieldName = _ref2.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  }; // =========================== Validate ===========================\n\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread({}, defaultValidateMessages, {}, _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: []\n          };\n        }).catch(function (errors) {\n          return Promise.reject({\n            name: fieldNamePath,\n            errors: errors\n          });\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref3) {\n        var name = _ref3.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  }; // ============================ Submit ============================\n\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n};\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;","map":{"version":3,"sources":["/Users/nancyou/Desktop/nasa/node_modules/rc-field-form/es/useForm.js"],"names":["_slicedToArray","_toConsumableArray","_defineProperty","_objectWithoutProperties","_classCallCheck","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","React","warning","HOOK_MARK","allPromiseFinish","NameMap","defaultValidateMessages","cloneByNamePathList","containsNamePath","getNamePath","getValue","setValue","setValues","FormStore","forceRootUpdate","_this","formHooked","subscribable","store","fieldEntities","initialValues","callbacks","validateMessages","lastValidatePromise","getForm","getFieldValue","getFieldsValue","getFieldError","getFieldsError","isFieldsTouched","isFieldTouched","isFieldValidating","isFieldsValidating","resetFields","setFields","setFieldsValue","validateFields","submit","getInternalHooks","dispatch","registerField","useSubscribe","setInitialValues","setCallbacks","setValidateMessages","getFields","init","getInitialValue","namePath","warningUnhooked","process","env","NODE_ENV","getFieldEntities","pure","undefined","field","getFieldsMap","cache","set","getFieldEntitiesForNamePathList","nameList","map","name","get","INVALIDATE_NAME_PATH","filterFunc","Array","isArray","filteredNameList","entity","meta","getMeta","index","errors","getErrors","fieldError","_len","args","_key","arg0","arg1","namePathList","isAllFieldsTouched","testTouched","fieldNamePath","every","some","testField","prevStore","notifyObservers","type","initialValue","fields","fieldData","data","value","item","action","updateValue","_namePath","triggerName","info","_ref","onStoreChange","childrenFields","getDependencyChildrenFields","relatedFields","concat","onValuesChange","changedValues","triggerOnFieldsChange","rootNamePath","children","Set","dependencies2fields","dependencies","props","dependency","dependencyNamePath","update","add","fillChildren","has","onFieldsChange","changedFields","_ref2","fieldName","options","provideNameList","promiseList","rules","promise","validateRules","then","catch","Promise","reject","summaryPromise","results","resultNamePathList","_ref3","returnPromise","resolve","errorList","result","values","errorFields","outOfDate","e","onFinish","err","console","error","onFinishFailed","useForm","form","formRef","useRef","_React$useState","useState","_React$useState2","forceUpdate","current","forceReRender","formStore"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAOC,eAAP,MAA4B,2CAA5B;;AAEA,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEvB,QAAAA,eAAe,CAACiB,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIhB,MAAM,CAACiB,yBAAX,EAAsC;AAAEjB,MAAAA,MAAM,CAACkB,gBAAP,CAAwBR,MAAxB,EAAgCV,MAAM,CAACiB,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACI,MAAM,CAACc,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACmB,cAAP,CAAsBT,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,OAAO,KAAKU,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAAgDC,WAAhD,EAA6DC,QAA7D,EAAuEC,QAAvE,EAAiFC,SAAjF,QAAkG,mBAAlG;AACA,OAAO,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,eAAnB,EAAoC;AACzD,MAAIC,KAAK,GAAG,IAAZ;;AAEAvC,EAAAA,eAAe,CAAC,IAAD,EAAOqC,SAAP,CAAf;;AAEA,OAAKG,UAAL,GAAkB,KAAlB;AACA,OAAKC,YAAL,GAAoB,IAApB;AACA,OAAKC,KAAL,GAAa,EAAb;AACA,OAAKC,aAAL,GAAqB,EAArB;AACA,OAAKC,aAAL,GAAqB,EAArB;AACA,OAAKC,SAAL,GAAiB,EAAjB;AACA,OAAKC,gBAAL,GAAwB,IAAxB;AACA,OAAKC,mBAAL,GAA2B,IAA3B;;AAEA,OAAKC,OAAL,GAAe,YAAY;AACzB,WAAO;AACLC,MAAAA,aAAa,EAAEV,KAAK,CAACU,aADhB;AAELC,MAAAA,cAAc,EAAEX,KAAK,CAACW,cAFjB;AAGLC,MAAAA,aAAa,EAAEZ,KAAK,CAACY,aAHhB;AAILC,MAAAA,cAAc,EAAEb,KAAK,CAACa,cAJjB;AAKLC,MAAAA,eAAe,EAAEd,KAAK,CAACc,eALlB;AAMLC,MAAAA,cAAc,EAAEf,KAAK,CAACe,cANjB;AAOLC,MAAAA,iBAAiB,EAAEhB,KAAK,CAACgB,iBAPpB;AAQLC,MAAAA,kBAAkB,EAAEjB,KAAK,CAACiB,kBARrB;AASLC,MAAAA,WAAW,EAAElB,KAAK,CAACkB,WATd;AAULC,MAAAA,SAAS,EAAEnB,KAAK,CAACmB,SAVZ;AAWLC,MAAAA,cAAc,EAAEpB,KAAK,CAACoB,cAXjB;AAYLC,MAAAA,cAAc,EAAErB,KAAK,CAACqB,cAZjB;AAaLC,MAAAA,MAAM,EAAEtB,KAAK,CAACsB,MAbT;AAcLC,MAAAA,gBAAgB,EAAEvB,KAAK,CAACuB;AAdnB,KAAP;AAgBD,GAjBD,CAdyD,CA+BtD;;;AAGH,OAAKA,gBAAL,GAAwB,UAAUzC,GAAV,EAAe;AACrC,QAAIA,GAAG,KAAKM,SAAZ,EAAuB;AACrBY,MAAAA,KAAK,CAACC,UAAN,GAAmB,IAAnB;AACA,aAAO;AACLuB,QAAAA,QAAQ,EAAExB,KAAK,CAACwB,QADX;AAELC,QAAAA,aAAa,EAAEzB,KAAK,CAACyB,aAFhB;AAGLC,QAAAA,YAAY,EAAE1B,KAAK,CAAC0B,YAHf;AAILC,QAAAA,gBAAgB,EAAE3B,KAAK,CAAC2B,gBAJnB;AAKLC,QAAAA,YAAY,EAAE5B,KAAK,CAAC4B,YALf;AAMLC,QAAAA,mBAAmB,EAAE7B,KAAK,CAAC6B,mBANtB;AAOLC,QAAAA,SAAS,EAAE9B,KAAK,CAAC8B;AAPZ,OAAP;AASD;;AAED3C,IAAAA,OAAO,CAAC,KAAD,EAAQ,iEAAR,CAAP;AACA,WAAO,IAAP;AACD,GAhBD;;AAkBA,OAAKuC,YAAL,GAAoB,UAAUxB,YAAV,EAAwB;AAC1CF,IAAAA,KAAK,CAACE,YAAN,GAAqBA,YAArB;AACD,GAFD;AAGA;;;;;AAKA,OAAKyB,gBAAL,GAAwB,UAAUtB,aAAV,EAAyB0B,IAAzB,EAA+B;AACrD/B,IAAAA,KAAK,CAACK,aAAN,GAAsBA,aAAa,IAAI,EAAvC;;AAEA,QAAI0B,IAAJ,EAAU;AACR/B,MAAAA,KAAK,CAACG,KAAN,GAAcN,SAAS,CAAC,EAAD,EAAKQ,aAAL,EAAoBL,KAAK,CAACG,KAA1B,CAAvB;AACD;AACF,GAND;;AAQA,OAAK6B,eAAL,GAAuB,UAAUC,QAAV,EAAoB;AACzC,WAAOtC,QAAQ,CAACK,KAAK,CAACK,aAAP,EAAsB4B,QAAtB,CAAf;AACD,GAFD;;AAIA,OAAKL,YAAL,GAAoB,UAAUtB,SAAV,EAAqB;AACvCN,IAAAA,KAAK,CAACM,SAAN,GAAkBA,SAAlB;AACD,GAFD;;AAIA,OAAKuB,mBAAL,GAA2B,UAAUtB,gBAAV,EAA4B;AACrDP,IAAAA,KAAK,CAACO,gBAAN,GAAyBA,gBAAzB;AACD,GAFD;;AAIA,OAAK2B,eAAL,GAAuB,YAAY;AACjC,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACrC,KAAK,CAACC,UAApD,EAAgE;AAC9Dd,MAAAA,OAAO,CAAC,KAAD,EAAQ,+FAAR,CAAP;AACD;AACF,GAJD,CAhFyD,CAoFtD;;AAEH;;;;;;AAMA,OAAKmD,gBAAL,GAAwB,YAAY;AAClC,QAAIC,IAAI,GAAG7D,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB8D,SAAzC,GAAqD9D,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA/E;;AAEA,QAAI,CAAC6D,IAAL,EAAW;AACT,aAAOvC,KAAK,CAACI,aAAb;AACD;;AAED,WAAOJ,KAAK,CAACI,aAAN,CAAoBnC,MAApB,CAA2B,UAAUwE,KAAV,EAAiB;AACjD,aAAOA,KAAK,CAAC/C,WAAN,GAAoBf,MAA3B;AACD,KAFM,CAAP;AAGD,GAVD;;AAYA,OAAK+D,YAAL,GAAoB,YAAY;AAC9B,QAAIH,IAAI,GAAG7D,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB8D,SAAzC,GAAqD9D,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA/E;AACA,QAAIiE,KAAK,GAAG,IAAIrD,OAAJ,EAAZ;;AAEAU,IAAAA,KAAK,CAACsC,gBAAN,CAAuBC,IAAvB,EAA6B1D,OAA7B,CAAqC,UAAU4D,KAAV,EAAiB;AACpD,UAAIR,QAAQ,GAAGQ,KAAK,CAAC/C,WAAN,EAAf;AACAiD,MAAAA,KAAK,CAACC,GAAN,CAAUX,QAAV,EAAoBQ,KAApB;AACD,KAHD;;AAKA,WAAOE,KAAP;AACD,GAVD;;AAYA,OAAKE,+BAAL,GAAuC,UAAUC,QAAV,EAAoB;AACzD,QAAI,CAACA,QAAL,EAAe;AACb,aAAO9C,KAAK,CAACsC,gBAAN,CAAuB,IAAvB,CAAP;AACD;;AAED,QAAIK,KAAK,GAAG3C,KAAK,CAAC0C,YAAN,CAAmB,IAAnB,CAAZ;;AAEA,WAAOI,QAAQ,CAACC,GAAT,CAAa,UAAUC,IAAV,EAAgB;AAClC,UAAIf,QAAQ,GAAGvC,WAAW,CAACsD,IAAD,CAA1B;AACA,aAAOL,KAAK,CAACM,GAAN,CAAUhB,QAAV,KAAuB;AAC5BiB,QAAAA,oBAAoB,EAAExD,WAAW,CAACsD,IAAD;AADL,OAA9B;AAGD,KALM,CAAP;AAMD,GAbD;;AAeA,OAAKrC,cAAL,GAAsB,UAAUmC,QAAV,EAAoBK,UAApB,EAAgC;AACpDnD,IAAAA,KAAK,CAACkC,eAAN;;AAEA,QAAIY,QAAQ,KAAK,IAAb,IAAqB,CAACK,UAA1B,EAAsC;AACpC,aAAOnD,KAAK,CAACG,KAAb;AACD;;AAED,QAAIC,aAAa,GAAGJ,KAAK,CAAC6C,+BAAN,CAAsCO,KAAK,CAACC,OAAN,CAAcP,QAAd,IAA0BA,QAA1B,GAAqC,IAA3E,CAApB;;AAEA,QAAIQ,gBAAgB,GAAG,EAAvB;AACAlD,IAAAA,aAAa,CAACvB,OAAd,CAAsB,UAAU0E,MAAV,EAAkB;AACtC,UAAItB,QAAQ,GAAG,0BAA0BsB,MAA1B,GAAmCA,MAAM,CAACL,oBAA1C,GAAiEK,MAAM,CAAC7D,WAAP,EAAhF;;AAEA,UAAI,CAACyD,UAAL,EAAiB;AACfG,QAAAA,gBAAgB,CAACjF,IAAjB,CAAsB4D,QAAtB;AACD,OAFD,MAEO;AACL,YAAIuB,IAAI,GAAG,aAAaD,MAAb,GAAsBA,MAAM,CAACE,OAAP,EAAtB,GAAyC,IAApD;;AAEA,YAAIN,UAAU,CAACK,IAAD,CAAd,EAAsB;AACpBF,UAAAA,gBAAgB,CAACjF,IAAjB,CAAsB4D,QAAtB;AACD;AACF;AACF,KAZD;AAaA,WAAOzC,mBAAmB,CAACQ,KAAK,CAACG,KAAP,EAAcmD,gBAAgB,CAACP,GAAjB,CAAqBrD,WAArB,CAAd,CAA1B;AACD,GAxBD;;AA0BA,OAAKgB,aAAL,GAAqB,UAAUsC,IAAV,EAAgB;AACnChD,IAAAA,KAAK,CAACkC,eAAN;;AAEA,QAAID,QAAQ,GAAGvC,WAAW,CAACsD,IAAD,CAA1B;AACA,WAAOrD,QAAQ,CAACK,KAAK,CAACG,KAAP,EAAc8B,QAAd,CAAf;AACD,GALD;;AAOA,OAAKpB,cAAL,GAAsB,UAAUiC,QAAV,EAAoB;AACxC9C,IAAAA,KAAK,CAACkC,eAAN;;AAEA,QAAI9B,aAAa,GAAGJ,KAAK,CAAC6C,+BAAN,CAAsCC,QAAtC,CAApB;;AAEA,WAAO1C,aAAa,CAAC2C,GAAd,CAAkB,UAAUQ,MAAV,EAAkBG,KAAlB,EAAyB;AAChD,UAAIH,MAAM,IAAI,EAAE,0BAA0BA,MAA5B,CAAd,EAAmD;AACjD,eAAO;AACLP,UAAAA,IAAI,EAAEO,MAAM,CAAC7D,WAAP,EADD;AAELiE,UAAAA,MAAM,EAAEJ,MAAM,CAACK,SAAP;AAFH,SAAP;AAID;;AAED,aAAO;AACLZ,QAAAA,IAAI,EAAEtD,WAAW,CAACoD,QAAQ,CAACY,KAAD,CAAT,CADZ;AAELC,QAAAA,MAAM,EAAE;AAFH,OAAP;AAID,KAZM,CAAP;AAaD,GAlBD;;AAoBA,OAAK/C,aAAL,GAAqB,UAAUoC,IAAV,EAAgB;AACnChD,IAAAA,KAAK,CAACkC,eAAN;;AAEA,QAAID,QAAQ,GAAGvC,WAAW,CAACsD,IAAD,CAA1B;;AAEA,QAAIa,UAAU,GAAG7D,KAAK,CAACa,cAAN,CAAqB,CAACoB,QAAD,CAArB,EAAiC,CAAjC,CAAjB;;AAEA,WAAO4B,UAAU,CAACF,MAAlB;AACD,GARD;;AAUA,OAAK7C,eAAL,GAAuB,YAAY;AACjCd,IAAAA,KAAK,CAACkC,eAAN;;AAEA,SAAK,IAAI4B,IAAI,GAAGpF,SAAS,CAACC,MAArB,EAA6BoF,IAAI,GAAG,IAAIX,KAAJ,CAAUU,IAAV,CAApC,EAAqDE,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGF,IAA3E,EAAiFE,IAAI,EAArF,EAAyF;AACvFD,MAAAA,IAAI,CAACC,IAAD,CAAJ,GAAatF,SAAS,CAACsF,IAAD,CAAtB;AACD;;AAED,QAAIC,IAAI,GAAGF,IAAI,CAAC,CAAD,CAAf;AAAA,QACIG,IAAI,GAAGH,IAAI,CAAC,CAAD,CADf;AAEA,QAAII,YAAJ;AACA,QAAIC,kBAAkB,GAAG,KAAzB;;AAEA,QAAIL,IAAI,CAACpF,MAAL,KAAgB,CAApB,EAAuB;AACrBwF,MAAAA,YAAY,GAAG,IAAf;AACD,KAFD,MAEO,IAAIJ,IAAI,CAACpF,MAAL,KAAgB,CAApB,EAAuB;AAC5B,UAAIyE,KAAK,CAACC,OAAN,CAAcY,IAAd,CAAJ,EAAyB;AACvBE,QAAAA,YAAY,GAAGF,IAAI,CAAClB,GAAL,CAASrD,WAAT,CAAf;AACA0E,QAAAA,kBAAkB,GAAG,KAArB;AACD,OAHD,MAGO;AACLD,QAAAA,YAAY,GAAG,IAAf;AACAC,QAAAA,kBAAkB,GAAGH,IAArB;AACD;AACF,KARM,MAQA;AACLE,MAAAA,YAAY,GAAGF,IAAI,CAAClB,GAAL,CAASrD,WAAT,CAAf;AACA0E,MAAAA,kBAAkB,GAAGF,IAArB;AACD;;AAED,QAAIG,WAAW,GAAG,SAASA,WAAT,CAAqB5B,KAArB,EAA4B;AAC5C;AACA,UAAI,CAAC0B,YAAL,EAAmB;AACjB,eAAO1B,KAAK,CAAC1B,cAAN,EAAP;AACD;;AAED,UAAIuD,aAAa,GAAG7B,KAAK,CAAC/C,WAAN,EAApB;;AAEA,UAAID,gBAAgB,CAAC0E,YAAD,EAAeG,aAAf,CAApB,EAAmD;AACjD,eAAO7B,KAAK,CAAC1B,cAAN,EAAP;AACD;;AAED,aAAOqD,kBAAP;AACD,KAbD;;AAeA,WAAOA,kBAAkB,GAAGpE,KAAK,CAACsC,gBAAN,CAAuB,IAAvB,EAA6BiC,KAA7B,CAAmCF,WAAnC,CAAH,GAAqDrE,KAAK,CAACsC,gBAAN,CAAuB,IAAvB,EAA6BkC,IAA7B,CAAkCH,WAAlC,CAA9E;AACD,GA3CD;;AA6CA,OAAKtD,cAAL,GAAsB,UAAUiC,IAAV,EAAgB;AACpChD,IAAAA,KAAK,CAACkC,eAAN;;AAEA,WAAOlC,KAAK,CAACc,eAAN,CAAsB,CAACkC,IAAD,CAAtB,CAAP;AACD,GAJD;;AAMA,OAAK/B,kBAAL,GAA0B,UAAU6B,QAAV,EAAoB;AAC5C9C,IAAAA,KAAK,CAACkC,eAAN;;AAEA,QAAI9B,aAAa,GAAGJ,KAAK,CAACsC,gBAAN,EAApB;;AAEA,QAAI,CAACQ,QAAL,EAAe;AACb,aAAO1C,aAAa,CAACoE,IAAd,CAAmB,UAAUC,SAAV,EAAqB;AAC7C,eAAOA,SAAS,CAACzD,iBAAV,EAAP;AACD,OAFM,CAAP;AAGD;;AAED,QAAImD,YAAY,GAAGrB,QAAQ,CAACC,GAAT,CAAarD,WAAb,CAAnB;AACA,WAAOU,aAAa,CAACoE,IAAd,CAAmB,UAAUC,SAAV,EAAqB;AAC7C,UAAIH,aAAa,GAAGG,SAAS,CAAC/E,WAAV,EAApB;AACA,aAAOD,gBAAgB,CAAC0E,YAAD,EAAeG,aAAf,CAAhB,IAAiDG,SAAS,CAACzD,iBAAV,EAAxD;AACD,KAHM,CAAP;AAID,GAhBD;;AAkBA,OAAKA,iBAAL,GAAyB,UAAUgC,IAAV,EAAgB;AACvChD,IAAAA,KAAK,CAACkC,eAAN;;AAEA,WAAOlC,KAAK,CAACiB,kBAAN,CAAyB,CAAC+B,IAAD,CAAzB,CAAP;AACD,GAJD;;AAMA,OAAK9B,WAAL,GAAmB,UAAU4B,QAAV,EAAoB;AACrC9C,IAAAA,KAAK,CAACkC,eAAN;;AAEA,QAAIwC,SAAS,GAAG1E,KAAK,CAACG,KAAtB;;AAEA,QAAI,CAAC2C,QAAL,EAAe;AACb9C,MAAAA,KAAK,CAACG,KAAN,GAAcN,SAAS,CAAC,EAAD,EAAKG,KAAK,CAACK,aAAX,CAAvB;;AAEAL,MAAAA,KAAK,CAAC2E,eAAN,CAAsBD,SAAtB,EAAiC,IAAjC,EAAuC;AACrCE,QAAAA,IAAI,EAAE;AAD+B,OAAvC;;AAIA;AACD,KAboC,CAanC;;;AAGF,QAAIT,YAAY,GAAGrB,QAAQ,CAACC,GAAT,CAAarD,WAAb,CAAnB;AACAyE,IAAAA,YAAY,CAACtF,OAAb,CAAqB,UAAUoD,QAAV,EAAoB;AACvC,UAAI4C,YAAY,GAAG7E,KAAK,CAACgC,eAAN,CAAsBC,QAAtB,CAAnB;;AAEAjC,MAAAA,KAAK,CAACG,KAAN,GAAcP,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAc8B,QAAd,EAAwB4C,YAAxB,CAAtB;AACD,KAJD;;AAMA7E,IAAAA,KAAK,CAAC2E,eAAN,CAAsBD,SAAtB,EAAiCP,YAAjC,EAA+C;AAC7CS,MAAAA,IAAI,EAAE;AADuC,KAA/C;AAGD,GA1BD;;AA4BA,OAAKzD,SAAL,GAAiB,UAAU2D,MAAV,EAAkB;AACjC9E,IAAAA,KAAK,CAACkC,eAAN;;AAEA,QAAIwC,SAAS,GAAG1E,KAAK,CAACG,KAAtB;AACA2E,IAAAA,MAAM,CAACjG,OAAP,CAAe,UAAUkG,SAAV,EAAqB;AAClC,UAAI/B,IAAI,GAAG+B,SAAS,CAAC/B,IAArB;AAAA,UACIW,MAAM,GAAGoB,SAAS,CAACpB,MADvB;AAAA,UAEIqB,IAAI,GAAGxH,wBAAwB,CAACuH,SAAD,EAAY,CAAC,MAAD,EAAS,QAAT,CAAZ,CAFnC;;AAIA,UAAI9C,QAAQ,GAAGvC,WAAW,CAACsD,IAAD,CAA1B,CALkC,CAKA;;AAElC,UAAI,WAAWgC,IAAf,EAAqB;AACnBhF,QAAAA,KAAK,CAACG,KAAN,GAAcP,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAc8B,QAAd,EAAwB+C,IAAI,CAACC,KAA7B,CAAtB;AACD;;AAEDjF,MAAAA,KAAK,CAAC2E,eAAN,CAAsBD,SAAtB,EAAiC,CAACzC,QAAD,CAAjC,EAA6C;AAC3C2C,QAAAA,IAAI,EAAE,UADqC;AAE3CI,QAAAA,IAAI,EAAED;AAFqC,OAA7C;AAID,KAfD;AAgBD,GApBD;;AAsBA,OAAKjD,SAAL,GAAiB,YAAY;AAC3B,WAAO9B,KAAK,CAACsC,gBAAN,CAAuB,IAAvB,EAA6BS,GAA7B,CAAiC,UAAUN,KAAV,EAAiB;AACvD,UAAIR,QAAQ,GAAGQ,KAAK,CAAC/C,WAAN,EAAf;AACA,UAAI8D,IAAI,GAAGf,KAAK,CAACgB,OAAN,EAAX;AACA,aAAOlF,aAAa,CAAC,EAAD,EAAKiF,IAAL,EAAW;AAC7BR,QAAAA,IAAI,EAAEf,QADuB;AAE7BgD,QAAAA,KAAK,EAAEjF,KAAK,CAACU,aAAN,CAAoBuB,QAApB;AAFsB,OAAX,CAApB;AAID,KAPM,CAAP;AAQD,GATD,CA/TyD,CAwUtD;;;AAGH,OAAKR,aAAL,GAAqB,UAAU8B,MAAV,EAAkB;AACrCvD,IAAAA,KAAK,CAACI,aAAN,CAAoB/B,IAApB,CAAyBkF,MAAzB;;AAEA,WAAO,YAAY;AACjBvD,MAAAA,KAAK,CAACI,aAAN,GAAsBJ,KAAK,CAACI,aAAN,CAAoBnC,MAApB,CAA2B,UAAUiH,IAAV,EAAgB;AAC/D,eAAOA,IAAI,KAAK3B,MAAhB;AACD,OAFqB,CAAtB;AAGD,KAJD;AAKD,GARD;;AAUA,OAAK/B,QAAL,GAAgB,UAAU2D,MAAV,EAAkB;AAChC,YAAQA,MAAM,CAACP,IAAf;AACE,WAAK,aAAL;AACE;AACE,cAAI3C,QAAQ,GAAGkD,MAAM,CAAClD,QAAtB;AAAA,cACIgD,KAAK,GAAGE,MAAM,CAACF,KADnB;;AAGAjF,UAAAA,KAAK,CAACoF,WAAN,CAAkBnD,QAAlB,EAA4BgD,KAA5B;;AAEA;AACD;;AAEH,WAAK,eAAL;AACE;AACE,cAAII,SAAS,GAAGF,MAAM,CAAClD,QAAvB;AAAA,cACIqD,WAAW,GAAGH,MAAM,CAACG,WADzB;;AAGAtF,UAAAA,KAAK,CAACqB,cAAN,CAAqB,CAACgE,SAAD,CAArB,EAAkC;AAChCC,YAAAA,WAAW,EAAEA;AADmB,WAAlC;;AAIA;AACD;;AAEH,cAvBF,CAuBW;;AAvBX;AA0BD,GA3BD;;AA6BA,OAAKX,eAAL,GAAuB,UAAUD,SAAV,EAAqBP,YAArB,EAAmCoB,IAAnC,EAAyC;AAC9D,QAAIvF,KAAK,CAACE,YAAV,EAAwB;AACtBF,MAAAA,KAAK,CAACsC,gBAAN,GAAyBzD,OAAzB,CAAiC,UAAU2G,IAAV,EAAgB;AAC/C,YAAIC,aAAa,GAAGD,IAAI,CAACC,aAAzB;AACAA,QAAAA,aAAa,CAACf,SAAD,EAAYP,YAAZ,EAA0BoB,IAA1B,CAAb;AACD,OAHD;AAID,KALD,MAKO;AACLvF,MAAAA,KAAK,CAACD,eAAN;AACD;AACF,GATD;;AAWA,OAAKqF,WAAL,GAAmB,UAAUpC,IAAV,EAAgBiC,KAAhB,EAAuB;AACxC,QAAIhD,QAAQ,GAAGvC,WAAW,CAACsD,IAAD,CAA1B;AACA,QAAI0B,SAAS,GAAG1E,KAAK,CAACG,KAAtB;AACAH,IAAAA,KAAK,CAACG,KAAN,GAAcP,QAAQ,CAACI,KAAK,CAACG,KAAP,EAAc8B,QAAd,EAAwBgD,KAAxB,CAAtB;;AAEAjF,IAAAA,KAAK,CAAC2E,eAAN,CAAsBD,SAAtB,EAAiC,CAACzC,QAAD,CAAjC,EAA6C;AAC3C2C,MAAAA,IAAI,EAAE,aADqC;AAE3ChG,MAAAA,MAAM,EAAE;AAFmC,KAA7C,EALwC,CAQpC;;;AAGJ,QAAI8G,cAAc,GAAG1F,KAAK,CAAC2F,2BAAN,CAAkC1D,QAAlC,CAArB;;AAEAjC,IAAAA,KAAK,CAACqB,cAAN,CAAqBqE,cAArB;;AAEA1F,IAAAA,KAAK,CAAC2E,eAAN,CAAsBD,SAAtB,EAAiCgB,cAAjC,EAAiD;AAC/Cd,MAAAA,IAAI,EAAE,oBADyC;AAE/CgB,MAAAA,aAAa,EAAE,CAAC3D,QAAD,EAAW4D,MAAX,CAAkBvI,kBAAkB,CAACoI,cAAD,CAApC;AAFgC,KAAjD,EAfwC,CAkBpC;;;AAGJ,QAAII,cAAc,GAAG9F,KAAK,CAACM,SAAN,CAAgBwF,cAArC;;AAEA,QAAIA,cAAJ,EAAoB;AAClB,UAAIC,aAAa,GAAGvG,mBAAmB,CAACQ,KAAK,CAACG,KAAP,EAAc,CAAC8B,QAAD,CAAd,CAAvC;AACA6D,MAAAA,cAAc,CAACC,aAAD,EAAgB/F,KAAK,CAACG,KAAtB,CAAd;AACD;;AAEDH,IAAAA,KAAK,CAACgG,qBAAN,CAA4B,CAAC/D,QAAD,EAAW4D,MAAX,CAAkBvI,kBAAkB,CAACoI,cAAD,CAApC,CAA5B;AACD,GA7BD,CA7XyD,CA0ZtD;;;AAGH,OAAKtE,cAAL,GAAsB,UAAUjB,KAAV,EAAiB;AACrCH,IAAAA,KAAK,CAACkC,eAAN;;AAEA,QAAIwC,SAAS,GAAG1E,KAAK,CAACG,KAAtB;;AAEA,QAAIA,KAAJ,EAAW;AACTH,MAAAA,KAAK,CAACG,KAAN,GAAcN,SAAS,CAACG,KAAK,CAACG,KAAP,EAAcA,KAAd,CAAvB;AACD;;AAEDH,IAAAA,KAAK,CAAC2E,eAAN,CAAsBD,SAAtB,EAAiC,IAAjC,EAAuC;AACrCE,MAAAA,IAAI,EAAE,aAD+B;AAErChG,MAAAA,MAAM,EAAE;AAF6B,KAAvC;AAID,GAbD;;AAeA,OAAK+G,2BAAL,GAAmC,UAAUM,YAAV,EAAwB;AACzD,QAAIC,QAAQ,GAAG,IAAIC,GAAJ,EAAf;AACA,QAAIT,cAAc,GAAG,EAArB;AACA,QAAIU,mBAAmB,GAAG,IAAI9G,OAAJ,EAA1B;AACA;;;;;AAKAU,IAAAA,KAAK,CAACsC,gBAAN,GAAyBzD,OAAzB,CAAiC,UAAU4D,KAAV,EAAiB;AAChD,UAAI4D,YAAY,GAAG5D,KAAK,CAAC6D,KAAN,CAAYD,YAA/B;AACA,OAACA,YAAY,IAAI,EAAjB,EAAqBxH,OAArB,CAA6B,UAAU0H,UAAV,EAAsB;AACjD,YAAIC,kBAAkB,GAAG9G,WAAW,CAAC6G,UAAD,CAApC;AACAH,QAAAA,mBAAmB,CAACK,MAApB,CAA2BD,kBAA3B,EAA+C,YAAY;AACzD,cAAI1B,MAAM,GAAGpG,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiB8D,SAAzC,GAAqD9D,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAIyH,GAAJ,EAAjF;AACArB,UAAAA,MAAM,CAAC4B,GAAP,CAAWjE,KAAX;AACA,iBAAOqC,MAAP;AACD,SAJD;AAKD,OAPD;AAQD,KAVD;;AAYA,QAAI6B,YAAY,GAAG,SAASA,YAAT,CAAsB1E,QAAtB,EAAgC;AACjD,UAAI6C,MAAM,GAAGsB,mBAAmB,CAACnD,GAApB,CAAwBhB,QAAxB,KAAqC,IAAIkE,GAAJ,EAAlD;AACArB,MAAAA,MAAM,CAACjG,OAAP,CAAe,UAAU4D,KAAV,EAAiB;AAC9B,YAAI,CAACyD,QAAQ,CAACU,GAAT,CAAanE,KAAb,CAAL,EAA0B;AACxByD,UAAAA,QAAQ,CAACQ,GAAT,CAAajE,KAAb;AACA,cAAI6B,aAAa,GAAG7B,KAAK,CAAC/C,WAAN,EAApB;;AAEA,cAAI+C,KAAK,CAAC1B,cAAN,MAA0BuD,aAAa,CAAC3F,MAA5C,EAAoD;AAClD+G,YAAAA,cAAc,CAACrH,IAAf,CAAoBiG,aAApB;AACAqC,YAAAA,YAAY,CAACrC,aAAD,CAAZ;AACD;AACF;AACF,OAVD;AAWD,KAbD;;AAeAqC,IAAAA,YAAY,CAACV,YAAD,CAAZ;AACA,WAAOP,cAAP;AACD,GAtCD;;AAwCA,OAAKM,qBAAL,GAA6B,UAAU7B,YAAV,EAAwB;AACnD,QAAI0C,cAAc,GAAG7G,KAAK,CAACM,SAAN,CAAgBuG,cAArC;;AAEA,QAAIA,cAAJ,EAAoB;AAClB,UAAI/B,MAAM,GAAG9E,KAAK,CAAC8B,SAAN,EAAb;;AAEA,UAAIgF,aAAa,GAAGhC,MAAM,CAAC7G,MAAP,CAAc,UAAU8I,KAAV,EAAiB;AACjD,YAAIC,SAAS,GAAGD,KAAK,CAAC/D,IAAtB;AACA,eAAOvD,gBAAgB,CAAC0E,YAAD,EAAe6C,SAAf,CAAvB;AACD,OAHmB,CAApB;AAIAH,MAAAA,cAAc,CAACC,aAAD,EAAgBhC,MAAhB,CAAd;AACD;AACF,GAZD,CApdyD,CAgetD;;;AAGH,OAAKzD,cAAL,GAAsB,UAAUyB,QAAV,EAAoBmE,OAApB,EAA6B;AACjDjH,IAAAA,KAAK,CAACkC,eAAN;;AAEA,QAAIgF,eAAe,GAAG,CAAC,CAACpE,QAAxB;AACA,QAAIqB,YAAY,GAAG+C,eAAe,GAAGpE,QAAQ,CAACC,GAAT,CAAarD,WAAb,CAAH,GAA+B,EAAjE,CAJiD,CAIoB;;AAErE,QAAIyH,WAAW,GAAG,EAAlB;;AAEAnH,IAAAA,KAAK,CAACsC,gBAAN,CAAuB,IAAvB,EAA6BzD,OAA7B,CAAqC,UAAU4D,KAAV,EAAiB;AACpD;AACA,UAAI,CAACyE,eAAL,EAAsB;AACpB/C,QAAAA,YAAY,CAAC9F,IAAb,CAAkBoE,KAAK,CAAC/C,WAAN,EAAlB;AACD,OAJmD,CAIlD;;;AAGF,UAAI,CAAC+C,KAAK,CAAC6D,KAAN,CAAYc,KAAb,IAAsB,CAAC3E,KAAK,CAAC6D,KAAN,CAAYc,KAAZ,CAAkBzI,MAA7C,EAAqD;AACnD;AACD;;AAED,UAAI2F,aAAa,GAAG7B,KAAK,CAAC/C,WAAN,EAApB,CAXoD,CAWX;;AAEzC,UAAI,CAACwH,eAAD,IAAoBzH,gBAAgB,CAAC0E,YAAD,EAAeG,aAAf,CAAxC,EAAuE;AACrE,YAAI+C,OAAO,GAAG5E,KAAK,CAAC6E,aAAN,CAAoB/I,aAAa,CAAC;AAC9CgC,UAAAA,gBAAgB,EAAEhC,aAAa,CAAC,EAAD,EAAKgB,uBAAL,EAA8B,EAA9B,EAAkCS,KAAK,CAACO,gBAAxC;AADe,SAAD,EAE5C0G,OAF4C,CAAjC,CAAd,CADqE,CAGvD;;AAEdE,QAAAA,WAAW,CAAC9I,IAAZ,CAAiBgJ,OAAO,CAACE,IAAR,CAAa,YAAY;AACxC,iBAAO;AACLvE,YAAAA,IAAI,EAAEsB,aADD;AAELX,YAAAA,MAAM,EAAE;AAFH,WAAP;AAID,SALgB,EAKd6D,KALc,CAKR,UAAU7D,MAAV,EAAkB;AACzB,iBAAO8D,OAAO,CAACC,MAAR,CAAe;AACpB1E,YAAAA,IAAI,EAAEsB,aADc;AAEpBX,YAAAA,MAAM,EAAEA;AAFY,WAAf,CAAP;AAID,SAVgB,CAAjB;AAWD;AACF,KA9BD;;AAgCA,QAAIgE,cAAc,GAAGtI,gBAAgB,CAAC8H,WAAD,CAArC;AACAnH,IAAAA,KAAK,CAACQ,mBAAN,GAA4BmH,cAA5B,CAzCiD,CAyCL;;AAE5CA,IAAAA,cAAc,CAACH,KAAf,CAAqB,UAAUI,OAAV,EAAmB;AACtC,aAAOA,OAAP;AACD,KAFD,EAEGL,IAFH,CAEQ,UAAUK,OAAV,EAAmB;AACzB,UAAIC,kBAAkB,GAAGD,OAAO,CAAC7E,GAAR,CAAY,UAAU+E,KAAV,EAAiB;AACpD,YAAI9E,IAAI,GAAG8E,KAAK,CAAC9E,IAAjB;AACA,eAAOA,IAAP;AACD,OAHwB,CAAzB;;AAKAhD,MAAAA,KAAK,CAAC2E,eAAN,CAAsB3E,KAAK,CAACG,KAA5B,EAAmC0H,kBAAnC,EAAuD;AACrDjD,QAAAA,IAAI,EAAE;AAD+C,OAAvD;;AAIA5E,MAAAA,KAAK,CAACgG,qBAAN,CAA4B6B,kBAA5B;AACD,KAbD;AAcA,QAAIE,aAAa,GAAGJ,cAAc,CAACJ,IAAf,CAAoB,YAAY;AAClD,UAAIvH,KAAK,CAACQ,mBAAN,KAA8BmH,cAAlC,EAAkD;AAChD,eAAOF,OAAO,CAACO,OAAR,CAAgBhI,KAAK,CAACW,cAAN,CAAqBwD,YAArB,CAAhB,CAAP;AACD;;AAED,aAAOsD,OAAO,CAACC,MAAR,CAAe,EAAf,CAAP;AACD,KANmB,EAMjBF,KANiB,CAMX,UAAUI,OAAV,EAAmB;AAC1B,UAAIK,SAAS,GAAGL,OAAO,CAAC3J,MAAR,CAAe,UAAUiK,MAAV,EAAkB;AAC/C,eAAOA,MAAM,IAAIA,MAAM,CAACvE,MAAP,CAAchF,MAA/B;AACD,OAFe,CAAhB;AAGA,aAAO8I,OAAO,CAACC,MAAR,CAAe;AACpBS,QAAAA,MAAM,EAAEnI,KAAK,CAACW,cAAN,CAAqBwD,YAArB,CADY;AAEpBiE,QAAAA,WAAW,EAAEH,SAFO;AAGpBI,QAAAA,SAAS,EAAErI,KAAK,CAACQ,mBAAN,KAA8BmH;AAHrB,OAAf,CAAP;AAKD,KAfmB,CAApB,CAzDiD,CAwE7C;;AAEJI,IAAAA,aAAa,CAACP,KAAd,CAAoB,UAAUc,CAAV,EAAa;AAC/B,aAAOA,CAAP;AACD,KAFD;AAGA,WAAOP,aAAP;AACD,GA9ED,CAneyD,CAijBtD;;;AAGH,OAAKzG,MAAL,GAAc,YAAY;AACxBtB,IAAAA,KAAK,CAACkC,eAAN;;AAEAlC,IAAAA,KAAK,CAACqB,cAAN,GAAuBkG,IAAvB,CAA4B,UAAUY,MAAV,EAAkB;AAC5C,UAAII,QAAQ,GAAGvI,KAAK,CAACM,SAAN,CAAgBiI,QAA/B;;AAEA,UAAIA,QAAJ,EAAc;AACZ,YAAI;AACFA,UAAAA,QAAQ,CAACJ,MAAD,CAAR;AACD,SAFD,CAEE,OAAOK,GAAP,EAAY;AACZ;AACAC,UAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF;AACF,KAXD,EAWGhB,KAXH,CAWS,UAAUc,CAAV,EAAa;AACpB,UAAIK,cAAc,GAAG3I,KAAK,CAACM,SAAN,CAAgBqI,cAArC;;AAEA,UAAIA,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,CAACL,CAAD,CAAd;AACD;AACF,KAjBD;AAkBD,GArBD;;AAuBA,OAAKvI,eAAL,GAAuBA,eAAvB;AACD,CA5kBM;;AA8kBP,SAAS6I,OAAT,CAAiBC,IAAjB,EAAuB;AACrB,MAAIC,OAAO,GAAG5J,KAAK,CAAC6J,MAAN,EAAd;;AAEA,MAAIC,eAAe,GAAG9J,KAAK,CAAC+J,QAAN,EAAtB;AAAA,MACIC,gBAAgB,GAAG7L,cAAc,CAAC2L,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,WAAW,GAAGD,gBAAgB,CAAC,CAAD,CAFlC;;AAIA,MAAI,CAACJ,OAAO,CAACM,OAAb,EAAsB;AACpB,QAAIP,IAAJ,EAAU;AACRC,MAAAA,OAAO,CAACM,OAAR,GAAkBP,IAAlB;AACD,KAFD,MAEO;AACL;AACA,UAAIQ,aAAa,GAAG,SAASA,aAAT,GAAyB;AAC3CF,QAAAA,WAAW,CAAC,EAAD,CAAX;AACD,OAFD;;AAIA,UAAIG,SAAS,GAAG,IAAIxJ,SAAJ,CAAcuJ,aAAd,CAAhB;AACAP,MAAAA,OAAO,CAACM,OAAR,GAAkBE,SAAS,CAAC7I,OAAV,EAAlB;AACD;AACF;;AAED,SAAO,CAACqI,OAAO,CAACM,OAAT,CAAP;AACD;;AAED,eAAeR,OAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport warning from 'warning';\nimport { HOOK_MARK } from './FieldContext';\nimport { allPromiseFinish } from './utils/asyncUtil';\nimport NameMap from './utils/NameMap';\nimport { defaultValidateMessages } from './utils/messages';\nimport { cloneByNamePathList, containsNamePath, getNamePath, getValue, setValue, setValues } from './utils/valueUtil';\nexport var FormStore = function FormStore(forceRootUpdate) {\n  var _this = this;\n\n  _classCallCheck(this, FormStore);\n\n  this.formHooked = false;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.lastValidatePromise = null;\n\n  this.getForm = function () {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      getInternalHooks: _this.getInternalHooks\n    };\n  }; // ======================== Internal Hooks ========================\n\n\n  this.getInternalHooks = function (key) {\n    if (key === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields\n      };\n    }\n\n    warning(false, '`getInternalHooks` is internal usage. Should not call directly.');\n    return null;\n  };\n\n  this.useSubscribe = function (subscribable) {\n    _this.subscribable = subscribable;\n  };\n  /**\n   * First time `setInitialValues` should update store with initial value\n   */\n\n\n  this.setInitialValues = function (initialValues, init) {\n    _this.initialValues = initialValues || {};\n\n    if (init) {\n      _this.store = setValues({}, initialValues, _this.store);\n    }\n  };\n\n  this.getInitialValue = function (namePath) {\n    return getValue(_this.initialValues, namePath);\n  };\n\n  this.setCallbacks = function (callbacks) {\n    _this.callbacks = callbacks;\n  };\n\n  this.setValidateMessages = function (validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n\n  this.warningUnhooked = function () {\n    if (process.env.NODE_ENV !== 'production' && !_this.formHooked) {\n      warning(false, 'Instance created by `useForm` is not connect to any Form element. Forget to pass `form` prop?');\n    }\n  }; // ============================ Fields ============================\n\n  /**\n   * Get registered field entities.\n   * @param pure Only return field which has a `name`. Default: false\n   */\n\n\n  this.getFieldEntities = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n\n    return _this.fieldEntities.filter(function (field) {\n      return field.getNamePath().length;\n    });\n  };\n\n  this.getFieldsMap = function () {\n    var pure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var cache = new NameMap();\n\n    _this.getFieldEntities(pure).forEach(function (field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n\n    return cache;\n  };\n\n  this.getFieldEntitiesForNamePathList = function (nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n\n    var cache = _this.getFieldsMap(true);\n\n    return nameList.map(function (name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n\n  this.getFieldsValue = function (nameList, filterFunc) {\n    _this.warningUnhooked();\n\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n\n    var filteredNameList = [];\n    fieldEntities.forEach(function (entity) {\n      var namePath = 'INVALIDATE_NAME_PATH' in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath();\n\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = 'getMeta' in entity ? entity.getMeta() : null;\n\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n\n  this.getFieldValue = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n    return getValue(_this.store, namePath);\n  };\n\n  this.getFieldsError = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n\n    return fieldEntities.map(function (entity, index) {\n      if (entity && !('INVALIDATE_NAME_PATH' in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors()\n        };\n      }\n\n      return {\n        name: getNamePath(nameList[index]),\n        errors: []\n      };\n    });\n  };\n\n  this.getFieldError = function (name) {\n    _this.warningUnhooked();\n\n    var namePath = getNamePath(name);\n\n    var fieldError = _this.getFieldsError([namePath])[0];\n\n    return fieldError.errors;\n  };\n\n  this.isFieldsTouched = function () {\n    _this.warningUnhooked();\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var arg0 = args[0],\n        arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n\n    var testTouched = function testTouched(field) {\n      // Not provide `nameList` will check all the fields\n      if (!namePathList) {\n        return field.isFieldTouched();\n      }\n\n      var fieldNamePath = field.getNamePath();\n\n      if (containsNamePath(namePathList, fieldNamePath)) {\n        return field.isFieldTouched();\n      }\n\n      return isAllFieldsTouched;\n    };\n\n    return isAllFieldsTouched ? _this.getFieldEntities(true).every(testTouched) : _this.getFieldEntities(true).some(testTouched);\n  };\n\n  this.isFieldTouched = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsTouched([name]);\n  };\n\n  this.isFieldsValidating = function (nameList) {\n    _this.warningUnhooked();\n\n    var fieldEntities = _this.getFieldEntities();\n\n    if (!nameList) {\n      return fieldEntities.some(function (testField) {\n        return testField.isFieldValidating();\n      });\n    }\n\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function (testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n\n  this.isFieldValidating = function (name) {\n    _this.warningUnhooked();\n\n    return _this.isFieldsValidating([name]);\n  };\n\n  this.resetFields = function (nameList) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (!nameList) {\n      _this.store = setValues({}, _this.initialValues);\n\n      _this.notifyObservers(prevStore, null, {\n        type: 'reset'\n      });\n\n      return;\n    } // Reset by `nameList`\n\n\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function (namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n\n      _this.store = setValue(_this.store, namePath, initialValue);\n    });\n\n    _this.notifyObservers(prevStore, namePathList, {\n      type: 'reset'\n    });\n  };\n\n  this.setFields = function (fields) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n    fields.forEach(function (fieldData) {\n      var name = fieldData.name,\n          errors = fieldData.errors,\n          data = _objectWithoutProperties(fieldData, [\"name\", \"errors\"]);\n\n      var namePath = getNamePath(name); // Value\n\n      if ('value' in data) {\n        _this.store = setValue(_this.store, namePath, data.value);\n      }\n\n      _this.notifyObservers(prevStore, [namePath], {\n        type: 'setField',\n        data: fieldData\n      });\n    });\n  };\n\n  this.getFields = function () {\n    return _this.getFieldEntities(true).map(function (field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n      return _objectSpread({}, meta, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n    });\n  }; // =========================== Observer ===========================\n\n\n  this.registerField = function (entity) {\n    _this.fieldEntities.push(entity);\n\n    return function () {\n      _this.fieldEntities = _this.fieldEntities.filter(function (item) {\n        return item !== entity;\n      });\n    };\n  };\n\n  this.dispatch = function (action) {\n    switch (action.type) {\n      case 'updateValue':\n        {\n          var namePath = action.namePath,\n              value = action.value;\n\n          _this.updateValue(namePath, value);\n\n          break;\n        }\n\n      case 'validateField':\n        {\n          var _namePath = action.namePath,\n              triggerName = action.triggerName;\n\n          _this.validateFields([_namePath], {\n            triggerName: triggerName\n          });\n\n          break;\n        }\n\n      default: // Currently we don't have other action. Do nothing.\n\n    }\n  };\n\n  this.notifyObservers = function (prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      _this.getFieldEntities().forEach(function (_ref) {\n        var onStoreChange = _ref.onStoreChange;\n        onStoreChange(prevStore, namePathList, info);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n\n  this.updateValue = function (name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n    _this.store = setValue(_this.store, namePath, value);\n\n    _this.notifyObservers(prevStore, [namePath], {\n      type: 'valueUpdate',\n      source: 'internal'\n    }); // Notify dependencies children with parent update\n\n\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n\n    _this.validateFields(childrenFields);\n\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: 'dependenciesUpdate',\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    }); // trigger callback function\n\n\n    var onValuesChange = _this.callbacks.onValuesChange;\n\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.store);\n    }\n\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  }; // Let all child Field get update.\n\n\n  this.setFieldsValue = function (store) {\n    _this.warningUnhooked();\n\n    var prevStore = _this.store;\n\n    if (store) {\n      _this.store = setValues(_this.store, store);\n    }\n\n    _this.notifyObservers(prevStore, null, {\n      type: 'valueUpdate',\n      source: 'external'\n    });\n  };\n\n  this.getDependencyChildrenFields = function (rootNamePath) {\n    var children = new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    /**\n     * Generate maps\n     * Can use cache to save perf if user report performance issue with this\n     */\n\n    _this.getFieldEntities().forEach(function (field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function (dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function () {\n          var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n\n    var fillChildren = function fillChildren(namePath) {\n      var fields = dependencies2fields.get(namePath) || new Set();\n      fields.forEach(function (field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n\n          if (field.isFieldTouched() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren(fieldNamePath);\n          }\n        }\n      });\n    };\n\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n\n  this.triggerOnFieldsChange = function (namePathList) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n\n      var changedFields = fields.filter(function (_ref2) {\n        var fieldName = _ref2.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  }; // =========================== Validate ===========================\n\n\n  this.validateFields = function (nameList, options) {\n    _this.warningUnhooked();\n\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : []; // Collect result in promise list\n\n    var promiseList = [];\n\n    _this.getFieldEntities(true).forEach(function (field) {\n      // Add field if not provide `nameList`\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      } // Skip if without rule\n\n\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n\n      var fieldNamePath = field.getNamePath(); // Add field validate rule in to promise list\n\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread({\n          validateMessages: _objectSpread({}, defaultValidateMessages, {}, _this.validateMessages)\n        }, options)); // Wrap promise with field\n\n        promiseList.push(promise.then(function () {\n          return {\n            name: fieldNamePath,\n            errors: []\n          };\n        }).catch(function (errors) {\n          return Promise.reject({\n            name: fieldNamePath,\n            errors: errors\n          });\n        }));\n      }\n    });\n\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise; // Notify fields with rule that validate has finished and need update\n\n    summaryPromise.catch(function (results) {\n      return results;\n    }).then(function (results) {\n      var resultNamePathList = results.map(function (_ref3) {\n        var name = _ref3.name;\n        return name;\n      });\n\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: 'validateFinish'\n      });\n\n      _this.triggerOnFieldsChange(resultNamePathList);\n    });\n    var returnPromise = summaryPromise.then(function () {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n\n      return Promise.reject([]);\n    }).catch(function (results) {\n      var errorList = results.filter(function (result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    }); // Do not throw in console\n\n    returnPromise.catch(function (e) {\n      return e;\n    });\n    return returnPromise;\n  }; // ============================ Submit ============================\n\n\n  this.submit = function () {\n    _this.warningUnhooked();\n\n    _this.validateFields().then(function (values) {\n      var onFinish = _this.callbacks.onFinish;\n\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          // Should print error if user `onFinish` callback failed\n          console.error(err);\n        }\n      }\n    }).catch(function (e) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n\n      if (onFinishFailed) {\n        onFinishFailed(e);\n      }\n    });\n  };\n\n  this.forceRootUpdate = forceRootUpdate;\n};\n\nfunction useForm(form) {\n  var formRef = React.useRef();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      forceUpdate = _React$useState2[1];\n\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      // Create a new FormStore if not provided\n      var forceReRender = function forceReRender() {\n        forceUpdate({});\n      };\n\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n\n  return [formRef.current];\n}\n\nexport default useForm;"]},"metadata":{},"sourceType":"module"}