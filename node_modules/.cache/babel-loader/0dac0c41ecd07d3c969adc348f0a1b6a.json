{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport Upload from './Upload'; // stick class comoponent to avoid React ref warning inside Form\n// https://github.com/ant-design/ant-design/issues/18707\n// eslint-disable-next-line react/prefer-stateless-function\n\nvar Dragger =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dragger, _React$Component);\n\n  function Dragger() {\n    _classCallCheck(this, Dragger);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dragger).apply(this, arguments));\n  }\n\n  _createClass(Dragger, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return React.createElement(Upload, _extends({}, props, {\n        type: \"drag\",\n        style: _extends(_extends({}, props.style), {\n          height: props.height\n        })\n      }));\n    }\n  }]);\n\n  return Dragger;\n}(React.Component);\n\nexport { Dragger as default };","map":{"version":3,"sources":["upload/Dragger.jsx"],"names":["Dragger","React","Component","props","height"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,UAAA,C,CACA;AACA;AACA;;IACqBA,O;;;;;;;;;;;;;6BACR;AAAA,UACGG,KADH,GAAA,KAAA,KAAA;AAEL,aAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAmB,QAAA,IAAI,EAAvB,MAAA;AAA+B,QAAA,KAAK,EAAE,QAAA,CAAc,QAAA,CAAA,EAAA,EAAkBA,KAAK,CAArC,KAAc,CAAd,EAA8C;AAAEC,UAAAA,MAAM,EAAED,KAAK,CAACC;AAAhB,SAA9C;AAAtC,OAAA,CAAA,CAAP;AACH;;;;EAJgCH,KAAK,CAACC,S;;SAAtBF,O","sourcesContent":["import * as React from 'react';\nimport Upload from './Upload';\n// stick class comoponent to avoid React ref warning inside Form\n// https://github.com/ant-design/ant-design/issues/18707\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class Dragger extends React.Component {\n    render() {\n        const { props } = this;\n        return <Upload {...props} type=\"drag\" style={Object.assign(Object.assign({}, props.style), { height: props.height })}/>;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}