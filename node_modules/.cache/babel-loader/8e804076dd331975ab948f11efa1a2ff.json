{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport * as React from 'react';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nvar YearSelectOffset = 10;\nvar YearSelectTotal = 20;\n\nfunction YearSelect(props) {\n  var fullscreen = props.fullscreen,\n      validRange = props.validRange,\n      generateConfig = props.generateConfig,\n      locale = props.locale,\n      prefixCls = props.prefixCls,\n      value = props.value,\n      _onChange = props.onChange,\n      divRef = props.divRef;\n  var year = generateConfig.getYear(value);\n  var start = year - YearSelectOffset;\n  var end = start + YearSelectTotal;\n\n  if (validRange) {\n    start = generateConfig.getYear(validRange[0]);\n    end = generateConfig.getYear(validRange[1]) + 1;\n  }\n\n  var suffix = locale && locale.year === '年' ? '年' : '';\n  var options = [];\n\n  for (var index = start; index < end; index++) {\n    options.push({\n      label: \"\".concat(index).concat(suffix),\n      value: index\n    });\n  }\n\n  return React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    options: options,\n    value: year,\n    className: \"\".concat(prefixCls, \"-year-select\"),\n    onChange: function onChange(numYear) {\n      var newDate = generateConfig.setYear(value, numYear);\n\n      if (validRange) {\n        var _validRange = _slicedToArray(validRange, 2),\n            startDate = _validRange[0],\n            endDate = _validRange[1];\n\n        var newYear = generateConfig.getYear(newDate);\n        var newMonth = generateConfig.getMonth(newDate);\n\n        if (newYear === generateConfig.getYear(endDate) && newMonth > generateConfig.getMonth(endDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(endDate));\n        }\n\n        if (newYear === generateConfig.getYear(startDate) && newMonth < generateConfig.getMonth(startDate)) {\n          newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(startDate));\n        }\n      }\n\n      _onChange(newDate);\n    },\n    getPopupContainer: function getPopupContainer() {\n      return divRef.current;\n    }\n  });\n}\n\nfunction MonthSelect(props) {\n  var prefixCls = props.prefixCls,\n      fullscreen = props.fullscreen,\n      validRange = props.validRange,\n      value = props.value,\n      generateConfig = props.generateConfig,\n      locale = props.locale,\n      _onChange2 = props.onChange,\n      divRef = props.divRef;\n  var month = generateConfig.getMonth(value);\n  var start = 0;\n  var end = 12;\n\n  if (validRange) {\n    var _validRange2 = _slicedToArray(validRange, 2),\n        rangeStart = _validRange2[0],\n        rangeEnd = _validRange2[1];\n\n    var currentYear = generateConfig.getYear(value);\n\n    if (generateConfig.getYear(rangeEnd) === currentYear) {\n      end = generateConfig.getMonth(rangeEnd);\n    }\n\n    if (generateConfig.getYear(rangeStart) === currentYear) {\n      start = generateConfig.getMonth(rangeStart);\n    }\n  }\n\n  var months = locale.shortMonths || generateConfig.locale.getShortMonths(locale.locale);\n  var options = [];\n\n  for (var index = start; index < end; index += 1) {\n    options.push({\n      label: months[index],\n      value: index\n    });\n  }\n\n  return React.createElement(Select, {\n    size: fullscreen ? undefined : 'small',\n    className: \"\".concat(prefixCls, \"-month-select\"),\n    value: month,\n    options: options,\n    onChange: function onChange(newMonth) {\n      _onChange2(generateConfig.setMonth(value, newMonth));\n    },\n    getPopupContainer: function getPopupContainer() {\n      return divRef.current;\n    }\n  });\n}\n\nfunction ModeSwitch(props) {\n  var prefixCls = props.prefixCls,\n      locale = props.locale,\n      mode = props.mode,\n      fullscreen = props.fullscreen,\n      onModeChange = props.onModeChange;\n  return React.createElement(Group, {\n    onChange: function onChange(_ref) {\n      var value = _ref.target.value;\n      onModeChange(value);\n    },\n    value: mode,\n    size: fullscreen ? undefined : 'small',\n    className: \"\".concat(prefixCls, \"-mode-switch\")\n  }, React.createElement(Button, {\n    value: \"month\"\n  }, locale.month), React.createElement(Button, {\n    value: \"year\"\n  }, locale.year));\n}\n\nfunction CalendarHeader(props) {\n  var prefixCls = props.prefixCls,\n      fullscreen = props.fullscreen,\n      mode = props.mode,\n      onChange = props.onChange,\n      onModeChange = props.onModeChange;\n  var divRef = React.useRef(null);\n\n  var sharedProps = _extends(_extends({}, props), {\n    onChange: onChange,\n    fullscreen: fullscreen,\n    divRef: divRef\n  });\n\n  return React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-header\"),\n    ref: divRef\n  }, React.createElement(YearSelect, sharedProps), mode === 'month' && React.createElement(MonthSelect, sharedProps), React.createElement(ModeSwitch, _extends({}, sharedProps, {\n    onModeChange: onModeChange\n  })));\n}\n\nexport default CalendarHeader;","map":{"version":3,"sources":["calendar/Header.jsx"],"names":["YearSelectOffset","YearSelectTotal","fullscreen","validRange","generateConfig","locale","prefixCls","value","onChange","divRef","props","year","start","end","suffix","options","index","label","newDate","startDate","endDate","newYear","newMonth","month","rangeStart","rangeEnd","currentYear","months","mode","onModeChange","target","React","sharedProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nconst YearSelectOffset = 10;\nconst YearSelectTotal = 20;\nfunction YearSelect(props) {\n    const { fullscreen, validRange, generateConfig, locale, prefixCls, value, onChange, divRef, } = props;\n    const year = generateConfig.getYear(value);\n    let start = year - YearSelectOffset;\n    let end = start + YearSelectTotal;\n    if (validRange) {\n        start = generateConfig.getYear(validRange[0]);\n        end = generateConfig.getYear(validRange[1]) + 1;\n    }\n    const suffix = locale && locale.year === '年' ? '年' : '';\n    const options = [];\n    for (let index = start; index < end; index++) {\n        options.push({ label: `${index}${suffix}`, value: index });\n    }\n    return (<Select size={fullscreen ? undefined : 'small'} options={options} value={year} className={`${prefixCls}-year-select`} onChange={numYear => {\n        let newDate = generateConfig.setYear(value, numYear);\n        if (validRange) {\n            const [startDate, endDate] = validRange;\n            const newYear = generateConfig.getYear(newDate);\n            const newMonth = generateConfig.getMonth(newDate);\n            if (newYear === generateConfig.getYear(endDate) &&\n                newMonth > generateConfig.getMonth(endDate)) {\n                newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(endDate));\n            }\n            if (newYear === generateConfig.getYear(startDate) &&\n                newMonth < generateConfig.getMonth(startDate)) {\n                newDate = generateConfig.setMonth(newDate, generateConfig.getMonth(startDate));\n            }\n        }\n        onChange(newDate);\n    }} getPopupContainer={() => divRef.current}/>);\n}\nfunction MonthSelect(props) {\n    const { prefixCls, fullscreen, validRange, value, generateConfig, locale, onChange, divRef, } = props;\n    const month = generateConfig.getMonth(value);\n    let start = 0;\n    let end = 12;\n    if (validRange) {\n        const [rangeStart, rangeEnd] = validRange;\n        const currentYear = generateConfig.getYear(value);\n        if (generateConfig.getYear(rangeEnd) === currentYear) {\n            end = generateConfig.getMonth(rangeEnd);\n        }\n        if (generateConfig.getYear(rangeStart) === currentYear) {\n            start = generateConfig.getMonth(rangeStart);\n        }\n    }\n    const months = locale.shortMonths || generateConfig.locale.getShortMonths(locale.locale);\n    const options = [];\n    for (let index = start; index < end; index += 1) {\n        options.push({\n            label: months[index],\n            value: index,\n        });\n    }\n    return (<Select size={fullscreen ? undefined : 'small'} className={`${prefixCls}-month-select`} value={month} options={options} onChange={newMonth => {\n        onChange(generateConfig.setMonth(value, newMonth));\n    }} getPopupContainer={() => divRef.current}/>);\n}\nfunction ModeSwitch(props) {\n    const { prefixCls, locale, mode, fullscreen, onModeChange } = props;\n    return (<Group onChange={({ target: { value } }) => {\n        onModeChange(value);\n    }} value={mode} size={fullscreen ? undefined : 'small'} className={`${prefixCls}-mode-switch`}>\n      <Button value=\"month\">{locale.month}</Button>\n      <Button value=\"year\">{locale.year}</Button>\n    </Group>);\n}\nfunction CalendarHeader(props) {\n    const { prefixCls, fullscreen, mode, onChange, onModeChange } = props;\n    const divRef = React.useRef(null);\n    const sharedProps = Object.assign(Object.assign({}, props), { onChange,\n        fullscreen,\n        divRef });\n    return (<div className={`${prefixCls}-header`} ref={divRef}>\n      <YearSelect {...sharedProps}/>\n      {mode === 'month' && <MonthSelect {...sharedProps}/>}\n      <ModeSwitch {...sharedProps} onModeChange={onModeChange}/>\n    </div>);\n}\nexport default CalendarHeader;\n"]},"metadata":{},"sourceType":"module"}