{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport ClearableLabeledInput from './ClearableLabeledInput';\nimport ResizableTextArea from './ResizableTextArea';\nimport { ConfigConsumer } from '../config-provider';\nimport { fixControlledValue, resolveOnChange } from './Input';\n\nvar TextArea =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TextArea, _React$Component);\n\n  function TextArea(props) {\n    var _this;\n\n    _classCallCheck(this, TextArea);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextArea).call(this, props));\n\n    _this.focus = function () {\n      _this.resizableTextArea.textArea.focus();\n    };\n\n    _this.saveTextArea = function (resizableTextArea) {\n      _this.resizableTextArea = resizableTextArea;\n    };\n\n    _this.saveClearableInput = function (clearableInput) {\n      _this.clearableInput = clearableInput;\n    };\n\n    _this.handleChange = function (e) {\n      _this.setValue(e.target.value, function () {\n        _this.resizableTextArea.resizeTextarea();\n      });\n\n      resolveOnChange(_this.resizableTextArea.textArea, e, _this.props.onChange);\n    };\n\n    _this.handleKeyDown = function (e) {\n      var _this$props = _this.props,\n          onPressEnter = _this$props.onPressEnter,\n          onKeyDown = _this$props.onKeyDown;\n\n      if (e.keyCode === 13 && onPressEnter) {\n        onPressEnter(e);\n      }\n\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n    };\n\n    _this.handleReset = function (e) {\n      _this.setValue('', function () {\n        _this.resizableTextArea.renderTextArea();\n\n        _this.focus();\n      });\n\n      resolveOnChange(_this.resizableTextArea.textArea, e, _this.props.onChange);\n    };\n\n    _this.renderTextArea = function (prefixCls) {\n      return React.createElement(ResizableTextArea, _extends({}, _this.props, {\n        prefixCls: prefixCls,\n        onKeyDown: _this.handleKeyDown,\n        onChange: _this.handleChange,\n        ref: _this.saveTextArea\n      }));\n    };\n\n    _this.renderComponent = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var value = _this.state.value;\n      var customizePrefixCls = _this.props.prefixCls;\n      var prefixCls = getPrefixCls('input', customizePrefixCls);\n      return React.createElement(ClearableLabeledInput, _extends({}, _this.props, {\n        prefixCls: prefixCls,\n        inputType: \"text\",\n        value: fixControlledValue(value),\n        element: _this.renderTextArea(prefixCls),\n        handleReset: _this.handleReset,\n        ref: _this.saveClearableInput,\n        triggerFocus: _this.focus\n      }));\n    };\n\n    var value = typeof props.value === 'undefined' ? props.defaultValue : props.value;\n    _this.state = {\n      value: value\n    };\n    return _this;\n  }\n\n  _createClass(TextArea, [{\n    key: \"setValue\",\n    value: function setValue(value, callback) {\n      if (!('value' in this.props)) {\n        this.setState({\n          value: value\n        }, callback);\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.resizableTextArea.textArea.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderComponent);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('value' in nextProps) {\n        return {\n          value: nextProps.value\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return TextArea;\n}(React.Component);\n\nexport default TextArea;","map":{"version":3,"sources":["input/TextArea.jsx"],"names":["TextArea","React","Component","e","resolveOnChange","onPressEnter","onKeyDown","saveTextArea","getPrefixCls","value","customizePrefixCls","prefixCls","fixControlledValue","focus","props","nextProps","callback"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ClearableLabeledInput from './ClearableLabeledInput';\nimport ResizableTextArea from './ResizableTextArea';\nimport { ConfigConsumer } from '../config-provider';\nimport { fixControlledValue, resolveOnChange } from './Input';\nclass TextArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.focus = () => {\n            this.resizableTextArea.textArea.focus();\n        };\n        this.saveTextArea = (resizableTextArea) => {\n            this.resizableTextArea = resizableTextArea;\n        };\n        this.saveClearableInput = (clearableInput) => {\n            this.clearableInput = clearableInput;\n        };\n        this.handleChange = (e) => {\n            this.setValue(e.target.value, () => {\n                this.resizableTextArea.resizeTextarea();\n            });\n            resolveOnChange(this.resizableTextArea.textArea, e, this.props.onChange);\n        };\n        this.handleKeyDown = (e) => {\n            const { onPressEnter, onKeyDown } = this.props;\n            if (e.keyCode === 13 && onPressEnter) {\n                onPressEnter(e);\n            }\n            if (onKeyDown) {\n                onKeyDown(e);\n            }\n        };\n        this.handleReset = (e) => {\n            this.setValue('', () => {\n                this.resizableTextArea.renderTextArea();\n                this.focus();\n            });\n            resolveOnChange(this.resizableTextArea.textArea, e, this.props.onChange);\n        };\n        this.renderTextArea = (prefixCls) => {\n            return (<ResizableTextArea {...this.props} prefixCls={prefixCls} onKeyDown={this.handleKeyDown} onChange={this.handleChange} ref={this.saveTextArea}/>);\n        };\n        this.renderComponent = ({ getPrefixCls }) => {\n            const { value } = this.state;\n            const { prefixCls: customizePrefixCls } = this.props;\n            const prefixCls = getPrefixCls('input', customizePrefixCls);\n            return (<ClearableLabeledInput {...this.props} prefixCls={prefixCls} inputType=\"text\" value={fixControlledValue(value)} element={this.renderTextArea(prefixCls)} handleReset={this.handleReset} ref={this.saveClearableInput} triggerFocus={this.focus}/>);\n        };\n        const value = typeof props.value === 'undefined' ? props.defaultValue : props.value;\n        this.state = {\n            value,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value,\n            };\n        }\n        return null;\n    }\n    setValue(value, callback) {\n        if (!('value' in this.props)) {\n            this.setState({ value }, callback);\n        }\n    }\n    blur() {\n        this.resizableTextArea.textArea.blur();\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nexport default TextArea;\n"]},"metadata":{},"sourceType":"module"}