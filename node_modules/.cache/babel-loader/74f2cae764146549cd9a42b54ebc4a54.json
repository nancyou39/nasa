{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n} // TODO: remove this lint\n// SFC has specified a displayName, but not worked.\n\n/* eslint-disable react/display-name */\n\n\nimport * as React from 'react';\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer, ConfigContext } from './context';\nimport { SizeContextProvider } from './SizeContext';\nexport { ConfigContext, ConfigConsumer };\nexport var configConsumerProps = ['getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader'];\n\nvar ConfigProvider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConfigProvider, _React$Component);\n\n  function ConfigProvider() {\n    var _this;\n\n    _classCallCheck(this, ConfigProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConfigProvider).apply(this, arguments));\n\n    _this.getPrefixCls = function (suffixCls, customizePrefixCls) {\n      var _this$props$prefixCls = _this.props.prefixCls,\n          prefixCls = _this$props$prefixCls === void 0 ? 'ant' : _this$props$prefixCls;\n      if (customizePrefixCls) return customizePrefixCls;\n      return suffixCls ? \"\".concat(prefixCls, \"-\").concat(suffixCls) : prefixCls;\n    };\n\n    _this.renderProvider = function (context, legacyLocale) {\n      var _this$props = _this.props,\n          children = _this$props.children,\n          getPopupContainer = _this$props.getPopupContainer,\n          renderEmpty = _this$props.renderEmpty,\n          csp = _this$props.csp,\n          autoInsertSpaceInButton = _this$props.autoInsertSpaceInButton,\n          form = _this$props.form,\n          locale = _this$props.locale,\n          pageHeader = _this$props.pageHeader,\n          componentSize = _this$props.componentSize,\n          direction = _this$props.direction;\n\n      var config = _extends(_extends({}, context), {\n        getPrefixCls: _this.getPrefixCls,\n        csp: csp,\n        autoInsertSpaceInButton: autoInsertSpaceInButton,\n        locale: locale || legacyLocale,\n        direction: direction\n      });\n\n      if (getPopupContainer) {\n        config.getPopupContainer = getPopupContainer;\n      }\n\n      if (renderEmpty) {\n        config.renderEmpty = renderEmpty;\n      }\n\n      if (pageHeader) {\n        config.pageHeader = pageHeader;\n      }\n\n      var childNode = children; // Additional Form provider\n\n      if (form && form.validateMessages) {\n        childNode = React.createElement(RcFormProvider, {\n          validateMessages: form.validateMessages\n        }, children);\n      }\n\n      return React.createElement(SizeContextProvider, {\n        size: componentSize\n      }, React.createElement(ConfigContext.Provider, {\n        value: config\n      }, React.createElement(LocaleProvider, {\n        locale: locale || legacyLocale,\n        _ANT_MARK__: ANT_MARK\n      }, childNode)));\n    };\n\n    return _this;\n  }\n\n  _createClass(ConfigProvider, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(LocaleReceiver, null, function (_, __, legacyLocale) {\n        return React.createElement(ConfigConsumer, null, function (context) {\n          return _this2.renderProvider(context, legacyLocale);\n        });\n      });\n    }\n  }]);\n\n  return ConfigProvider;\n}(React.Component);\n\nexport default ConfigProvider;","map":{"version":3,"sources":["config-provider/index.jsx"],"names":["FormProvider","configConsumerProps","ConfigProvider","React","Component","prefixCls","suffixCls","children","getPopupContainer","renderEmpty","csp","autoInsertSpaceInButton","form","locale","pageHeader","componentSize","direction","config","getPrefixCls","childNode","validateMessages","ANT_MARK"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;AACA;;AACA;;;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAASA,YAAY,IAArB,cAAA,QAAA,eAAA;AACA,OAAA,cAAA,IAAA,QAAA,QAAA,oBAAA;AACA,OAAA,cAAA,MAAA,mCAAA;AACA,SAAA,cAAA,EAAA,aAAA,QAAA,WAAA;AACA,SAAA,mBAAA,QAAA,eAAA;AACA,SAAA,aAAA,EAAA,cAAA;AACA,OAAO,IAAMC,mBAAmB,GAAG,CAAA,mBAAA,EAAA,eAAA,EAAA,cAAA,EAAA,aAAA,EAAA,KAAA,EAAA,yBAAA,EAAA,QAAA,EAA5B,YAA4B,CAA5B;;IAUDC,c;;;;;AACF,WAAA,cAAA,GAAc;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,CAAA;;AACV,IAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,eAAA,CAAA,cAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;AACA,IAAA,KAAA,CAAA,YAAA,GAAoB,UAAA,SAAA,EAAA,kBAAA,EAAmC;AAAA,UAAA,qBAAA,GACrB,KAAA,CADqB,KACrB,CADqB,SAAA;AAAA,UAC3CG,SAD2C,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,qBAAA;AAEnD,UAAA,kBAAA,EACI,OAAA,kBAAA;AACJ,aAAOC,SAAS,GAAA,GAAA,MAAA,CAAA,SAAA,EAAA,GAAA,EAAA,MAAA,CAAA,SAAA,CAAA,GAAhB,SAAA;AAJJ,KAAA;;AAMA,IAAA,KAAA,CAAA,cAAA,GAAsB,UAAA,OAAA,EAAA,YAAA,EAA2B;AAAA,UAAA,WAAA,GAC2F,KAAA,CAD3F,KAAA;AAAA,UACrCC,QADqC,GAAA,WAAA,CAAA,QAAA;AAAA,UAC3BC,iBAD2B,GAAA,WAAA,CAAA,iBAAA;AAAA,UACRC,WADQ,GAAA,WAAA,CAAA,WAAA;AAAA,UACKC,GADL,GAAA,WAAA,CAAA,GAAA;AAAA,UACUC,uBADV,GAAA,WAAA,CAAA,uBAAA;AAAA,UACmCC,IADnC,GAAA,WAAA,CAAA,IAAA;AAAA,UACyCC,MADzC,GAAA,WAAA,CAAA,MAAA;AAAA,UACiDC,UADjD,GAAA,WAAA,CAAA,UAAA;AAAA,UAC6DC,aAD7D,GAAA,WAAA,CAAA,aAAA;AAAA,UAC4EC,SAD5E,GAAA,WAAA,CAAA,SAAA;;AAE7C,UAAMC,MAAM,GAAG,QAAA,CAAc,QAAA,CAAA,EAAA,EAAd,OAAc,CAAd,EAA0C;AAAEC,QAAAA,YAAY,EAAE,KAAA,CAAhB,YAAA;AAAmCR,QAAAA,GAAG,EAAtC,GAAA;AACrDC,QAAAA,uBAAuB,EAD8B,uBAAA;AAC5BE,QAAAA,MAAM,EAAEA,MAAM,IADc,YAAA;AACIG,QAAAA,SAAS,EAATA;AADJ,OAA1C,CAAf;;AAEA,UAAA,iBAAA,EAAuB;AACnBC,QAAAA,MAAM,CAANA,iBAAAA,GAAAA,iBAAAA;AACH;;AACD,UAAA,WAAA,EAAiB;AACbA,QAAAA,MAAM,CAANA,WAAAA,GAAAA,WAAAA;AACH;;AACD,UAAA,UAAA,EAAgB;AACZA,QAAAA,MAAM,CAANA,UAAAA,GAAAA,UAAAA;AACH;;AACD,UAAIE,SAAS,GAbgC,QAa7C,CAb6C,CAc7C;;AACA,UAAIP,IAAI,IAAIA,IAAI,CAAhB,gBAAA,EAAmC;AAC/BO,QAAAA,SAAS,GAAI,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA;AAAgB,UAAA,gBAAgB,EAAEP,IAAI,CAACQ;AAAvC,SAAA,EAAbD,QAAa,CAAbA;AACH;;AACD,aAAQ,KAAA,CAAA,aAAA,CAAA,mBAAA,EAAA;AAAqB,QAAA,IAAI,EAAEJ;AAA3B,OAAA,EACZ,KAAA,CAAA,aAAA,CAAC,aAAD,CAAA,QAAA,EAAA;AAAwB,QAAA,KAAK,EAAEE;AAA/B,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA;AAAgB,QAAA,MAAM,EAAEJ,MAAM,IAA9B,YAAA;AAAgD,QAAA,WAAW,EAAEQ;AAA7D,OAAA,EAFE,SAEF,CADF,CADY,CAAR;AAlBJ,KAAA;;AARU,WAAA,KAAA;AAkCb;;;;6BACQ;AAAA,UAAA,MAAA,GAAA,IAAA;;AACL,aAAQ,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,EACP,UAAA,CAAA,EAAA,EAAA,EAAA,YAAA,EAAA;AAAA,eAA0B,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,IAAA,EACtB,UAAA,OAAA,EAAO;AAAA,iBAAI,MAAI,CAAJ,cAAA,CAAA,OAAA,EAAJ,YAAI,CAAJ;AADX,SAA0B,CAA1B;AADD,OAAQ,CAAR;AAKH;;;;EA1CwBlB,KAAK,CAACC,S;;AA4CnC,eAAA,cAAA","sourcesContent":["// TODO: remove this lint\n// SFC has specified a displayName, but not worked.\n/* eslint-disable react/display-name */\nimport * as React from 'react';\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer, ConfigContext } from './context';\nimport { SizeContextProvider } from './SizeContext';\nexport { ConfigContext, ConfigConsumer };\nexport const configConsumerProps = [\n    'getPopupContainer',\n    'rootPrefixCls',\n    'getPrefixCls',\n    'renderEmpty',\n    'csp',\n    'autoInsertSpaceInButton',\n    'locale',\n    'pageHeader',\n];\nclass ConfigProvider extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getPrefixCls = (suffixCls, customizePrefixCls) => {\n            const { prefixCls = 'ant' } = this.props;\n            if (customizePrefixCls)\n                return customizePrefixCls;\n            return suffixCls ? `${prefixCls}-${suffixCls}` : prefixCls;\n        };\n        this.renderProvider = (context, legacyLocale) => {\n            const { children, getPopupContainer, renderEmpty, csp, autoInsertSpaceInButton, form, locale, pageHeader, componentSize, direction, } = this.props;\n            const config = Object.assign(Object.assign({}, context), { getPrefixCls: this.getPrefixCls, csp,\n                autoInsertSpaceInButton, locale: locale || legacyLocale, direction });\n            if (getPopupContainer) {\n                config.getPopupContainer = getPopupContainer;\n            }\n            if (renderEmpty) {\n                config.renderEmpty = renderEmpty;\n            }\n            if (pageHeader) {\n                config.pageHeader = pageHeader;\n            }\n            let childNode = children;\n            // Additional Form provider\n            if (form && form.validateMessages) {\n                childNode = (<RcFormProvider validateMessages={form.validateMessages}>{children}</RcFormProvider>);\n            }\n            return (<SizeContextProvider size={componentSize}>\n        <ConfigContext.Provider value={config}>\n          <LocaleProvider locale={locale || legacyLocale} _ANT_MARK__={ANT_MARK}>\n            {childNode}\n          </LocaleProvider>\n        </ConfigContext.Provider>\n      </SizeContextProvider>);\n        };\n    }\n    render() {\n        return (<LocaleReceiver>\n        {(_, __, legacyLocale) => (<ConfigConsumer>\n            {context => this.renderProvider(context, legacyLocale)}\n          </ConfigConsumer>)}\n      </LocaleReceiver>);\n    }\n}\nexport default ConfigProvider;\n"]},"metadata":{},"sourceType":"module"}