{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Radio from './radio';\nimport { ConfigConsumer } from '../config-provider';\nimport SizeContext from '../config-provider/SizeContext';\nimport { RadioGroupContextProvider } from './context';\n\nfunction getCheckedValue(children) {\n  var value = null;\n  var matched = false;\n  React.Children.forEach(children, function (radio) {\n    if (radio && radio.props && radio.props.checked) {\n      value = radio.props.value;\n      matched = true;\n    }\n  });\n  return matched ? {\n    value: value\n  } : undefined;\n}\n\nvar RadioGroup =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(RadioGroup, _React$PureComponent);\n\n  function RadioGroup(props) {\n    var _this;\n\n    _classCallCheck(this, RadioGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RadioGroup).call(this, props));\n\n    _this.onRadioChange = function (ev) {\n      var lastValue = _this.state.value;\n      var value = ev.target.value;\n\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: value\n        });\n      }\n\n      var onChange = _this.props.onChange;\n\n      if (onChange && value !== lastValue) {\n        onChange(ev);\n      }\n    };\n\n    _this.renderGroup = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls,\n          direction = _ref.direction;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props;\n\n      var customizePrefixCls = props.prefixCls,\n          _props$className = props.className,\n          className = _props$className === void 0 ? '' : _props$className,\n          options = props.options,\n          buttonStyle = props.buttonStyle,\n          customizeSize = props.size;\n      var prefixCls = getPrefixCls('radio', customizePrefixCls);\n      var groupPrefixCls = \"\".concat(prefixCls, \"-group\");\n      var children = props.children; // 如果存在 options, 优先使用\n\n      if (options && options.length > 0) {\n        children = options.map(function (option) {\n          if (typeof option === 'string') {\n            // 此处类型自动推导为 string\n            return React.createElement(Radio, {\n              key: option,\n              prefixCls: prefixCls,\n              disabled: _this.props.disabled,\n              value: option,\n              checked: _this.state.value === option\n            }, option);\n          } // 此处类型自动推导为 { label: string value: string }\n\n\n          return React.createElement(Radio, {\n            key: \"radio-group-value-options-\".concat(option.value),\n            prefixCls: prefixCls,\n            disabled: option.disabled || _this.props.disabled,\n            value: option.value,\n            checked: _this.state.value === option.value,\n            style: option.style\n          }, option.label);\n        });\n      }\n\n      return React.createElement(SizeContext.Consumer, null, function (size) {\n        var _classNames;\n\n        var mergedSize = customizeSize || size;\n        var classString = classNames(groupPrefixCls, \"\".concat(groupPrefixCls, \"-\").concat(buttonStyle), (_classNames = {}, _defineProperty(_classNames, \"\".concat(groupPrefixCls, \"-\").concat(mergedSize), mergedSize), _defineProperty(_classNames, \"\".concat(groupPrefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n        return React.createElement(\"div\", {\n          className: classString,\n          style: props.style,\n          onMouseEnter: props.onMouseEnter,\n          onMouseLeave: props.onMouseLeave,\n          id: props.id\n        }, children);\n      });\n    };\n\n    var value;\n\n    if ('value' in props) {\n      value = props.value;\n    } else if ('defaultValue' in props) {\n      value = props.defaultValue;\n    } else {\n      var checkedValue = getCheckedValue(props.children);\n      value = checkedValue && checkedValue.value;\n    }\n\n    _this.state = {\n      value: value\n    };\n    return _this;\n  }\n\n  _createClass(RadioGroup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RadioGroupContextProvider, {\n        value: {\n          onChange: this.onRadioChange,\n          value: this.state.value,\n          disabled: this.props.disabled,\n          name: this.props.name\n        }\n      }, React.createElement(ConfigConsumer, null, this.renderGroup));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('value' in nextProps) {\n        return {\n          value: nextProps.value\n        };\n      }\n\n      var checkedValue = getCheckedValue(nextProps.children);\n\n      if (checkedValue) {\n        return {\n          value: checkedValue.value\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return RadioGroup;\n}(React.PureComponent);\n\nRadioGroup.defaultProps = {\n  buttonStyle: 'outline'\n};\nexport default RadioGroup;","map":{"version":3,"sources":["radio/group.jsx"],"names":["value","matched","React","radio","RadioGroup","PureComponent","lastValue","ev","onChange","getPrefixCls","direction","props","customizePrefixCls","className","options","buttonStyle","customizeSize","prefixCls","groupPrefixCls","children","option","style","mergedSize","classString","classNames","id","checkedValue","getCheckedValue","nextProps","disabled","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport Radio from './radio';\nimport { ConfigConsumer } from '../config-provider';\nimport SizeContext from '../config-provider/SizeContext';\nimport { RadioGroupContextProvider } from './context';\nfunction getCheckedValue(children) {\n    let value = null;\n    let matched = false;\n    React.Children.forEach(children, (radio) => {\n        if (radio && radio.props && radio.props.checked) {\n            value = radio.props.value;\n            matched = true;\n        }\n    });\n    return matched ? { value } : undefined;\n}\nclass RadioGroup extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.onRadioChange = (ev) => {\n            const lastValue = this.state.value;\n            const { value } = ev.target;\n            if (!('value' in this.props)) {\n                this.setState({\n                    value,\n                });\n            }\n            const { onChange } = this.props;\n            if (onChange && value !== lastValue) {\n                onChange(ev);\n            }\n        };\n        this.renderGroup = ({ getPrefixCls, direction }) => {\n            const { props } = this;\n            const { prefixCls: customizePrefixCls, className = '', options, buttonStyle, size: customizeSize, } = props;\n            const prefixCls = getPrefixCls('radio', customizePrefixCls);\n            const groupPrefixCls = `${prefixCls}-group`;\n            let { children } = props;\n            // 如果存在 options, 优先使用\n            if (options && options.length > 0) {\n                children = options.map(option => {\n                    if (typeof option === 'string') {\n                        // 此处类型自动推导为 string\n                        return (<Radio key={option} prefixCls={prefixCls} disabled={this.props.disabled} value={option} checked={this.state.value === option}>\n              {option}\n            </Radio>);\n                    }\n                    // 此处类型自动推导为 { label: string value: string }\n                    return (<Radio key={`radio-group-value-options-${option.value}`} prefixCls={prefixCls} disabled={option.disabled || this.props.disabled} value={option.value} checked={this.state.value === option.value} style={option.style}>\n            {option.label}\n          </Radio>);\n                });\n            }\n            return (<SizeContext.Consumer>\n        {size => {\n                const mergedSize = customizeSize || size;\n                const classString = classNames(groupPrefixCls, `${groupPrefixCls}-${buttonStyle}`, {\n                    [`${groupPrefixCls}-${mergedSize}`]: mergedSize,\n                    [`${groupPrefixCls}-rtl`]: direction === 'rtl',\n                }, className);\n                return (<div className={classString} style={props.style} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave} id={props.id}>\n              {children}\n            </div>);\n            }}\n      </SizeContext.Consumer>);\n        };\n        let value;\n        if ('value' in props) {\n            value = props.value;\n        }\n        else if ('defaultValue' in props) {\n            value = props.defaultValue;\n        }\n        else {\n            const checkedValue = getCheckedValue(props.children);\n            value = checkedValue && checkedValue.value;\n        }\n        this.state = {\n            value,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value,\n            };\n        }\n        const checkedValue = getCheckedValue(nextProps.children);\n        if (checkedValue) {\n            return {\n                value: checkedValue.value,\n            };\n        }\n        return null;\n    }\n    render() {\n        return (<RadioGroupContextProvider value={{\n            onChange: this.onRadioChange,\n            value: this.state.value,\n            disabled: this.props.disabled,\n            name: this.props.name,\n        }}>\n        <ConfigConsumer>{this.renderGroup}</ConfigConsumer>\n      </RadioGroupContextProvider>);\n    }\n}\nRadioGroup.defaultProps = {\n    buttonStyle: 'outline',\n};\nexport default RadioGroup;\n"]},"metadata":{},"sourceType":"module"}